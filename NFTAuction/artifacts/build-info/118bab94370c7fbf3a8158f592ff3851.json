{
	"id": "118bab94370c7fbf3a8158f592ff3851",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTAuction.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n// upgrade contract\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract NFTAuction is Initializable {\n    // 初始化函数，替代构造函数\n    function initialize() public initializer {\n        admin = msg.sender;\n    }\n\n    // Auction contract code goes here\n    struct Auction {\n        address seller;\n        uint256 duration;\n        uint256 startTime;\n        uint256 startPrice;\n        bool ended;\n        address highestBidder;\n        uint256 highestBid;\n\n        // NFT 合约地址\n        address nftAddress;\n        // NFT 代币ID\n        uint256 tokenId;\n    }\n\n    // 状态变量\n    mapping(uint256 => Auction) public auctions;\n    uint256 public nextAuctionId;\n    address public admin;\n    uint256 public platformFee; // 平台手续费，单位为百分比（例如：2 表示 2%）\n    // constructor () {\n    //     admin = msg.sender;\n    // }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin can perform this action\");\n        _;\n    }\n    // 创建拍卖\n    function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {\n        require(_duration > 1000 * 60, \"Duration must be greater than 1 minute\");\n        require(_startPrice > 0, \"Start price must be greater than 0\");\n\n        auctions[nextAuctionId] = Auction({\n            seller: msg.sender,\n            duration: block.timestamp + _duration,\n            startTime: block.timestamp,\n            startPrice: _startPrice,\n            ended: false,\n            highestBidder: address(0),\n            highestBid: 0,\n            nftAddress: _nftAddress,\n            tokenId: _tokenId\n        });\n\n        nextAuctionId++;\n    }\n\n    // 买家参与拍卖\n    function placeBid(uint256 _auctionId) external payable {\n        Auction storage auction = auctions[_auctionId];\n        // 拍卖结束flag && 拍卖时间未到\n        require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \"Auction has ended\");\n        require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \"Bid must be higher than current highest bid\");\n\n        // Refund the previous highest bidder\n        if (auction.highestBidder != address(0)) {\n            payable(auction.highestBidder).transfer(auction.highestBid);\n        }\n\n        auction.highestBidder = msg.sender;\n        auction.highestBid = msg.value;\n    }\n\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTAuction.sol": {
				"NFTAuction": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "auctions",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "ended",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "highestBidder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "highestBid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "createAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextAuctionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_auctionId",
									"type": "uint256"
								}
							],
							"name": "placeBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTAuction.sol\":213:2565  contract NFTAuction is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTAuction.sol\":213:2565  contract NFTAuction is Initializable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9979ef45\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x9979ef45\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb1cb48ef\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc528482\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x26232a2e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x571a26a0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/NFTAuction.sol\":868:894  uint256 public platformFee */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTAuction.sol\":759:802  mapping(uint256 => Auction) public auctions */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTAuction.sol\":300:376  function initialize() public initializer {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/NFTAuction.sol\":1885:2562  function placeBid(uint256 _auctionId) external payable {... */\n    tag_5:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/NFTAuction.sol\":1171:1853  function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/NFTAuction.sol\":842:862  address public admin */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTAuction.sol\":808:836  uint256 public nextAuctionId */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTAuction.sol\":868:894  uint256 public platformFee */\n    tag_12:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTAuction.sol\":759:802  mapping(uint256 => Auction) public auctions */\n    tag_19:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      pop\n      dup10\n      jump\t// out\n        /* \"contracts/NFTAuction.sol\":300:376  function initialize() public initializer {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_43\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_44\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_45:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_46\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_47\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_49:\n        /* \"contracts/NFTAuction.sol\":359:369  msg.sender */\n      caller\n        /* \"contracts/NFTAuction.sol\":351:356  admin */\n      0x02\n      0x00\n        /* \"contracts/NFTAuction.sol\":351:369  admin = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTAuction.sol\":300:376  function initialize() public initializer {... */\n      jump\t// out\n        /* \"contracts/NFTAuction.sol\":1885:2562  function placeBid(uint256 _auctionId) external payable {... */\n    tag_27:\n        /* \"contracts/NFTAuction.sol\":1950:1973  Auction storage auction */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1976:1984  auctions */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1976:1996  auctions[_auctionId] */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1985:1995  _auctionId */\n      dup4\n        /* \"contracts/NFTAuction.sol\":1976:1996  auctions[_auctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTAuction.sol\":1950:1996  Auction storage auction = auctions[_auctionId] */\n      swap1\n      pop\n        /* \"contracts/NFTAuction.sol\":2065:2072  auction */\n      dup1\n        /* \"contracts/NFTAuction.sol\":2065:2078  auction.ended */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTAuction.sol\":2064:2078  !auction.ended */\n      iszero\n        /* \"contracts/NFTAuction.sol\":2064:2136  !auction.ended && auction.startTime + auction.duration > block.timestamp */\n      dup1\n      iszero\n      tag_55\n      jumpi\n      pop\n        /* \"contracts/NFTAuction.sol\":2121:2136  block.timestamp */\n      timestamp\n        /* \"contracts/NFTAuction.sol\":2102:2109  auction */\n      dup2\n        /* \"contracts/NFTAuction.sol\":2102:2118  auction.duration */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTAuction.sol\":2082:2089  auction */\n      dup3\n        /* \"contracts/NFTAuction.sol\":2082:2099  auction.startTime */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTAuction.sol\":2082:2118  auction.startTime + auction.duration */\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/NFTAuction.sol\":2082:2136  auction.startTime + auction.duration > block.timestamp */\n      gt\n        /* \"contracts/NFTAuction.sol\":2064:2136  !auction.ended && auction.startTime + auction.duration > block.timestamp */\n    tag_55:\n        /* \"contracts/NFTAuction.sol\":2056:2158  require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \"Auction has ended\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"contracts/NFTAuction.sol\":2188:2195  auction */\n      dup1\n        /* \"contracts/NFTAuction.sol\":2188:2206  auction.highestBid */\n      0x05\n      add\n      sload\n        /* \"contracts/NFTAuction.sol\":2176:2185  msg.value */\n      callvalue\n        /* \"contracts/NFTAuction.sol\":2176:2206  msg.value > auction.highestBid */\n      gt\n        /* \"contracts/NFTAuction.sol\":2176:2241  msg.value > auction.highestBid && msg.value >= auction.startPrice */\n      dup1\n      iszero\n      tag_61\n      jumpi\n      pop\n        /* \"contracts/NFTAuction.sol\":2223:2230  auction */\n      dup1\n        /* \"contracts/NFTAuction.sol\":2223:2241  auction.startPrice */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTAuction.sol\":2210:2219  msg.value */\n      callvalue\n        /* \"contracts/NFTAuction.sol\":2210:2241  msg.value >= auction.startPrice */\n      lt\n      iszero\n        /* \"contracts/NFTAuction.sol\":2176:2241  msg.value > auction.highestBid && msg.value >= auction.startPrice */\n    tag_61:\n        /* \"contracts/NFTAuction.sol\":2168:2289  require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \"Bid must be higher than current highest bid\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"contracts/NFTAuction.sol\":2383:2384  0 */\n      0x00\n        /* \"contracts/NFTAuction.sol\":2350:2385  auction.highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTAuction.sol\":2350:2357  auction */\n      dup2\n        /* \"contracts/NFTAuction.sol\":2350:2371  auction.highestBidder */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTAuction.sol\":2350:2385  auction.highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTAuction.sol\":2346:2471  if (auction.highestBidder != address(0)) {... */\n      tag_65\n      jumpi\n        /* \"contracts/NFTAuction.sol\":2409:2416  auction */\n      dup1\n        /* \"contracts/NFTAuction.sol\":2409:2430  auction.highestBidder */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTAuction.sol\":2401:2440  payable(auction.highestBidder).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTAuction.sol\":2401:2460  payable(auction.highestBidder).transfer(auction.highestBid) */\n      0x08fc\n        /* \"contracts/NFTAuction.sol\":2441:2448  auction */\n      dup3\n        /* \"contracts/NFTAuction.sol\":2441:2459  auction.highestBid */\n      0x05\n      add\n      sload\n        /* \"contracts/NFTAuction.sol\":2401:2460  payable(auction.highestBidder).transfer(auction.highestBid) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n        /* \"contracts/NFTAuction.sol\":2346:2471  if (auction.highestBidder != address(0)) {... */\n    tag_65:\n        /* \"contracts/NFTAuction.sol\":2505:2515  msg.sender */\n      caller\n        /* \"contracts/NFTAuction.sol\":2481:2488  auction */\n      dup2\n        /* \"contracts/NFTAuction.sol\":2481:2502  auction.highestBidder */\n      0x04\n      add\n      0x01\n        /* \"contracts/NFTAuction.sol\":2481:2515  auction.highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTAuction.sol\":2546:2555  msg.value */\n      callvalue\n        /* \"contracts/NFTAuction.sol\":2525:2532  auction */\n      dup2\n        /* \"contracts/NFTAuction.sol\":2525:2543  auction.highestBid */\n      0x05\n      add\n        /* \"contracts/NFTAuction.sol\":2525:2555  auction.highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTAuction.sol\":1940:2562  {... */\n      pop\n        /* \"contracts/NFTAuction.sol\":1885:2562  function placeBid(uint256 _auctionId) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTAuction.sol\":1171:1853  function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {... */\n    tag_32:\n        /* \"contracts/NFTAuction.sol\":1084:1089  admin */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTAuction.sol\":1070:1089  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTAuction.sol\":1070:1080  msg.sender */\n      caller\n        /* \"contracts/NFTAuction.sol\":1070:1089  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTAuction.sol\":1062:1128  require(msg.sender == admin, \"Only admin can perform this action\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/NFTAuction.sol\":1320:1329  1000 * 60 */\n      0xea60\n        /* \"contracts/NFTAuction.sol\":1308:1317  _duration */\n      dup5\n        /* \"contracts/NFTAuction.sol\":1308:1329  _duration > 1000 * 60 */\n      gt\n        /* \"contracts/NFTAuction.sol\":1300:1372  require(_duration > 1000 * 60, \"Duration must be greater than 1 minute\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"contracts/NFTAuction.sol\":1404:1405  0 */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1390:1401  _startPrice */\n      dup4\n        /* \"contracts/NFTAuction.sol\":1390:1405  _startPrice > 0 */\n      gt\n        /* \"contracts/NFTAuction.sol\":1382:1444  require(_startPrice > 0, \"Start price must be greater than 0\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTAuction.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1563:1572  _duration */\n      dup6\n        /* \"contracts/NFTAuction.sol\":1545:1560  block.timestamp */\n      timestamp\n        /* \"contracts/NFTAuction.sol\":1545:1572  block.timestamp + _duration */\n      tag_79\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_79:\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1597:1612  block.timestamp */\n      timestamp\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1638:1649  _startPrice */\n      dup5\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1670:1675  false */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1712:1713  0 */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1740:1741  0 */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1767:1778  _nftAddress */\n      dup4\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTAuction.sol\":1801:1809  _tokenId */\n      dup3\n        /* \"contracts/NFTAuction.sol\":1481:1820  Auction({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTAuction.sol\":1455:1463  auctions */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1455:1478  auctions[nextAuctionId] */\n      0x00\n        /* \"contracts/NFTAuction.sol\":1464:1477  nextAuctionId */\n      sload(0x01)\n        /* \"contracts/NFTAuction.sol\":1455:1478  auctions[nextAuctionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTAuction.sol\":1455:1820  auctions[nextAuctionId] = Auction({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0100\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/NFTAuction.sol\":1831:1844  nextAuctionId */\n      0x01\n      0x00\n        /* \"contracts/NFTAuction.sol\":1831:1846  nextAuctionId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NFTAuction.sol\":1171:1853  function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTAuction.sol\":842:862  address public admin */\n    tag_35:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTAuction.sol\":808:836  uint256 public nextAuctionId */\n    tag_40:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_86:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_87:\n        /* \"#utility.yul\":177:201   */\n      tag_120\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_86\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_122\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_87\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_89:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_91:\n        /* \"#utility.yul\":842:866   */\n      tag_127\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_86\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_128:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_92:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_130\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_91\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_18:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_133\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1118:1237   */\n    tag_132:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_134\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_92\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_93:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_94:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_137\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_93\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_95:\n        /* \"#utility.yul\":1698:1722   */\n      tag_139\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_94\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1825   */\n    tag_96:\n        /* \"#utility.yul\":1769:1776   */\n      0x00\n        /* \"#utility.yul\":1812:1817   */\n      dup2\n        /* \"#utility.yul\":1805:1818   */\n      iszero\n        /* \"#utility.yul\":1798:1819   */\n      iszero\n        /* \"#utility.yul\":1787:1819   */\n      swap1\n      pop\n        /* \"#utility.yul\":1735:1825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1940   */\n    tag_97:\n        /* \"#utility.yul\":1912:1933   */\n      tag_142\n        /* \"#utility.yul\":1927:1932   */\n      dup2\n        /* \"#utility.yul\":1912:1933   */\n      tag_96\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1907:1910   */\n      dup3\n        /* \"#utility.yul\":1900:1934   */\n      mstore\n        /* \"#utility.yul\":1831:1940   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:3042   */\n    tag_21:\n        /* \"#utility.yul\":2257:2261   */\n      0x00\n        /* \"#utility.yul\":2295:2298   */\n      0x0120\n        /* \"#utility.yul\":2284:2293   */\n      dup3\n        /* \"#utility.yul\":2280:2299   */\n      add\n        /* \"#utility.yul\":2272:2299   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2380   */\n      tag_144\n        /* \"#utility.yul\":2377:2378   */\n      0x00\n        /* \"#utility.yul\":2366:2375   */\n      dup4\n        /* \"#utility.yul\":2362:2379   */\n      add\n        /* \"#utility.yul\":2353:2359   */\n      dup13\n        /* \"#utility.yul\":2309:2380   */\n      tag_95\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2390:2462   */\n      tag_145\n        /* \"#utility.yul\":2458:2460   */\n      0x20\n        /* \"#utility.yul\":2447:2456   */\n      dup4\n        /* \"#utility.yul\":2443:2461   */\n      add\n        /* \"#utility.yul\":2434:2440   */\n      dup12\n        /* \"#utility.yul\":2390:2462   */\n      tag_87\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2472:2544   */\n      tag_146\n        /* \"#utility.yul\":2540:2542   */\n      0x40\n        /* \"#utility.yul\":2529:2538   */\n      dup4\n        /* \"#utility.yul\":2525:2543   */\n      add\n        /* \"#utility.yul\":2516:2522   */\n      dup11\n        /* \"#utility.yul\":2472:2544   */\n      tag_87\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2554:2626   */\n      tag_147\n        /* \"#utility.yul\":2622:2624   */\n      0x60\n        /* \"#utility.yul\":2611:2620   */\n      dup4\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2598:2604   */\n      dup10\n        /* \"#utility.yul\":2554:2626   */\n      tag_87\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2636:2703   */\n      tag_148\n        /* \"#utility.yul\":2698:2701   */\n      0x80\n        /* \"#utility.yul\":2687:2696   */\n      dup4\n        /* \"#utility.yul\":2683:2702   */\n      add\n        /* \"#utility.yul\":2674:2680   */\n      dup9\n        /* \"#utility.yul\":2636:2703   */\n      tag_97\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2713:2786   */\n      tag_149\n        /* \"#utility.yul\":2781:2784   */\n      0xa0\n        /* \"#utility.yul\":2770:2779   */\n      dup4\n        /* \"#utility.yul\":2766:2785   */\n      add\n        /* \"#utility.yul\":2757:2763   */\n      dup8\n        /* \"#utility.yul\":2713:2786   */\n      tag_95\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2796:2869   */\n      tag_150\n        /* \"#utility.yul\":2864:2867   */\n      0xc0\n        /* \"#utility.yul\":2853:2862   */\n      dup4\n        /* \"#utility.yul\":2849:2868   */\n      add\n        /* \"#utility.yul\":2840:2846   */\n      dup7\n        /* \"#utility.yul\":2796:2869   */\n      tag_87\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2879:2952   */\n      tag_151\n        /* \"#utility.yul\":2947:2950   */\n      0xe0\n        /* \"#utility.yul\":2936:2945   */\n      dup4\n        /* \"#utility.yul\":2932:2951   */\n      add\n        /* \"#utility.yul\":2923:2929   */\n      dup6\n        /* \"#utility.yul\":2879:2952   */\n      tag_95\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2962:3035   */\n      tag_152\n        /* \"#utility.yul\":3030:3033   */\n      0x0100\n        /* \"#utility.yul\":3019:3028   */\n      dup4\n        /* \"#utility.yul\":3015:3034   */\n      add\n        /* \"#utility.yul\":3006:3012   */\n      dup5\n        /* \"#utility.yul\":2962:3035   */\n      tag_87\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1946:3042   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3170   */\n    tag_98:\n        /* \"#utility.yul\":3121:3145   */\n      tag_154\n        /* \"#utility.yul\":3139:3144   */\n      dup2\n        /* \"#utility.yul\":3121:3145   */\n      tag_94\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3114:3119   */\n      dup2\n        /* \"#utility.yul\":3111:3146   */\n      eq\n        /* \"#utility.yul\":3101:3164   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":3160:3161   */\n      0x00\n        /* \"#utility.yul\":3157:3158   */\n      0x00\n        /* \"#utility.yul\":3150:3162   */\n      revert\n        /* \"#utility.yul\":3101:3164   */\n    tag_155:\n        /* \"#utility.yul\":3048:3170   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:3315   */\n    tag_99:\n        /* \"#utility.yul\":3222:3227   */\n      0x00\n        /* \"#utility.yul\":3260:3266   */\n      dup2\n        /* \"#utility.yul\":3247:3267   */\n      calldataload\n        /* \"#utility.yul\":3238:3267   */\n      swap1\n      pop\n        /* \"#utility.yul\":3276:3309   */\n      tag_157\n        /* \"#utility.yul\":3303:3308   */\n      dup2\n        /* \"#utility.yul\":3276:3309   */\n      tag_98\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3176:3315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3321:4086   */\n    tag_31:\n        /* \"#utility.yul\":3407:3413   */\n      0x00\n        /* \"#utility.yul\":3415:3421   */\n      0x00\n        /* \"#utility.yul\":3423:3429   */\n      0x00\n        /* \"#utility.yul\":3431:3437   */\n      0x00\n        /* \"#utility.yul\":3480:3483   */\n      0x80\n        /* \"#utility.yul\":3468:3477   */\n      dup6\n        /* \"#utility.yul\":3459:3466   */\n      dup8\n        /* \"#utility.yul\":3455:3478   */\n      sub\n        /* \"#utility.yul\":3451:3484   */\n      slt\n        /* \"#utility.yul\":3448:3568   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3487:3566   */\n      tag_160\n      tag_89\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3448:3568   */\n    tag_159:\n        /* \"#utility.yul\":3607:3608   */\n      0x00\n        /* \"#utility.yul\":3632:3685   */\n      tag_161\n        /* \"#utility.yul\":3677:3684   */\n      dup8\n        /* \"#utility.yul\":3668:3674   */\n      dup3\n        /* \"#utility.yul\":3657:3666   */\n      dup9\n        /* \"#utility.yul\":3653:3675   */\n      add\n        /* \"#utility.yul\":3632:3685   */\n      tag_92\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3622:3685   */\n      swap5\n      pop\n        /* \"#utility.yul\":3578:3695   */\n      pop\n        /* \"#utility.yul\":3734:3736   */\n      0x20\n        /* \"#utility.yul\":3760:3813   */\n      tag_162\n        /* \"#utility.yul\":3805:3812   */\n      dup8\n        /* \"#utility.yul\":3796:3802   */\n      dup3\n        /* \"#utility.yul\":3785:3794   */\n      dup9\n        /* \"#utility.yul\":3781:3803   */\n      add\n        /* \"#utility.yul\":3760:3813   */\n      tag_92\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3750:3813   */\n      swap4\n      pop\n        /* \"#utility.yul\":3705:3823   */\n      pop\n        /* \"#utility.yul\":3862:3864   */\n      0x40\n        /* \"#utility.yul\":3888:3941   */\n      tag_163\n        /* \"#utility.yul\":3933:3940   */\n      dup8\n        /* \"#utility.yul\":3924:3930   */\n      dup3\n        /* \"#utility.yul\":3913:3922   */\n      dup9\n        /* \"#utility.yul\":3909:3931   */\n      add\n        /* \"#utility.yul\":3888:3941   */\n      tag_99\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3878:3941   */\n      swap3\n      pop\n        /* \"#utility.yul\":3833:3951   */\n      pop\n        /* \"#utility.yul\":3990:3992   */\n      0x60\n        /* \"#utility.yul\":4016:4069   */\n      tag_164\n        /* \"#utility.yul\":4061:4068   */\n      dup8\n        /* \"#utility.yul\":4052:4058   */\n      dup3\n        /* \"#utility.yul\":4041:4050   */\n      dup9\n        /* \"#utility.yul\":4037:4059   */\n      add\n        /* \"#utility.yul\":4016:4069   */\n      tag_92\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4006:4069   */\n      swap2\n      pop\n        /* \"#utility.yul\":3961:4079   */\n      pop\n        /* \"#utility.yul\":3321:4086   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4092:4314   */\n    tag_37:\n        /* \"#utility.yul\":4185:4189   */\n      0x00\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4212:4221   */\n      dup3\n        /* \"#utility.yul\":4208:4226   */\n      add\n        /* \"#utility.yul\":4200:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4236:4307   */\n      tag_166\n        /* \"#utility.yul\":4304:4305   */\n      0x00\n        /* \"#utility.yul\":4293:4302   */\n      dup4\n        /* \"#utility.yul\":4289:4306   */\n      add\n        /* \"#utility.yul\":4280:4286   */\n      dup5\n        /* \"#utility.yul\":4236:4307   */\n      tag_95\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4092:4314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4320:4405   */\n    tag_100:\n        /* \"#utility.yul\":4365:4372   */\n      0x00\n        /* \"#utility.yul\":4394:4399   */\n      dup2\n        /* \"#utility.yul\":4383:4399   */\n      swap1\n      pop\n        /* \"#utility.yul\":4320:4405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4411:4512   */\n    tag_101:\n        /* \"#utility.yul\":4447:4454   */\n      0x00\n        /* \"#utility.yul\":4487:4505   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4480:4485   */\n      dup3\n        /* \"#utility.yul\":4476:4506   */\n      and\n        /* \"#utility.yul\":4465:4506   */\n      swap1\n      pop\n        /* \"#utility.yul\":4411:4512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4518:4578   */\n    tag_102:\n        /* \"#utility.yul\":4546:4549   */\n      0x00\n        /* \"#utility.yul\":4567:4572   */\n      dup2\n        /* \"#utility.yul\":4560:4572   */\n      swap1\n      pop\n        /* \"#utility.yul\":4518:4578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4584:4740   */\n    tag_103:\n        /* \"#utility.yul\":4641:4650   */\n      0x00\n        /* \"#utility.yul\":4674:4734   */\n      tag_171\n        /* \"#utility.yul\":4691:4733   */\n      tag_172\n        /* \"#utility.yul\":4700:4732   */\n      tag_173\n        /* \"#utility.yul\":4726:4731   */\n      dup5\n        /* \"#utility.yul\":4700:4732   */\n      tag_100\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4691:4733   */\n      tag_102\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4674:4734   */\n      tag_101\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4661:4734   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4891   */\n    tag_104:\n        /* \"#utility.yul\":4840:4884   */\n      tag_175\n        /* \"#utility.yul\":4878:4883   */\n      dup2\n        /* \"#utility.yul\":4840:4884   */\n      tag_103\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4835:4838   */\n      dup3\n        /* \"#utility.yul\":4828:4885   */\n      mstore\n        /* \"#utility.yul\":4746:4891   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4897:5133   */\n    tag_53:\n        /* \"#utility.yul\":4997:5001   */\n      0x00\n        /* \"#utility.yul\":5035:5037   */\n      0x20\n        /* \"#utility.yul\":5024:5033   */\n      dup3\n        /* \"#utility.yul\":5020:5038   */\n      add\n        /* \"#utility.yul\":5012:5038   */\n      swap1\n      pop\n        /* \"#utility.yul\":5048:5126   */\n      tag_177\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5112:5121   */\n      dup4\n        /* \"#utility.yul\":5108:5125   */\n      add\n        /* \"#utility.yul\":5099:5105   */\n      dup5\n        /* \"#utility.yul\":5048:5126   */\n      tag_104\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4897:5133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5139:5319   */\n    tag_105:\n        /* \"#utility.yul\":5187:5264   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5184:5185   */\n      0x00\n        /* \"#utility.yul\":5177:5265   */\n      mstore\n        /* \"#utility.yul\":5284:5288   */\n      0x11\n        /* \"#utility.yul\":5281:5282   */\n      0x04\n        /* \"#utility.yul\":5274:5289   */\n      mstore\n        /* \"#utility.yul\":5308:5312   */\n      0x24\n        /* \"#utility.yul\":5305:5306   */\n      0x00\n        /* \"#utility.yul\":5298:5313   */\n      revert\n        /* \"#utility.yul\":5325:5516   */\n    tag_57:\n        /* \"#utility.yul\":5365:5368   */\n      0x00\n        /* \"#utility.yul\":5384:5404   */\n      tag_180\n        /* \"#utility.yul\":5402:5403   */\n      dup3\n        /* \"#utility.yul\":5384:5404   */\n      tag_86\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5379:5404   */\n      swap2\n      pop\n        /* \"#utility.yul\":5418:5438   */\n      tag_181\n        /* \"#utility.yul\":5436:5437   */\n      dup4\n        /* \"#utility.yul\":5418:5438   */\n      tag_86\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5413:5438   */\n      swap3\n      pop\n        /* \"#utility.yul\":5461:5462   */\n      dup3\n        /* \"#utility.yul\":5458:5459   */\n      dup3\n        /* \"#utility.yul\":5454:5463   */\n      add\n        /* \"#utility.yul\":5447:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5482:5485   */\n      dup1\n        /* \"#utility.yul\":5479:5480   */\n      dup3\n        /* \"#utility.yul\":5476:5486   */\n      gt\n        /* \"#utility.yul\":5473:5509   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5489:5507   */\n      tag_183\n      tag_105\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5473:5509   */\n    tag_182:\n        /* \"#utility.yul\":5325:5516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5522:5691   */\n    tag_106:\n        /* \"#utility.yul\":5606:5617   */\n      0x00\n        /* \"#utility.yul\":5640:5646   */\n      dup3\n        /* \"#utility.yul\":5635:5638   */\n      dup3\n        /* \"#utility.yul\":5628:5647   */\n      mstore\n        /* \"#utility.yul\":5680:5684   */\n      0x20\n        /* \"#utility.yul\":5675:5678   */\n      dup3\n        /* \"#utility.yul\":5671:5685   */\n      add\n        /* \"#utility.yul\":5656:5685   */\n      swap1\n      pop\n        /* \"#utility.yul\":5522:5691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:5864   */\n    tag_107:\n        /* \"#utility.yul\":5837:5856   */\n      0x41756374696f6e2068617320656e646564000000000000000000000000000000\n        /* \"#utility.yul\":5833:5834   */\n      0x00\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5821:5835   */\n      add\n        /* \"#utility.yul\":5814:5857   */\n      mstore\n        /* \"#utility.yul\":5697:5864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5870:6236   */\n    tag_108:\n        /* \"#utility.yul\":6012:6015   */\n      0x00\n        /* \"#utility.yul\":6033:6100   */\n      tag_187\n        /* \"#utility.yul\":6097:6099   */\n      0x11\n        /* \"#utility.yul\":6092:6095   */\n      dup4\n        /* \"#utility.yul\":6033:6100   */\n      tag_106\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6026:6100   */\n      swap2\n      pop\n        /* \"#utility.yul\":6109:6202   */\n      tag_188\n        /* \"#utility.yul\":6198:6201   */\n      dup3\n        /* \"#utility.yul\":6109:6202   */\n      tag_107\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6227:6229   */\n      0x20\n        /* \"#utility.yul\":6222:6225   */\n      dup3\n        /* \"#utility.yul\":6218:6230   */\n      add\n        /* \"#utility.yul\":6211:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":5870:6236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6242:6661   */\n    tag_60:\n        /* \"#utility.yul\":6408:6412   */\n      0x00\n        /* \"#utility.yul\":6446:6448   */\n      0x20\n        /* \"#utility.yul\":6435:6444   */\n      dup3\n        /* \"#utility.yul\":6431:6449   */\n      add\n        /* \"#utility.yul\":6423:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6495:6504   */\n      dup2\n        /* \"#utility.yul\":6489:6493   */\n      dup2\n        /* \"#utility.yul\":6485:6505   */\n      sub\n        /* \"#utility.yul\":6481:6482   */\n      0x00\n        /* \"#utility.yul\":6470:6479   */\n      dup4\n        /* \"#utility.yul\":6466:6483   */\n      add\n        /* \"#utility.yul\":6459:6506   */\n      mstore\n        /* \"#utility.yul\":6523:6654   */\n      tag_190\n        /* \"#utility.yul\":6649:6653   */\n      dup2\n        /* \"#utility.yul\":6523:6654   */\n      tag_108\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6515:6654   */\n      swap1\n      pop\n        /* \"#utility.yul\":6242:6661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:6897   */\n    tag_109:\n        /* \"#utility.yul\":6807:6841   */\n      0x426964206d75737420626520686967686572207468616e2063757272656e7420\n        /* \"#utility.yul\":6803:6804   */\n      0x00\n        /* \"#utility.yul\":6795:6801   */\n      dup3\n        /* \"#utility.yul\":6791:6805   */\n      add\n        /* \"#utility.yul\":6784:6842   */\n      mstore\n        /* \"#utility.yul\":6876:6889   */\n      0x6869676865737420626964000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6871:6873   */\n      0x20\n        /* \"#utility.yul\":6863:6869   */\n      dup3\n        /* \"#utility.yul\":6859:6874   */\n      add\n        /* \"#utility.yul\":6852:6890   */\n      mstore\n        /* \"#utility.yul\":6667:6897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6903:7269   */\n    tag_110:\n        /* \"#utility.yul\":7045:7048   */\n      0x00\n        /* \"#utility.yul\":7066:7133   */\n      tag_193\n        /* \"#utility.yul\":7130:7132   */\n      0x2b\n        /* \"#utility.yul\":7125:7128   */\n      dup4\n        /* \"#utility.yul\":7066:7133   */\n      tag_106\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7059:7133   */\n      swap2\n      pop\n        /* \"#utility.yul\":7142:7235   */\n      tag_194\n        /* \"#utility.yul\":7231:7234   */\n      dup3\n        /* \"#utility.yul\":7142:7235   */\n      tag_109\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7255:7258   */\n      dup3\n        /* \"#utility.yul\":7251:7263   */\n      add\n        /* \"#utility.yul\":7244:7263   */\n      swap1\n      pop\n        /* \"#utility.yul\":6903:7269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7275:7694   */\n    tag_64:\n        /* \"#utility.yul\":7441:7445   */\n      0x00\n        /* \"#utility.yul\":7479:7481   */\n      0x20\n        /* \"#utility.yul\":7468:7477   */\n      dup3\n        /* \"#utility.yul\":7464:7482   */\n      add\n        /* \"#utility.yul\":7456:7482   */\n      swap1\n      pop\n        /* \"#utility.yul\":7528:7537   */\n      dup2\n        /* \"#utility.yul\":7522:7526   */\n      dup2\n        /* \"#utility.yul\":7518:7538   */\n      sub\n        /* \"#utility.yul\":7514:7515   */\n      0x00\n        /* \"#utility.yul\":7503:7512   */\n      dup4\n        /* \"#utility.yul\":7499:7516   */\n      add\n        /* \"#utility.yul\":7492:7539   */\n      mstore\n        /* \"#utility.yul\":7556:7687   */\n      tag_196\n        /* \"#utility.yul\":7682:7686   */\n      dup2\n        /* \"#utility.yul\":7556:7687   */\n      tag_110\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7548:7687   */\n      swap1\n      pop\n        /* \"#utility.yul\":7275:7694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7700:7921   */\n    tag_111:\n        /* \"#utility.yul\":7840:7874   */\n      0x4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469\n        /* \"#utility.yul\":7836:7837   */\n      0x00\n        /* \"#utility.yul\":7828:7834   */\n      dup3\n        /* \"#utility.yul\":7824:7838   */\n      add\n        /* \"#utility.yul\":7817:7875   */\n      mstore\n        /* \"#utility.yul\":7909:7913   */\n      0x6f6e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7904:7906   */\n      0x20\n        /* \"#utility.yul\":7896:7902   */\n      dup3\n        /* \"#utility.yul\":7892:7907   */\n      add\n        /* \"#utility.yul\":7885:7914   */\n      mstore\n        /* \"#utility.yul\":7700:7921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7927:8293   */\n    tag_112:\n        /* \"#utility.yul\":8069:8072   */\n      0x00\n        /* \"#utility.yul\":8090:8157   */\n      tag_199\n        /* \"#utility.yul\":8154:8156   */\n      0x22\n        /* \"#utility.yul\":8149:8152   */\n      dup4\n        /* \"#utility.yul\":8090:8157   */\n      tag_106\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8083:8157   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8259   */\n      tag_200\n        /* \"#utility.yul\":8255:8258   */\n      dup3\n        /* \"#utility.yul\":8166:8259   */\n      tag_111\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8284:8286   */\n      0x40\n        /* \"#utility.yul\":8279:8282   */\n      dup3\n        /* \"#utility.yul\":8275:8287   */\n      add\n        /* \"#utility.yul\":8268:8287   */\n      swap1\n      pop\n        /* \"#utility.yul\":7927:8293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8718   */\n    tag_71:\n        /* \"#utility.yul\":8465:8469   */\n      0x00\n        /* \"#utility.yul\":8503:8505   */\n      0x20\n        /* \"#utility.yul\":8492:8501   */\n      dup3\n        /* \"#utility.yul\":8488:8506   */\n      add\n        /* \"#utility.yul\":8480:8506   */\n      swap1\n      pop\n        /* \"#utility.yul\":8552:8561   */\n      dup2\n        /* \"#utility.yul\":8546:8550   */\n      dup2\n        /* \"#utility.yul\":8542:8562   */\n      sub\n        /* \"#utility.yul\":8538:8539   */\n      0x00\n        /* \"#utility.yul\":8527:8536   */\n      dup4\n        /* \"#utility.yul\":8523:8540   */\n      add\n        /* \"#utility.yul\":8516:8563   */\n      mstore\n        /* \"#utility.yul\":8580:8711   */\n      tag_202\n        /* \"#utility.yul\":8706:8710   */\n      dup2\n        /* \"#utility.yul\":8580:8711   */\n      tag_112\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8572:8711   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8724:8949   */\n    tag_113:\n        /* \"#utility.yul\":8864:8898   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e203120\n        /* \"#utility.yul\":8860:8861   */\n      0x00\n        /* \"#utility.yul\":8852:8858   */\n      dup3\n        /* \"#utility.yul\":8848:8862   */\n      add\n        /* \"#utility.yul\":8841:8899   */\n      mstore\n        /* \"#utility.yul\":8933:8941   */\n      0x6d696e7574650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8928:8930   */\n      0x20\n        /* \"#utility.yul\":8920:8926   */\n      dup3\n        /* \"#utility.yul\":8916:8931   */\n      add\n        /* \"#utility.yul\":8909:8942   */\n      mstore\n        /* \"#utility.yul\":8724:8949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8955:9321   */\n    tag_114:\n        /* \"#utility.yul\":9097:9100   */\n      0x00\n        /* \"#utility.yul\":9118:9185   */\n      tag_205\n        /* \"#utility.yul\":9182:9184   */\n      0x26\n        /* \"#utility.yul\":9177:9180   */\n      dup4\n        /* \"#utility.yul\":9118:9185   */\n      tag_106\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":9111:9185   */\n      swap2\n      pop\n        /* \"#utility.yul\":9194:9287   */\n      tag_206\n        /* \"#utility.yul\":9283:9286   */\n      dup3\n        /* \"#utility.yul\":9194:9287   */\n      tag_113\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9312:9314   */\n      0x40\n        /* \"#utility.yul\":9307:9310   */\n      dup3\n        /* \"#utility.yul\":9303:9315   */\n      add\n        /* \"#utility.yul\":9296:9315   */\n      swap1\n      pop\n        /* \"#utility.yul\":8955:9321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9327:9746   */\n    tag_75:\n        /* \"#utility.yul\":9493:9497   */\n      0x00\n        /* \"#utility.yul\":9531:9533   */\n      0x20\n        /* \"#utility.yul\":9520:9529   */\n      dup3\n        /* \"#utility.yul\":9516:9534   */\n      add\n        /* \"#utility.yul\":9508:9534   */\n      swap1\n      pop\n        /* \"#utility.yul\":9580:9589   */\n      dup2\n        /* \"#utility.yul\":9574:9578   */\n      dup2\n        /* \"#utility.yul\":9570:9590   */\n      sub\n        /* \"#utility.yul\":9566:9567   */\n      0x00\n        /* \"#utility.yul\":9555:9564   */\n      dup4\n        /* \"#utility.yul\":9551:9568   */\n      add\n        /* \"#utility.yul\":9544:9591   */\n      mstore\n        /* \"#utility.yul\":9608:9739   */\n      tag_208\n        /* \"#utility.yul\":9734:9738   */\n      dup2\n        /* \"#utility.yul\":9608:9739   */\n      tag_114\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9600:9739   */\n      swap1\n      pop\n        /* \"#utility.yul\":9327:9746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9752:9973   */\n    tag_115:\n        /* \"#utility.yul\":9892:9926   */\n      0x5374617274207072696365206d7573742062652067726561746572207468616e\n        /* \"#utility.yul\":9888:9889   */\n      0x00\n        /* \"#utility.yul\":9880:9886   */\n      dup3\n        /* \"#utility.yul\":9876:9890   */\n      add\n        /* \"#utility.yul\":9869:9927   */\n      mstore\n        /* \"#utility.yul\":9961:9965   */\n      0x2030000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9956:9958   */\n      0x20\n        /* \"#utility.yul\":9948:9954   */\n      dup3\n        /* \"#utility.yul\":9944:9959   */\n      add\n        /* \"#utility.yul\":9937:9966   */\n      mstore\n        /* \"#utility.yul\":9752:9973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10345   */\n    tag_116:\n        /* \"#utility.yul\":10121:10124   */\n      0x00\n        /* \"#utility.yul\":10142:10209   */\n      tag_211\n        /* \"#utility.yul\":10206:10208   */\n      0x22\n        /* \"#utility.yul\":10201:10204   */\n      dup4\n        /* \"#utility.yul\":10142:10209   */\n      tag_106\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":10135:10209   */\n      swap2\n      pop\n        /* \"#utility.yul\":10218:10311   */\n      tag_212\n        /* \"#utility.yul\":10307:10310   */\n      dup3\n        /* \"#utility.yul\":10218:10311   */\n      tag_115\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":10336:10338   */\n      0x40\n        /* \"#utility.yul\":10331:10334   */\n      dup3\n        /* \"#utility.yul\":10327:10339   */\n      add\n        /* \"#utility.yul\":10320:10339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9979:10345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10351:10770   */\n    tag_78:\n        /* \"#utility.yul\":10517:10521   */\n      0x00\n        /* \"#utility.yul\":10555:10557   */\n      0x20\n        /* \"#utility.yul\":10544:10553   */\n      dup3\n        /* \"#utility.yul\":10540:10558   */\n      add\n        /* \"#utility.yul\":10532:10558   */\n      swap1\n      pop\n        /* \"#utility.yul\":10604:10613   */\n      dup2\n        /* \"#utility.yul\":10598:10602   */\n      dup2\n        /* \"#utility.yul\":10594:10614   */\n      sub\n        /* \"#utility.yul\":10590:10591   */\n      0x00\n        /* \"#utility.yul\":10579:10588   */\n      dup4\n        /* \"#utility.yul\":10575:10592   */\n      add\n        /* \"#utility.yul\":10568:10615   */\n      mstore\n        /* \"#utility.yul\":10632:10763   */\n      tag_214\n        /* \"#utility.yul\":10758:10762   */\n      dup2\n        /* \"#utility.yul\":10632:10763   */\n      tag_116\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":10624:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10351:10770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10776:11009   */\n    tag_81:\n        /* \"#utility.yul\":10815:10818   */\n      0x00\n        /* \"#utility.yul\":10838:10862   */\n      tag_216\n        /* \"#utility.yul\":10856:10861   */\n      dup3\n        /* \"#utility.yul\":10838:10862   */\n      tag_86\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":10829:10862   */\n      swap2\n      pop\n        /* \"#utility.yul\":10884:10950   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10877:10882   */\n      dup3\n        /* \"#utility.yul\":10874:10951   */\n      sub\n        /* \"#utility.yul\":10871:10974   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":10954:10972   */\n      tag_218\n      tag_105\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":10871:10974   */\n    tag_217:\n        /* \"#utility.yul\":11001:11002   */\n      0x01\n        /* \"#utility.yul\":10994:10999   */\n      dup3\n        /* \"#utility.yul\":10990:11003   */\n      add\n        /* \"#utility.yul\":10983:11003   */\n      swap1\n      pop\n        /* \"#utility.yul\":10776:11009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206641268058a16bdbb2aeb7d8b0e09cf77c1e04d55e777ff79b641192cc3fa88d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50610f5b8061001c5f395ff3fe60806040526004361061006f575f3560e01c80639979ef451161004d5780639979ef45146100f7578063b1cb48ef14610113578063f851a4401461013b578063fc528482146101655761006f565b806326232a2e14610073578063571a26a01461009d5780638129fc1c146100e1575b5f5ffd5b34801561007e575f5ffd5b5061008761018f565b6040516100949190610963565b60405180910390f35b3480156100a8575f5ffd5b506100c360048036038101906100be91906109aa565b610195565b6040516100d899989796959493929190610a2e565b60405180910390f35b3480156100ec575f5ffd5b506100f5610248565b005b610111600480360381019061010c91906109aa565b6103ff565b005b34801561011e575f5ffd5b5061013960048036038101906101349190610ae3565b6105eb565b005b348015610146575f5ffd5b5061014f6108e4565b60405161015c9190610b47565b60405180910390f35b348015610170575f5ffd5b50610179610909565b6040516101869190610963565b60405180910390f35b60035481565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b5f61025161090f565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156102995750825b90505f60018367ffffffffffffffff161480156102cc57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156102da575080155b15610311576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561035e576001855f0160086101000a81548160ff0219169083151502179055505b3360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156103f8575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516103ef9190610bb5565b60405180910390a15b5050505050565b5f5f5f8381526020019081526020015f209050806004015f9054906101000a900460ff16158015610442575042816001015482600201546104409190610bfb565b115b610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610c88565b60405180910390fd5b806005015434118015610498575080600301543410155b6104d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ce90610d16565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461059b578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826005015490811502906040515f60405180830381858888f19350505050158015610599573d5f5f3e3d5ffd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067190610da4565b60405180910390fd5b61ea6084116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590610e32565b60405180910390fd5b5f8311610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790610ec0565b60405180910390fd5b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185426107349190610bfb565b81526020014281526020018481526020015f151581526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e0820151816006015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816007015590505060015f8154809291906108d990610ede565b919050555050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b5f5f610919610922565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f819050919050565b61095d8161094b565b82525050565b5f6020820190506109765f830184610954565b92915050565b5f5ffd5b6109898161094b565b8114610993575f5ffd5b50565b5f813590506109a481610980565b92915050565b5f602082840312156109bf576109be61097c565b5b5f6109cc84828501610996565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109fe826109d5565b9050919050565b610a0e816109f4565b82525050565b5f8115159050919050565b610a2881610a14565b82525050565b5f61012082019050610a425f83018c610a05565b610a4f602083018b610954565b610a5c604083018a610954565b610a696060830189610954565b610a766080830188610a1f565b610a8360a0830187610a05565b610a9060c0830186610954565b610a9d60e0830185610a05565b610aab610100830184610954565b9a9950505050505050505050565b610ac2816109f4565b8114610acc575f5ffd5b50565b5f81359050610add81610ab9565b92915050565b5f5f5f5f60808587031215610afb57610afa61097c565b5b5f610b0887828801610996565b9450506020610b1987828801610996565b9350506040610b2a87828801610acf565b9250506060610b3b87828801610996565b91505092959194509250565b5f602082019050610b5a5f830184610a05565b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610b9f610b9a610b9584610b60565b610b7c565b610b69565b9050919050565b610baf81610b85565b82525050565b5f602082019050610bc85f830184610ba6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c058261094b565b9150610c108361094b565b9250828201905080821115610c2857610c27610bce565b5b92915050565b5f82825260208201905092915050565b7f41756374696f6e2068617320656e6465640000000000000000000000000000005f82015250565b5f610c72601183610c2e565b9150610c7d82610c3e565b602082019050919050565b5f6020820190508181035f830152610c9f81610c66565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e74205f8201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b5f610d00602b83610c2e565b9150610d0b82610ca6565b604082019050919050565b5f6020820190508181035f830152610d2d81610cf4565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d207468697320616374695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f610d8e602283610c2e565b9150610d9982610d34565b604082019050919050565b5f6020820190508181035f830152610dbb81610d82565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2031205f8201527f6d696e7574650000000000000000000000000000000000000000000000000000602082015250565b5f610e1c602683610c2e565b9150610e2782610dc2565b604082019050919050565b5f6020820190508181035f830152610e4981610e10565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f610eaa602283610c2e565b9150610eb582610e50565b604082019050919050565b5f6020820190508181035f830152610ed781610e9e565b9050919050565b5f610ee88261094b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1a57610f19610bce565b5b60018201905091905056fea26469706673582212206641268058a16bdbb2aeb7d8b0e09cf77c1e04d55e777ff79b641192cc3fa88d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF5B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9979EF45 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x165 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH0 PUSH2 0x251 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x299 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2CC JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x311 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x35E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x3F8 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST GT JUMPDEST PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x498 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CE SWAP1 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59B JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x734 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x8D9 SWAP1 PUSH2 0xEDE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x919 PUSH2 0x922 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0x94B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x976 PUSH0 DUP4 ADD DUP5 PUSH2 0x954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x989 DUP2 PUSH2 0x94B JUMP JUMPDEST DUP2 EQ PUSH2 0x993 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A4 DUP2 PUSH2 0x980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CC DUP5 DUP3 DUP6 ADD PUSH2 0x996 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9FE DUP3 PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0E DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA28 DUP2 PUSH2 0xA14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0xA42 PUSH0 DUP4 ADD DUP13 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA69 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA76 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0xA83 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA90 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA9D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xAAB PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x954 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC2 DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP2 EQ PUSH2 0xACC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xADD DUP2 PUSH2 0xAB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFA PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB08 DUP8 DUP3 DUP9 ADD PUSH2 0x996 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xB19 DUP8 DUP3 DUP9 ADD PUSH2 0x996 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB2A DUP8 DUP3 DUP9 ADD PUSH2 0xACF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xB3B DUP8 DUP3 DUP9 ADD PUSH2 0x996 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5A PUSH0 DUP4 ADD DUP5 PUSH2 0xA05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9F PUSH2 0xB9A PUSH2 0xB95 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC05 DUP3 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC27 PUSH2 0xBCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC72 PUSH1 0x11 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xC7D DUP3 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC9F DUP2 PUSH2 0xC66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD00 PUSH1 0x2B DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xD0B DUP3 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD2D DUP2 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD8E PUSH1 0x22 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xD99 DUP3 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xD82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203120 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D696E7574650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE1C PUSH1 0x26 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE27 DUP3 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE49 DUP2 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEAA PUSH1 0x22 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xEB5 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xED7 DUP2 PUSH2 0xE9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEE8 DUP3 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0xBCE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x41268058A16BDB 0xB2 0xAE 0xB7 0xD8 0xB0 RJUMP 0x9CF7 PUSH29 0x1E04D55E777FF79B641192CC3FA88D64736F6C634300081E0033000000 ",
							"sourceMap": "213:2352:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getInitializableStorage_266": {
									"entryPoint": 2319,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_252": {
									"entryPoint": 2338,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@admin_441": {
									"entryPoint": 2276,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@auctions_437": {
									"entryPoint": 405,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createAuction_512": {
									"entryPoint": 1515,
									"id": 512,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@initialize_413": {
									"entryPoint": 584,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextAuctionId_439": {
									"entryPoint": 2313,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@placeBid_589": {
									"entryPoint": 1023,
									"id": 589,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@platformFee_443": {
									"entryPoint": 399,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11012:4",
										"nodeType": "YulBlock",
										"src": "0:11012:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:4",
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nativeSrc": "62:16:4",
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:4",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nativeSrc": "155:53:4",
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nativeSrc": "177:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nativeSrc": "165:37:4",
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nativeSrc": "165:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:4",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:4",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nativeSrc": "312:124:4",
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nativeSrc": "322:26:4",
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:4",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nativeSrc": "330:18:4",
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:4",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nativeSrc": "411:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nativeSrc": "358:71:4",
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nativeSrc": "358:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:4",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:4",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:4",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nativeSrc": "482:35:4",
													"nodeType": "YulBlock",
													"src": "482:35:4",
													"statements": [
														{
															"nativeSrc": "492:19:4",
															"nodeType": "YulAssignment",
															"src": "492:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:4",
																		"nodeType": "YulLiteral",
																		"src": "508:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:4"
																},
																"nativeSrc": "502:9:4",
																"nodeType": "YulFunctionCall",
																"src": "502:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:4",
														"nodeType": "YulTypedName",
														"src": "475:6:4",
														"type": ""
													}
												],
												"src": "442:75:4"
											},
											{
												"body": {
													"nativeSrc": "612:28:4",
													"nodeType": "YulBlock",
													"src": "612:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:4",
																		"nodeType": "YulLiteral",
																		"src": "629:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:4",
																		"nodeType": "YulLiteral",
																		"src": "632:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:4"
																},
																"nativeSrc": "622:12:4",
																"nodeType": "YulFunctionCall",
																"src": "622:12:4"
															},
															"nativeSrc": "622:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:4"
											},
											{
												"body": {
													"nativeSrc": "735:28:4",
													"nodeType": "YulBlock",
													"src": "735:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:4",
																		"nodeType": "YulLiteral",
																		"src": "752:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:4",
																		"nodeType": "YulLiteral",
																		"src": "755:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:4"
																},
																"nativeSrc": "745:12:4",
																"nodeType": "YulFunctionCall",
																"src": "745:12:4"
															},
															"nativeSrc": "745:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:4"
											},
											{
												"body": {
													"nativeSrc": "812:79:4",
													"nodeType": "YulBlock",
													"src": "812:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:4",
																"nodeType": "YulBlock",
																"src": "869:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:4",
																					"nodeType": "YulLiteral",
																					"src": "878:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:4",
																					"nodeType": "YulLiteral",
																					"src": "881:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:4"
																			},
																			"nativeSrc": "871:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:4"
																		},
																		"nativeSrc": "871:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:4"
																				},
																				"nativeSrc": "842:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:4"
																		},
																		"nativeSrc": "832:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:4"
																},
																"nativeSrc": "825:43:4",
																"nodeType": "YulFunctionCall",
																"src": "825:43:4"
															},
															"nativeSrc": "822:63:4",
															"nodeType": "YulIf",
															"src": "822:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:4",
														"nodeType": "YulTypedName",
														"src": "805:5:4",
														"type": ""
													}
												],
												"src": "769:122:4"
											},
											{
												"body": {
													"nativeSrc": "949:87:4",
													"nodeType": "YulBlock",
													"src": "949:87:4",
													"statements": [
														{
															"nativeSrc": "959:29:4",
															"nodeType": "YulAssignment",
															"src": "959:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:4"
																},
																"nativeSrc": "968:20:4",
																"nodeType": "YulFunctionCall",
																"src": "968:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:4"
																},
																"nativeSrc": "997:33:4",
																"nodeType": "YulFunctionCall",
																"src": "997:33:4"
															},
															"nativeSrc": "997:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:4",
														"nodeType": "YulTypedName",
														"src": "927:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:4",
														"nodeType": "YulTypedName",
														"src": "935:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:4",
														"nodeType": "YulTypedName",
														"src": "943:5:4",
														"type": ""
													}
												],
												"src": "897:139:4"
											},
											{
												"body": {
													"nativeSrc": "1108:263:4",
													"nodeType": "YulBlock",
													"src": "1108:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:4",
																"nodeType": "YulBlock",
																"src": "1154:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:4"
																			},
																			"nativeSrc": "1156:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:4"
																		},
																		"nativeSrc": "1156:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:4"
																		},
																		"nativeSrc": "1125:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:4"
																},
																"nativeSrc": "1121:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:4"
															},
															"nativeSrc": "1118:119:4",
															"nodeType": "YulIf",
															"src": "1118:119:4"
														},
														{
															"nativeSrc": "1247:117:4",
															"nodeType": "YulBlock",
															"src": "1247:117:4",
															"statements": [
																{
																	"nativeSrc": "1262:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:4"
																				},
																				"nativeSrc": "1322:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:4"
																		},
																		"nativeSrc": "1301:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:4",
														"nodeType": "YulTypedName",
														"src": "1078:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:4",
														"nodeType": "YulTypedName",
														"src": "1089:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:4",
														"nodeType": "YulTypedName",
														"src": "1101:6:4",
														"type": ""
													}
												],
												"src": "1042:329:4"
											},
											{
												"body": {
													"nativeSrc": "1422:81:4",
													"nodeType": "YulBlock",
													"src": "1422:81:4",
													"statements": [
														{
															"nativeSrc": "1432:65:4",
															"nodeType": "YulAssignment",
															"src": "1432:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:4"
																},
																"nativeSrc": "1443:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:4",
														"nodeType": "YulTypedName",
														"src": "1404:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:4",
														"nodeType": "YulTypedName",
														"src": "1414:7:4",
														"type": ""
													}
												],
												"src": "1377:126:4"
											},
											{
												"body": {
													"nativeSrc": "1554:51:4",
													"nodeType": "YulBlock",
													"src": "1554:51:4",
													"statements": [
														{
															"nativeSrc": "1564:35:4",
															"nodeType": "YulAssignment",
															"src": "1564:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:4"
																},
																"nativeSrc": "1575:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:4",
														"nodeType": "YulTypedName",
														"src": "1536:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:4",
														"nodeType": "YulTypedName",
														"src": "1546:7:4",
														"type": ""
													}
												],
												"src": "1509:96:4"
											},
											{
												"body": {
													"nativeSrc": "1676:53:4",
													"nodeType": "YulBlock",
													"src": "1676:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:4"
																		},
																		"nativeSrc": "1698:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nativeSrc": "1686:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:4"
															},
															"nativeSrc": "1686:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:4",
														"nodeType": "YulTypedName",
														"src": "1664:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:4",
														"nodeType": "YulTypedName",
														"src": "1671:3:4",
														"type": ""
													}
												],
												"src": "1611:118:4"
											},
											{
												"body": {
													"nativeSrc": "1777:48:4",
													"nodeType": "YulBlock",
													"src": "1777:48:4",
													"statements": [
														{
															"nativeSrc": "1787:32:4",
															"nodeType": "YulAssignment",
															"src": "1787:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1812:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1812:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1805:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1805:6:4"
																		},
																		"nativeSrc": "1805:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1798:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:4"
																},
																"nativeSrc": "1798:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1798:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1787:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1787:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1735:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1759:5:4",
														"nodeType": "YulTypedName",
														"src": "1759:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1769:7:4",
														"nodeType": "YulTypedName",
														"src": "1769:7:4",
														"type": ""
													}
												],
												"src": "1735:90:4"
											},
											{
												"body": {
													"nativeSrc": "1890:50:4",
													"nodeType": "YulBlock",
													"src": "1890:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1907:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1907:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1927:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1927:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1912:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "1912:14:4"
																		},
																		"nativeSrc": "1912:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1912:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1900:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:4"
																},
																"nativeSrc": "1900:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1900:34:4"
															},
															"nativeSrc": "1900:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1900:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1831:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1878:5:4",
														"nodeType": "YulTypedName",
														"src": "1878:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1885:3:4",
														"nodeType": "YulTypedName",
														"src": "1885:3:4",
														"type": ""
													}
												],
												"src": "1831:109:4"
											},
											{
												"body": {
													"nativeSrc": "2262:780:4",
													"nodeType": "YulBlock",
													"src": "2262:780:4",
													"statements": [
														{
															"nativeSrc": "2272:27:4",
															"nodeType": "YulAssignment",
															"src": "2272:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2284:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2284:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2295:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2295:3:4",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2280:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:4"
																},
																"nativeSrc": "2280:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2280:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2272:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2272:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2353:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2353:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2366:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2366:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2377:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2377:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2362:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2362:3:4"
																		},
																		"nativeSrc": "2362:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2362:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2309:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2309:43:4"
																},
																"nativeSrc": "2309:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2309:71:4"
															},
															"nativeSrc": "2309:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2309:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2434:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2434:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2447:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2447:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2458:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2458:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2443:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:4"
																		},
																		"nativeSrc": "2443:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2443:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2390:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2390:43:4"
																},
																"nativeSrc": "2390:72:4",
																"nodeType": "YulFunctionCall",
																"src": "2390:72:4"
															},
															"nativeSrc": "2390:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "2390:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2516:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2516:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2529:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2540:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2540:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2525:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:4"
																		},
																		"nativeSrc": "2525:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2472:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2472:43:4"
																},
																"nativeSrc": "2472:72:4",
																"nodeType": "YulFunctionCall",
																"src": "2472:72:4"
															},
															"nativeSrc": "2472:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "2472:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2598:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2611:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2622:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2607:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:4"
																		},
																		"nativeSrc": "2607:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2554:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2554:43:4"
																},
																"nativeSrc": "2554:72:4",
																"nodeType": "YulFunctionCall",
																"src": "2554:72:4"
															},
															"nativeSrc": "2554:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "2554:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "2674:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2674:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2687:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2687:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2698:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2698:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2683:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2683:3:4"
																		},
																		"nativeSrc": "2683:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2683:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2636:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "2636:37:4"
																},
																"nativeSrc": "2636:67:4",
																"nodeType": "YulFunctionCall",
																"src": "2636:67:4"
															},
															"nativeSrc": "2636:67:4",
															"nodeType": "YulExpressionStatement",
															"src": "2636:67:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "2757:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2770:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2770:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2781:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2781:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2766:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2766:3:4"
																		},
																		"nativeSrc": "2766:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2766:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2713:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2713:43:4"
																},
																"nativeSrc": "2713:73:4",
																"nodeType": "YulFunctionCall",
																"src": "2713:73:4"
															},
															"nativeSrc": "2713:73:4",
															"nodeType": "YulExpressionStatement",
															"src": "2713:73:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "2840:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2840:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2853:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2853:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2864:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2864:3:4",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2849:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:4"
																		},
																		"nativeSrc": "2849:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2849:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2796:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2796:43:4"
																},
																"nativeSrc": "2796:73:4",
																"nodeType": "YulFunctionCall",
																"src": "2796:73:4"
															},
															"nativeSrc": "2796:73:4",
															"nodeType": "YulExpressionStatement",
															"src": "2796:73:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "2923:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2923:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2936:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2936:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2947:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2947:3:4",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2932:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2932:3:4"
																		},
																		"nativeSrc": "2932:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2932:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2879:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2879:43:4"
																},
																"nativeSrc": "2879:73:4",
																"nodeType": "YulFunctionCall",
																"src": "2879:73:4"
															},
															"nativeSrc": "2879:73:4",
															"nodeType": "YulExpressionStatement",
															"src": "2879:73:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "3006:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3006:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3019:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3030:3:4",
																				"nodeType": "YulLiteral",
																				"src": "3030:3:4",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3015:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:4"
																		},
																		"nativeSrc": "3015:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3015:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2962:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2962:43:4"
																},
																"nativeSrc": "2962:73:4",
																"nodeType": "YulFunctionCall",
																"src": "2962:73:4"
															},
															"nativeSrc": "2962:73:4",
															"nodeType": "YulExpressionStatement",
															"src": "2962:73:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1946:1096:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2170:9:4",
														"nodeType": "YulTypedName",
														"src": "2170:9:4",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "2182:6:4",
														"nodeType": "YulTypedName",
														"src": "2182:6:4",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "2190:6:4",
														"nodeType": "YulTypedName",
														"src": "2190:6:4",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2198:6:4",
														"nodeType": "YulTypedName",
														"src": "2198:6:4",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2206:6:4",
														"nodeType": "YulTypedName",
														"src": "2206:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2214:6:4",
														"nodeType": "YulTypedName",
														"src": "2214:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2222:6:4",
														"nodeType": "YulTypedName",
														"src": "2222:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2230:6:4",
														"nodeType": "YulTypedName",
														"src": "2230:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2238:6:4",
														"nodeType": "YulTypedName",
														"src": "2238:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2246:6:4",
														"nodeType": "YulTypedName",
														"src": "2246:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2257:4:4",
														"nodeType": "YulTypedName",
														"src": "2257:4:4",
														"type": ""
													}
												],
												"src": "1946:1096:4"
											},
											{
												"body": {
													"nativeSrc": "3091:79:4",
													"nodeType": "YulBlock",
													"src": "3091:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3148:16:4",
																"nodeType": "YulBlock",
																"src": "3148:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3157:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3157:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3160:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3160:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3150:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3150:6:4"
																			},
																			"nativeSrc": "3150:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3150:12:4"
																		},
																		"nativeSrc": "3150:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3150:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3114:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3114:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3139:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3139:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3121:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3121:17:4"
																				},
																				"nativeSrc": "3121:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3121:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3111:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3111:2:4"
																		},
																		"nativeSrc": "3111:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3111:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3104:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:4"
																},
																"nativeSrc": "3104:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3104:43:4"
															},
															"nativeSrc": "3101:63:4",
															"nodeType": "YulIf",
															"src": "3101:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3048:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3084:5:4",
														"nodeType": "YulTypedName",
														"src": "3084:5:4",
														"type": ""
													}
												],
												"src": "3048:122:4"
											},
											{
												"body": {
													"nativeSrc": "3228:87:4",
													"nodeType": "YulBlock",
													"src": "3228:87:4",
													"statements": [
														{
															"nativeSrc": "3238:29:4",
															"nodeType": "YulAssignment",
															"src": "3238:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3260:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3260:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3247:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3247:12:4"
																},
																"nativeSrc": "3247:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3247:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3238:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3238:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3303:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3303:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3276:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3276:26:4"
																},
																"nativeSrc": "3276:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3276:33:4"
															},
															"nativeSrc": "3276:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3276:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3176:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3206:6:4",
														"nodeType": "YulTypedName",
														"src": "3206:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3214:3:4",
														"nodeType": "YulTypedName",
														"src": "3214:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3222:5:4",
														"nodeType": "YulTypedName",
														"src": "3222:5:4",
														"type": ""
													}
												],
												"src": "3176:139:4"
											},
											{
												"body": {
													"nativeSrc": "3438:648:4",
													"nodeType": "YulBlock",
													"src": "3438:648:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3485:83:4",
																"nodeType": "YulBlock",
																"src": "3485:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3487:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3487:77:4"
																			},
																			"nativeSrc": "3487:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3487:79:4"
																		},
																		"nativeSrc": "3487:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3487:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3459:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3459:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3468:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3468:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3455:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:4"
																		},
																		"nativeSrc": "3455:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3480:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3480:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3451:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:4"
																},
																"nativeSrc": "3451:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3451:33:4"
															},
															"nativeSrc": "3448:120:4",
															"nodeType": "YulIf",
															"src": "3448:120:4"
														},
														{
															"nativeSrc": "3578:117:4",
															"nodeType": "YulBlock",
															"src": "3578:117:4",
															"statements": [
																{
																	"nativeSrc": "3593:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3593:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3607:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3607:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3597:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3597:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3622:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3622:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3657:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3657:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3668:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3668:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3653:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3653:3:4"
																				},
																				"nativeSrc": "3653:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3653:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3677:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3677:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3632:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3632:20:4"
																		},
																		"nativeSrc": "3632:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3632:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3622:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3622:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3705:118:4",
															"nodeType": "YulBlock",
															"src": "3705:118:4",
															"statements": [
																{
																	"nativeSrc": "3720:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3720:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3734:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3734:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3724:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3724:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3750:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3750:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3785:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3796:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3796:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3781:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:4"
																				},
																				"nativeSrc": "3781:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3781:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3805:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3805:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3760:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3760:20:4"
																		},
																		"nativeSrc": "3760:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3750:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3750:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3833:118:4",
															"nodeType": "YulBlock",
															"src": "3833:118:4",
															"statements": [
																{
																	"nativeSrc": "3848:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3848:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3862:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3852:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3852:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3878:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3878:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3913:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3913:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3924:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3924:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3909:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3909:3:4"
																				},
																				"nativeSrc": "3909:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3909:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3933:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3933:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3888:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3888:20:4"
																		},
																		"nativeSrc": "3888:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3888:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3878:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3878:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3961:118:4",
															"nodeType": "YulBlock",
															"src": "3961:118:4",
															"statements": [
																{
																	"nativeSrc": "3976:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3976:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3990:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3990:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3980:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3980:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4006:63:4",
																	"nodeType": "YulAssignment",
																	"src": "4006:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4041:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4041:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4052:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4052:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4037:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4037:3:4"
																				},
																				"nativeSrc": "4037:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4037:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4061:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4061:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4016:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "4016:20:4"
																		},
																		"nativeSrc": "4016:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4006:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4006:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "3321:765:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3384:9:4",
														"nodeType": "YulTypedName",
														"src": "3384:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3395:7:4",
														"nodeType": "YulTypedName",
														"src": "3395:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3407:6:4",
														"nodeType": "YulTypedName",
														"src": "3407:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3415:6:4",
														"nodeType": "YulTypedName",
														"src": "3415:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3423:6:4",
														"nodeType": "YulTypedName",
														"src": "3423:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3431:6:4",
														"nodeType": "YulTypedName",
														"src": "3431:6:4",
														"type": ""
													}
												],
												"src": "3321:765:4"
											},
											{
												"body": {
													"nativeSrc": "4190:124:4",
													"nodeType": "YulBlock",
													"src": "4190:124:4",
													"statements": [
														{
															"nativeSrc": "4200:26:4",
															"nodeType": "YulAssignment",
															"src": "4200:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4212:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4212:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4223:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4223:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4208:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:4"
																},
																"nativeSrc": "4208:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4208:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4200:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4200:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4280:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4280:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4293:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4293:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4304:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4304:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4289:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:4"
																		},
																		"nativeSrc": "4289:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4236:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4236:43:4"
																},
																"nativeSrc": "4236:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4236:71:4"
															},
															"nativeSrc": "4236:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4236:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4092:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4162:9:4",
														"nodeType": "YulTypedName",
														"src": "4162:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4174:6:4",
														"nodeType": "YulTypedName",
														"src": "4174:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4185:4:4",
														"nodeType": "YulTypedName",
														"src": "4185:4:4",
														"type": ""
													}
												],
												"src": "4092:222:4"
											},
											{
												"body": {
													"nativeSrc": "4373:32:4",
													"nodeType": "YulBlock",
													"src": "4373:32:4",
													"statements": [
														{
															"nativeSrc": "4383:16:4",
															"nodeType": "YulAssignment",
															"src": "4383:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "4394:5:4",
																"nodeType": "YulIdentifier",
																"src": "4394:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4383:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4383:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "4320:85:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4355:5:4",
														"nodeType": "YulTypedName",
														"src": "4355:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4365:7:4",
														"nodeType": "YulTypedName",
														"src": "4365:7:4",
														"type": ""
													}
												],
												"src": "4320:85:4"
											},
											{
												"body": {
													"nativeSrc": "4455:57:4",
													"nodeType": "YulBlock",
													"src": "4455:57:4",
													"statements": [
														{
															"nativeSrc": "4465:41:4",
															"nodeType": "YulAssignment",
															"src": "4465:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4480:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4480:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4487:18:4",
																		"nodeType": "YulLiteral",
																		"src": "4487:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4476:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4476:3:4"
																},
																"nativeSrc": "4476:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4476:30:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4465:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4465:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "4411:101:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4437:5:4",
														"nodeType": "YulTypedName",
														"src": "4437:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4447:7:4",
														"nodeType": "YulTypedName",
														"src": "4447:7:4",
														"type": ""
													}
												],
												"src": "4411:101:4"
											},
											{
												"body": {
													"nativeSrc": "4550:28:4",
													"nodeType": "YulBlock",
													"src": "4550:28:4",
													"statements": [
														{
															"nativeSrc": "4560:12:4",
															"nodeType": "YulAssignment",
															"src": "4560:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "4567:5:4",
																"nodeType": "YulIdentifier",
																"src": "4567:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4560:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4560:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4518:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4536:5:4",
														"nodeType": "YulTypedName",
														"src": "4536:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4546:3:4",
														"nodeType": "YulTypedName",
														"src": "4546:3:4",
														"type": ""
													}
												],
												"src": "4518:60:4"
											},
											{
												"body": {
													"nativeSrc": "4651:89:4",
													"nodeType": "YulBlock",
													"src": "4651:89:4",
													"statements": [
														{
															"nativeSrc": "4661:73:4",
															"nodeType": "YulAssignment",
															"src": "4661:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4726:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4726:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "4700:25:4",
																					"nodeType": "YulIdentifier",
																					"src": "4700:25:4"
																				},
																				"nativeSrc": "4700:32:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4700:32:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4691:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "4691:8:4"
																		},
																		"nativeSrc": "4691:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:42:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "4674:16:4",
																	"nodeType": "YulIdentifier",
																	"src": "4674:16:4"
																},
																"nativeSrc": "4674:60:4",
																"nodeType": "YulFunctionCall",
																"src": "4674:60:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4661:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "4661:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "4584:156:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4631:5:4",
														"nodeType": "YulTypedName",
														"src": "4631:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4641:9:4",
														"nodeType": "YulTypedName",
														"src": "4641:9:4",
														"type": ""
													}
												],
												"src": "4584:156:4"
											},
											{
												"body": {
													"nativeSrc": "4818:73:4",
													"nodeType": "YulBlock",
													"src": "4818:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4835:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4835:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4878:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4878:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "4840:37:4",
																			"nodeType": "YulIdentifier",
																			"src": "4840:37:4"
																		},
																		"nativeSrc": "4840:44:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:44:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4828:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4828:6:4"
																},
																"nativeSrc": "4828:57:4",
																"nodeType": "YulFunctionCall",
																"src": "4828:57:4"
															},
															"nativeSrc": "4828:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "4828:57:4"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "4746:145:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4806:5:4",
														"nodeType": "YulTypedName",
														"src": "4806:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4813:3:4",
														"nodeType": "YulTypedName",
														"src": "4813:3:4",
														"type": ""
													}
												],
												"src": "4746:145:4"
											},
											{
												"body": {
													"nativeSrc": "5002:131:4",
													"nodeType": "YulBlock",
													"src": "5002:131:4",
													"statements": [
														{
															"nativeSrc": "5012:26:4",
															"nodeType": "YulAssignment",
															"src": "5012:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5024:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5024:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5035:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5035:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5020:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:4"
																},
																"nativeSrc": "5020:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5020:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5012:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5012:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5099:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5099:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5112:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5112:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5123:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5108:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5108:3:4"
																		},
																		"nativeSrc": "5108:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5108:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "5048:50:4",
																	"nodeType": "YulIdentifier",
																	"src": "5048:50:4"
																},
																"nativeSrc": "5048:78:4",
																"nodeType": "YulFunctionCall",
																"src": "5048:78:4"
															},
															"nativeSrc": "5048:78:4",
															"nodeType": "YulExpressionStatement",
															"src": "5048:78:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "4897:236:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4974:9:4",
														"nodeType": "YulTypedName",
														"src": "4974:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4986:6:4",
														"nodeType": "YulTypedName",
														"src": "4986:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4997:4:4",
														"nodeType": "YulTypedName",
														"src": "4997:4:4",
														"type": ""
													}
												],
												"src": "4897:236:4"
											},
											{
												"body": {
													"nativeSrc": "5167:152:4",
													"nodeType": "YulBlock",
													"src": "5167:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5184:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5184:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5187:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5177:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:4"
																},
																"nativeSrc": "5177:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5177:88:4"
															},
															"nativeSrc": "5177:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5177:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5281:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5281:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5284:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5284:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5274:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5274:6:4"
																},
																"nativeSrc": "5274:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5274:15:4"
															},
															"nativeSrc": "5274:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5274:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5305:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5305:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5308:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5308:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5298:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5298:6:4"
																},
																"nativeSrc": "5298:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5298:15:4"
															},
															"nativeSrc": "5298:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5298:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5139:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5139:180:4"
											},
											{
												"body": {
													"nativeSrc": "5369:147:4",
													"nodeType": "YulBlock",
													"src": "5369:147:4",
													"statements": [
														{
															"nativeSrc": "5379:25:4",
															"nodeType": "YulAssignment",
															"src": "5379:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5402:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5402:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5384:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5384:17:4"
																},
																"nativeSrc": "5384:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5384:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5379:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5379:1:4"
																}
															]
														},
														{
															"nativeSrc": "5413:25:4",
															"nodeType": "YulAssignment",
															"src": "5413:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5436:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5436:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5418:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5418:17:4"
																},
																"nativeSrc": "5418:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5418:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5413:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5413:1:4"
																}
															]
														},
														{
															"nativeSrc": "5447:16:4",
															"nodeType": "YulAssignment",
															"src": "5447:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5458:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5461:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5461:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5454:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:4"
																},
																"nativeSrc": "5454:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5454:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5447:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5487:22:4",
																"nodeType": "YulBlock",
																"src": "5487:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5489:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5489:16:4"
																			},
																			"nativeSrc": "5489:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5489:18:4"
																		},
																		"nativeSrc": "5489:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5489:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5479:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5479:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5482:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5482:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5476:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5476:2:4"
																},
																"nativeSrc": "5476:10:4",
																"nodeType": "YulFunctionCall",
																"src": "5476:10:4"
															},
															"nativeSrc": "5473:36:4",
															"nodeType": "YulIf",
															"src": "5473:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5325:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5356:1:4",
														"nodeType": "YulTypedName",
														"src": "5356:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5359:1:4",
														"nodeType": "YulTypedName",
														"src": "5359:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5365:3:4",
														"nodeType": "YulTypedName",
														"src": "5365:3:4",
														"type": ""
													}
												],
												"src": "5325:191:4"
											},
											{
												"body": {
													"nativeSrc": "5618:73:4",
													"nodeType": "YulBlock",
													"src": "5618:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5635:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5640:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5640:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5628:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:4"
																},
																"nativeSrc": "5628:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5628:19:4"
															},
															"nativeSrc": "5628:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "5628:19:4"
														},
														{
															"nativeSrc": "5656:29:4",
															"nodeType": "YulAssignment",
															"src": "5656:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5675:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5675:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5680:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5671:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5671:3:4"
																},
																"nativeSrc": "5671:14:4",
																"nodeType": "YulFunctionCall",
																"src": "5671:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5656:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "5656:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5522:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5590:3:4",
														"nodeType": "YulTypedName",
														"src": "5590:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5595:6:4",
														"nodeType": "YulTypedName",
														"src": "5595:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5606:11:4",
														"nodeType": "YulTypedName",
														"src": "5606:11:4",
														"type": ""
													}
												],
												"src": "5522:169:4"
											},
											{
												"body": {
													"nativeSrc": "5803:61:4",
													"nodeType": "YulBlock",
													"src": "5803:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5825:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5825:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5833:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5833:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5821:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5821:3:4"
																		},
																		"nativeSrc": "5821:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5821:14:4"
																	},
																	{
																		"hexValue": "41756374696f6e2068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "5837:19:4",
																		"nodeType": "YulLiteral",
																		"src": "5837:19:4",
																		"type": "",
																		"value": "Auction has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5814:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5814:6:4"
																},
																"nativeSrc": "5814:43:4",
																"nodeType": "YulFunctionCall",
																"src": "5814:43:4"
															},
															"nativeSrc": "5814:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "5814:43:4"
														}
													]
												},
												"name": "store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
												"nativeSrc": "5697:167:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5795:6:4",
														"nodeType": "YulTypedName",
														"src": "5795:6:4",
														"type": ""
													}
												],
												"src": "5697:167:4"
											},
											{
												"body": {
													"nativeSrc": "6016:220:4",
													"nodeType": "YulBlock",
													"src": "6016:220:4",
													"statements": [
														{
															"nativeSrc": "6026:74:4",
															"nodeType": "YulAssignment",
															"src": "6026:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6092:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6092:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6097:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:4",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6033:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6033:58:4"
																},
																"nativeSrc": "6033:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6033:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6026:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6198:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6198:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																	"nativeSrc": "6109:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6109:88:4"
																},
																"nativeSrc": "6109:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6109:93:4"
															},
															"nativeSrc": "6109:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6109:93:4"
														},
														{
															"nativeSrc": "6211:19:4",
															"nodeType": "YulAssignment",
															"src": "6211:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6222:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6222:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6227:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6218:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:4"
																},
																"nativeSrc": "6218:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6218:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6211:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6211:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5870:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6004:3:4",
														"nodeType": "YulTypedName",
														"src": "6004:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6012:3:4",
														"nodeType": "YulTypedName",
														"src": "6012:3:4",
														"type": ""
													}
												],
												"src": "5870:366:4"
											},
											{
												"body": {
													"nativeSrc": "6413:248:4",
													"nodeType": "YulBlock",
													"src": "6413:248:4",
													"statements": [
														{
															"nativeSrc": "6423:26:4",
															"nodeType": "YulAssignment",
															"src": "6423:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6435:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6435:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6446:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6431:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6431:3:4"
																},
																"nativeSrc": "6431:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6431:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6423:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6423:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6470:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6481:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6481:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6466:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:4"
																		},
																		"nativeSrc": "6466:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6489:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6489:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6495:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6495:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6485:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6485:3:4"
																		},
																		"nativeSrc": "6485:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6485:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6459:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:4"
																},
																"nativeSrc": "6459:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6459:47:4"
															},
															"nativeSrc": "6459:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6459:47:4"
														},
														{
															"nativeSrc": "6515:139:4",
															"nodeType": "YulAssignment",
															"src": "6515:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6649:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6649:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6523:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6523:124:4"
																},
																"nativeSrc": "6523:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6523:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6515:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6515:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6242:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6393:9:4",
														"nodeType": "YulTypedName",
														"src": "6393:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6408:4:4",
														"nodeType": "YulTypedName",
														"src": "6408:4:4",
														"type": ""
													}
												],
												"src": "6242:419:4"
											},
											{
												"body": {
													"nativeSrc": "6773:124:4",
													"nodeType": "YulBlock",
													"src": "6773:124:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6795:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6795:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6803:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6803:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6791:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6791:3:4"
																		},
																		"nativeSrc": "6791:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6791:14:4"
																	},
																	{
																		"hexValue": "426964206d75737420626520686967686572207468616e2063757272656e7420",
																		"kind": "string",
																		"nativeSrc": "6807:34:4",
																		"nodeType": "YulLiteral",
																		"src": "6807:34:4",
																		"type": "",
																		"value": "Bid must be higher than current "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6784:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6784:6:4"
																},
																"nativeSrc": "6784:58:4",
																"nodeType": "YulFunctionCall",
																"src": "6784:58:4"
															},
															"nativeSrc": "6784:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "6784:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6863:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6871:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6871:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6859:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6859:3:4"
																		},
																		"nativeSrc": "6859:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6859:15:4"
																	},
																	{
																		"hexValue": "6869676865737420626964",
																		"kind": "string",
																		"nativeSrc": "6876:13:4",
																		"nodeType": "YulLiteral",
																		"src": "6876:13:4",
																		"type": "",
																		"value": "highest bid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6852:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6852:6:4"
																},
																"nativeSrc": "6852:38:4",
																"nodeType": "YulFunctionCall",
																"src": "6852:38:4"
															},
															"nativeSrc": "6852:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "6852:38:4"
														}
													]
												},
												"name": "store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
												"nativeSrc": "6667:230:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6765:6:4",
														"nodeType": "YulTypedName",
														"src": "6765:6:4",
														"type": ""
													}
												],
												"src": "6667:230:4"
											},
											{
												"body": {
													"nativeSrc": "7049:220:4",
													"nodeType": "YulBlock",
													"src": "7049:220:4",
													"statements": [
														{
															"nativeSrc": "7059:74:4",
															"nodeType": "YulAssignment",
															"src": "7059:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7125:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7125:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7130:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7130:2:4",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7066:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "7066:58:4"
																},
																"nativeSrc": "7066:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7066:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7059:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7059:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7231:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7231:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
																	"nativeSrc": "7142:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "7142:88:4"
																},
																"nativeSrc": "7142:93:4",
																"nodeType": "YulFunctionCall",
																"src": "7142:93:4"
															},
															"nativeSrc": "7142:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "7142:93:4"
														},
														{
															"nativeSrc": "7244:19:4",
															"nodeType": "YulAssignment",
															"src": "7244:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7255:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7255:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7260:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7251:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:4"
																},
																"nativeSrc": "7251:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7251:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7244:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7244:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6903:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7037:3:4",
														"nodeType": "YulTypedName",
														"src": "7037:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7045:3:4",
														"nodeType": "YulTypedName",
														"src": "7045:3:4",
														"type": ""
													}
												],
												"src": "6903:366:4"
											},
											{
												"body": {
													"nativeSrc": "7446:248:4",
													"nodeType": "YulBlock",
													"src": "7446:248:4",
													"statements": [
														{
															"nativeSrc": "7456:26:4",
															"nodeType": "YulAssignment",
															"src": "7456:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7468:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7468:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7479:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7479:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7464:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7464:3:4"
																},
																"nativeSrc": "7464:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7464:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7456:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7456:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7503:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7514:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7514:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7499:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:4"
																		},
																		"nativeSrc": "7499:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7499:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7522:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7528:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7528:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7518:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:4"
																		},
																		"nativeSrc": "7518:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7518:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7492:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:4"
																},
																"nativeSrc": "7492:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7492:47:4"
															},
															"nativeSrc": "7492:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7492:47:4"
														},
														{
															"nativeSrc": "7548:139:4",
															"nodeType": "YulAssignment",
															"src": "7548:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7682:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7682:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7556:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7556:124:4"
																},
																"nativeSrc": "7556:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7556:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7548:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7548:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7275:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7426:9:4",
														"nodeType": "YulTypedName",
														"src": "7426:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7441:4:4",
														"nodeType": "YulTypedName",
														"src": "7441:4:4",
														"type": ""
													}
												],
												"src": "7275:419:4"
											},
											{
												"body": {
													"nativeSrc": "7806:115:4",
													"nodeType": "YulBlock",
													"src": "7806:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7828:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7828:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7836:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7836:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7824:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:4"
																		},
																		"nativeSrc": "7824:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7824:14:4"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469",
																		"kind": "string",
																		"nativeSrc": "7840:34:4",
																		"nodeType": "YulLiteral",
																		"src": "7840:34:4",
																		"type": "",
																		"value": "Only admin can perform this acti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7817:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:4"
																},
																"nativeSrc": "7817:58:4",
																"nodeType": "YulFunctionCall",
																"src": "7817:58:4"
															},
															"nativeSrc": "7817:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "7817:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7896:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7896:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7904:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7904:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7892:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:4"
																		},
																		"nativeSrc": "7892:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7892:15:4"
																	},
																	{
																		"hexValue": "6f6e",
																		"kind": "string",
																		"nativeSrc": "7909:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7909:4:4",
																		"type": "",
																		"value": "on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7885:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:4"
																},
																"nativeSrc": "7885:29:4",
																"nodeType": "YulFunctionCall",
																"src": "7885:29:4"
															},
															"nativeSrc": "7885:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "7885:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
												"nativeSrc": "7700:221:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7798:6:4",
														"nodeType": "YulTypedName",
														"src": "7798:6:4",
														"type": ""
													}
												],
												"src": "7700:221:4"
											},
											{
												"body": {
													"nativeSrc": "8073:220:4",
													"nodeType": "YulBlock",
													"src": "8073:220:4",
													"statements": [
														{
															"nativeSrc": "8083:74:4",
															"nodeType": "YulAssignment",
															"src": "8083:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8149:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8149:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8154:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8154:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8090:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "8090:58:4"
																},
																"nativeSrc": "8090:67:4",
																"nodeType": "YulFunctionCall",
																"src": "8090:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8083:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8083:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8255:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8255:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
																	"nativeSrc": "8166:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "8166:88:4"
																},
																"nativeSrc": "8166:93:4",
																"nodeType": "YulFunctionCall",
																"src": "8166:93:4"
															},
															"nativeSrc": "8166:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "8166:93:4"
														},
														{
															"nativeSrc": "8268:19:4",
															"nodeType": "YulAssignment",
															"src": "8268:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8279:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8279:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8284:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8284:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8275:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8275:3:4"
																},
																"nativeSrc": "8275:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8275:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8268:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7927:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8061:3:4",
														"nodeType": "YulTypedName",
														"src": "8061:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8069:3:4",
														"nodeType": "YulTypedName",
														"src": "8069:3:4",
														"type": ""
													}
												],
												"src": "7927:366:4"
											},
											{
												"body": {
													"nativeSrc": "8470:248:4",
													"nodeType": "YulBlock",
													"src": "8470:248:4",
													"statements": [
														{
															"nativeSrc": "8480:26:4",
															"nodeType": "YulAssignment",
															"src": "8480:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8492:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8492:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8503:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8503:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8488:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:4"
																},
																"nativeSrc": "8488:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8488:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8480:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8480:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:4"
																		},
																		"nativeSrc": "8523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8523:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8546:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8546:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8552:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8552:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8542:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8542:3:4"
																		},
																		"nativeSrc": "8542:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8542:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8516:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:4"
																},
																"nativeSrc": "8516:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8516:47:4"
															},
															"nativeSrc": "8516:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8516:47:4"
														},
														{
															"nativeSrc": "8572:139:4",
															"nodeType": "YulAssignment",
															"src": "8572:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8706:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8706:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8580:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "8580:124:4"
																},
																"nativeSrc": "8580:131:4",
																"nodeType": "YulFunctionCall",
																"src": "8580:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8572:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8572:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8299:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8450:9:4",
														"nodeType": "YulTypedName",
														"src": "8450:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8465:4:4",
														"nodeType": "YulTypedName",
														"src": "8465:4:4",
														"type": ""
													}
												],
												"src": "8299:419:4"
											},
											{
												"body": {
													"nativeSrc": "8830:119:4",
													"nodeType": "YulBlock",
													"src": "8830:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8852:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8852:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8860:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8860:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8848:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8848:3:4"
																		},
																		"nativeSrc": "8848:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8848:14:4"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e203120",
																		"kind": "string",
																		"nativeSrc": "8864:34:4",
																		"nodeType": "YulLiteral",
																		"src": "8864:34:4",
																		"type": "",
																		"value": "Duration must be greater than 1 "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8841:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:4"
																},
																"nativeSrc": "8841:58:4",
																"nodeType": "YulFunctionCall",
																"src": "8841:58:4"
															},
															"nativeSrc": "8841:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "8841:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8920:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8920:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8928:2:4",
																				"nodeType": "YulLiteral",
																				"src": "8928:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8916:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8916:3:4"
																		},
																		"nativeSrc": "8916:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8916:15:4"
																	},
																	{
																		"hexValue": "6d696e757465",
																		"kind": "string",
																		"nativeSrc": "8933:8:4",
																		"nodeType": "YulLiteral",
																		"src": "8933:8:4",
																		"type": "",
																		"value": "minute"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8909:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8909:6:4"
																},
																"nativeSrc": "8909:33:4",
																"nodeType": "YulFunctionCall",
																"src": "8909:33:4"
															},
															"nativeSrc": "8909:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "8909:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd",
												"nativeSrc": "8724:225:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8822:6:4",
														"nodeType": "YulTypedName",
														"src": "8822:6:4",
														"type": ""
													}
												],
												"src": "8724:225:4"
											},
											{
												"body": {
													"nativeSrc": "9101:220:4",
													"nodeType": "YulBlock",
													"src": "9101:220:4",
													"statements": [
														{
															"nativeSrc": "9111:74:4",
															"nodeType": "YulAssignment",
															"src": "9111:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9177:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9177:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9182:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9182:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9118:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "9118:58:4"
																},
																"nativeSrc": "9118:67:4",
																"nodeType": "YulFunctionCall",
																"src": "9118:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9111:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9111:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9283:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9283:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd",
																	"nativeSrc": "9194:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "9194:88:4"
																},
																"nativeSrc": "9194:93:4",
																"nodeType": "YulFunctionCall",
																"src": "9194:93:4"
															},
															"nativeSrc": "9194:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "9194:93:4"
														},
														{
															"nativeSrc": "9296:19:4",
															"nodeType": "YulAssignment",
															"src": "9296:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9307:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9307:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9312:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9312:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9303:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9303:3:4"
																},
																"nativeSrc": "9303:12:4",
																"nodeType": "YulFunctionCall",
																"src": "9303:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9296:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9296:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8955:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9089:3:4",
														"nodeType": "YulTypedName",
														"src": "9089:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9097:3:4",
														"nodeType": "YulTypedName",
														"src": "9097:3:4",
														"type": ""
													}
												],
												"src": "8955:366:4"
											},
											{
												"body": {
													"nativeSrc": "9498:248:4",
													"nodeType": "YulBlock",
													"src": "9498:248:4",
													"statements": [
														{
															"nativeSrc": "9508:26:4",
															"nodeType": "YulAssignment",
															"src": "9508:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9520:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "9520:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9531:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9531:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9516:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9516:3:4"
																},
																"nativeSrc": "9516:18:4",
																"nodeType": "YulFunctionCall",
																"src": "9516:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9508:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9508:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9555:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9555:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9566:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9566:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9551:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9551:3:4"
																		},
																		"nativeSrc": "9551:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9551:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9574:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9574:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9580:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9580:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9570:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9570:3:4"
																		},
																		"nativeSrc": "9570:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9570:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9544:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9544:6:4"
																},
																"nativeSrc": "9544:47:4",
																"nodeType": "YulFunctionCall",
																"src": "9544:47:4"
															},
															"nativeSrc": "9544:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "9544:47:4"
														},
														{
															"nativeSrc": "9600:139:4",
															"nodeType": "YulAssignment",
															"src": "9600:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9734:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9734:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9608:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "9608:124:4"
																},
																"nativeSrc": "9608:131:4",
																"nodeType": "YulFunctionCall",
																"src": "9608:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9600:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9600:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9327:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9478:9:4",
														"nodeType": "YulTypedName",
														"src": "9478:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9493:4:4",
														"nodeType": "YulTypedName",
														"src": "9493:4:4",
														"type": ""
													}
												],
												"src": "9327:419:4"
											},
											{
												"body": {
													"nativeSrc": "9858:115:4",
													"nodeType": "YulBlock",
													"src": "9858:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9880:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9880:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9888:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9888:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9876:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:4"
																		},
																		"nativeSrc": "9876:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9876:14:4"
																	},
																	{
																		"hexValue": "5374617274207072696365206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "9892:34:4",
																		"nodeType": "YulLiteral",
																		"src": "9892:34:4",
																		"type": "",
																		"value": "Start price must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9869:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9869:6:4"
																},
																"nativeSrc": "9869:58:4",
																"nodeType": "YulFunctionCall",
																"src": "9869:58:4"
															},
															"nativeSrc": "9869:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "9869:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9948:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9948:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9956:2:4",
																				"nodeType": "YulLiteral",
																				"src": "9956:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9944:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9944:3:4"
																		},
																		"nativeSrc": "9944:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9944:15:4"
																	},
																	{
																		"hexValue": "2030",
																		"kind": "string",
																		"nativeSrc": "9961:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9961:4:4",
																		"type": "",
																		"value": " 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9937:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:4"
																},
																"nativeSrc": "9937:29:4",
																"nodeType": "YulFunctionCall",
																"src": "9937:29:4"
															},
															"nativeSrc": "9937:29:4",
															"nodeType": "YulExpressionStatement",
															"src": "9937:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
												"nativeSrc": "9752:221:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9850:6:4",
														"nodeType": "YulTypedName",
														"src": "9850:6:4",
														"type": ""
													}
												],
												"src": "9752:221:4"
											},
											{
												"body": {
													"nativeSrc": "10125:220:4",
													"nodeType": "YulBlock",
													"src": "10125:220:4",
													"statements": [
														{
															"nativeSrc": "10135:74:4",
															"nodeType": "YulAssignment",
															"src": "10135:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10201:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10201:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10206:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10206:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10142:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "10142:58:4"
																},
																"nativeSrc": "10142:67:4",
																"nodeType": "YulFunctionCall",
																"src": "10142:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10135:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10135:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10307:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10307:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																	"nativeSrc": "10218:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "10218:88:4"
																},
																"nativeSrc": "10218:93:4",
																"nodeType": "YulFunctionCall",
																"src": "10218:93:4"
															},
															"nativeSrc": "10218:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "10218:93:4"
														},
														{
															"nativeSrc": "10320:19:4",
															"nodeType": "YulAssignment",
															"src": "10320:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10331:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10331:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10336:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10336:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10327:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10327:3:4"
																},
																"nativeSrc": "10327:12:4",
																"nodeType": "YulFunctionCall",
																"src": "10327:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10320:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10320:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9979:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10113:3:4",
														"nodeType": "YulTypedName",
														"src": "10113:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10121:3:4",
														"nodeType": "YulTypedName",
														"src": "10121:3:4",
														"type": ""
													}
												],
												"src": "9979:366:4"
											},
											{
												"body": {
													"nativeSrc": "10522:248:4",
													"nodeType": "YulBlock",
													"src": "10522:248:4",
													"statements": [
														{
															"nativeSrc": "10532:26:4",
															"nodeType": "YulAssignment",
															"src": "10532:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10544:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "10544:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10555:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10555:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10540:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10540:3:4"
																},
																"nativeSrc": "10540:18:4",
																"nodeType": "YulFunctionCall",
																"src": "10540:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10532:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "10532:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10579:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "10579:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10590:1:4",
																				"nodeType": "YulLiteral",
																				"src": "10590:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10575:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:4"
																		},
																		"nativeSrc": "10575:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10575:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10598:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "10598:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10604:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "10604:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10594:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:4"
																		},
																		"nativeSrc": "10594:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10568:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:4"
																},
																"nativeSrc": "10568:47:4",
																"nodeType": "YulFunctionCall",
																"src": "10568:47:4"
															},
															"nativeSrc": "10568:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "10568:47:4"
														},
														{
															"nativeSrc": "10624:139:4",
															"nodeType": "YulAssignment",
															"src": "10624:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10758:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "10758:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10632:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "10632:124:4"
																},
																"nativeSrc": "10632:131:4",
																"nodeType": "YulFunctionCall",
																"src": "10632:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10624:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "10624:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10351:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10502:9:4",
														"nodeType": "YulTypedName",
														"src": "10502:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10517:4:4",
														"nodeType": "YulTypedName",
														"src": "10517:4:4",
														"type": ""
													}
												],
												"src": "10351:419:4"
											},
											{
												"body": {
													"nativeSrc": "10819:190:4",
													"nodeType": "YulBlock",
													"src": "10819:190:4",
													"statements": [
														{
															"nativeSrc": "10829:33:4",
															"nodeType": "YulAssignment",
															"src": "10829:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10856:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "10856:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10838:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10838:17:4"
																},
																"nativeSrc": "10838:24:4",
																"nodeType": "YulFunctionCall",
																"src": "10838:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10829:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "10829:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10952:22:4",
																"nodeType": "YulBlock",
																"src": "10952:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10954:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10954:16:4"
																			},
																			"nativeSrc": "10954:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10954:18:4"
																		},
																		"nativeSrc": "10954:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10954:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10877:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "10877:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10884:66:4",
																		"nodeType": "YulLiteral",
																		"src": "10884:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10874:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "10874:2:4"
																},
																"nativeSrc": "10874:77:4",
																"nodeType": "YulFunctionCall",
																"src": "10874:77:4"
															},
															"nativeSrc": "10871:103:4",
															"nodeType": "YulIf",
															"src": "10871:103:4"
														},
														{
															"nativeSrc": "10983:20:4",
															"nodeType": "YulAssignment",
															"src": "10983:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10994:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "10994:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11001:1:4",
																		"nodeType": "YulLiteral",
																		"src": "11001:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10990:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10990:3:4"
																},
																"nativeSrc": "10990:13:4",
																"nodeType": "YulFunctionCall",
																"src": "10990:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10983:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10983:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10776:233:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10805:5:4",
														"nodeType": "YulTypedName",
														"src": "10805:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10815:3:4",
														"nodeType": "YulTypedName",
														"src": "10815:3:4",
														"type": ""
													}
												],
												"src": "10776:233:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than current \")\n\n        mstore(add(memPtr, 32), \"highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can perform this acti\")\n\n        mstore(add(memPtr, 32), \"on\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than 1 \")\n\n        mstore(add(memPtr, 32), \"minute\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start price must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061006f575f3560e01c80639979ef451161004d5780639979ef45146100f7578063b1cb48ef14610113578063f851a4401461013b578063fc528482146101655761006f565b806326232a2e14610073578063571a26a01461009d5780638129fc1c146100e1575b5f5ffd5b34801561007e575f5ffd5b5061008761018f565b6040516100949190610963565b60405180910390f35b3480156100a8575f5ffd5b506100c360048036038101906100be91906109aa565b610195565b6040516100d899989796959493929190610a2e565b60405180910390f35b3480156100ec575f5ffd5b506100f5610248565b005b610111600480360381019061010c91906109aa565b6103ff565b005b34801561011e575f5ffd5b5061013960048036038101906101349190610ae3565b6105eb565b005b348015610146575f5ffd5b5061014f6108e4565b60405161015c9190610b47565b60405180910390f35b348015610170575f5ffd5b50610179610909565b6040516101869190610963565b60405180910390f35b60035481565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b5f61025161090f565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156102995750825b90505f60018367ffffffffffffffff161480156102cc57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156102da575080155b15610311576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561035e576001855f0160086101000a81548160ff0219169083151502179055505b3360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156103f8575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516103ef9190610bb5565b60405180910390a15b5050505050565b5f5f5f8381526020019081526020015f209050806004015f9054906101000a900460ff16158015610442575042816001015482600201546104409190610bfb565b115b610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610c88565b60405180910390fd5b806005015434118015610498575080600301543410155b6104d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ce90610d16565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461059b578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826005015490811502906040515f60405180830381858888f19350505050158015610599573d5f5f3e3d5ffd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067190610da4565b60405180910390fd5b61ea6084116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b590610e32565b60405180910390fd5b5f8311610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790610ec0565b60405180910390fd5b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185426107349190610bfb565b81526020014281526020018481526020015f151581526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e0820151816006015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816007015590505060015f8154809291906108d990610ede565b919050555050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b5f5f610919610922565b90508091505090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b5f819050919050565b61095d8161094b565b82525050565b5f6020820190506109765f830184610954565b92915050565b5f5ffd5b6109898161094b565b8114610993575f5ffd5b50565b5f813590506109a481610980565b92915050565b5f602082840312156109bf576109be61097c565b5b5f6109cc84828501610996565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109fe826109d5565b9050919050565b610a0e816109f4565b82525050565b5f8115159050919050565b610a2881610a14565b82525050565b5f61012082019050610a425f83018c610a05565b610a4f602083018b610954565b610a5c604083018a610954565b610a696060830189610954565b610a766080830188610a1f565b610a8360a0830187610a05565b610a9060c0830186610954565b610a9d60e0830185610a05565b610aab610100830184610954565b9a9950505050505050505050565b610ac2816109f4565b8114610acc575f5ffd5b50565b5f81359050610add81610ab9565b92915050565b5f5f5f5f60808587031215610afb57610afa61097c565b5b5f610b0887828801610996565b9450506020610b1987828801610996565b9350506040610b2a87828801610acf565b9250506060610b3b87828801610996565b91505092959194509250565b5f602082019050610b5a5f830184610a05565b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610b9f610b9a610b9584610b60565b610b7c565b610b69565b9050919050565b610baf81610b85565b82525050565b5f602082019050610bc85f830184610ba6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c058261094b565b9150610c108361094b565b9250828201905080821115610c2857610c27610bce565b5b92915050565b5f82825260208201905092915050565b7f41756374696f6e2068617320656e6465640000000000000000000000000000005f82015250565b5f610c72601183610c2e565b9150610c7d82610c3e565b602082019050919050565b5f6020820190508181035f830152610c9f81610c66565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e74205f8201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b5f610d00602b83610c2e565b9150610d0b82610ca6565b604082019050919050565b5f6020820190508181035f830152610d2d81610cf4565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d207468697320616374695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f610d8e602283610c2e565b9150610d9982610d34565b604082019050919050565b5f6020820190508181035f830152610dbb81610d82565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e2031205f8201527f6d696e7574650000000000000000000000000000000000000000000000000000602082015250565b5f610e1c602683610c2e565b9150610e2782610dc2565b604082019050919050565b5f6020820190508181035f830152610e4981610e10565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e5f8201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b5f610eaa602283610c2e565b9150610eb582610e50565b604082019050919050565b5f6020820190508181035f830152610ed781610e9e565b9050919050565b5f610ee88261094b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f1a57610f19610bce565b5b60018201905091905056fea26469706673582212206641268058a16bdbb2aeb7d8b0e09cf77c1e04d55e777ff79b641192cc3fa88d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9979EF45 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x165 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH0 PUSH2 0x251 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x299 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2CC JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x311 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x35E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x3F8 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST GT JUMPDEST PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x478 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x498 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CE SWAP1 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59B JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x671 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x734 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x8D9 SWAP1 PUSH2 0xEDE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x919 PUSH2 0x922 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0x94B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x976 PUSH0 DUP4 ADD DUP5 PUSH2 0x954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x989 DUP2 PUSH2 0x94B JUMP JUMPDEST DUP2 EQ PUSH2 0x993 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9A4 DUP2 PUSH2 0x980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CC DUP5 DUP3 DUP6 ADD PUSH2 0x996 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9FE DUP3 PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0E DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA28 DUP2 PUSH2 0xA14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0xA42 PUSH0 DUP4 ADD DUP13 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA69 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA76 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0xA83 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xA90 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x954 JUMP JUMPDEST PUSH2 0xA9D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0xAAB PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x954 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC2 DUP2 PUSH2 0x9F4 JUMP JUMPDEST DUP2 EQ PUSH2 0xACC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xADD DUP2 PUSH2 0xAB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFA PUSH2 0x97C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB08 DUP8 DUP3 DUP9 ADD PUSH2 0x996 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xB19 DUP8 DUP3 DUP9 ADD PUSH2 0x996 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB2A DUP8 DUP3 DUP9 ADD PUSH2 0xACF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xB3B DUP8 DUP3 DUP9 ADD PUSH2 0x996 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5A PUSH0 DUP4 ADD DUP5 PUSH2 0xA05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB9F PUSH2 0xB9A PUSH2 0xB95 DUP5 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAF DUP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC8 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC05 DUP3 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC27 PUSH2 0xBCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC72 PUSH1 0x11 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xC7D DUP3 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC9F DUP2 PUSH2 0xC66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD00 PUSH1 0x2B DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xD0B DUP3 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD2D DUP2 PUSH2 0xCF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD8E PUSH1 0x22 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xD99 DUP3 PUSH2 0xD34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xD82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203120 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D696E7574650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE1C PUSH1 0x26 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE27 DUP3 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE49 DUP2 PUSH2 0xE10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEAA PUSH1 0x22 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0xEB5 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xED7 DUP2 PUSH2 0xE9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEE8 DUP3 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0xBCE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x41268058A16BDB 0xB2 0xAE 0xB7 0xD8 0xB0 RJUMP 0x9CF7 PUSH29 0x1E04D55E777FF79B641192CC3FA88D64736F6C634300081E0033000000 ",
							"sourceMap": "213:2352:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;759:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;300:76;;;;;;;;;;;;;:::i;:::-;;1885:677;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1171:682;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;842:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;808:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;868:26;;;;:::o;759:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;300:76::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;359:10:3::1;351:5;;:18;;;;;;;;;;;;;;;;;;5068:14:0::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;300:76:3:o;1885:677::-;1950:23;1976:8;:20;1985:10;1976:20;;;;;;;;;;;1950:46;;2065:7;:13;;;;;;;;;;;;2064:14;:72;;;;;2121:15;2102:7;:16;;;2082:7;:17;;;:36;;;;:::i;:::-;:54;2064:72;2056:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2188:7;:18;;;2176:9;:30;:65;;;;;2223:7;:18;;;2210:9;:31;;2176:65;2168:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2383:1;2350:35;;:7;:21;;;;;;;;;;;;:35;;;2346:125;;2409:7;:21;;;;;;;;;;;;2401:39;;:59;2441:7;:18;;;2401:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:125;2505:10;2481:7;:21;;;:34;;;;;;;;;;;;;;;;;;2546:9;2525:7;:18;;:30;;;;1940:622;1885:677;:::o;1171:682::-;1084:5;;;;;;;;;;;1070:19;;:10;:19;;;1062:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1320:9:::1;1308;:21;1300:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1404:1;1390:11;:15;1382:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1481:339;;;;;;;;1511:10;1481:339;;;;;;1563:9;1545:15;:27;;;;:::i;:::-;1481:339;;;;1597:15;1481:339;;;;1638:11;1481:339;;;;1670:5;1481:339;;;;;;1712:1;1481:339;;;;;;1740:1;1481:339;;;;1767:11;1481:339;;;;;;1801:8;1481:339;;::::0;1455:8:::1;:23;1464:13;;1455:23;;;;;;;;;;;:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:13;;:15;;;;;;;;;:::i;:::-;;;;;;1171:682:::0;;;;:::o;842:20::-;;;;;;;;;;;;;:::o;808:28::-;;;;:::o;9071:205:0:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:90::-;1769:7;1812:5;1805:13;1798:21;1787:32;;1735:90;;;:::o;1831:109::-;1912:21;1927:5;1912:21;:::i;:::-;1907:3;1900:34;1831:109;;:::o;1946:1096::-;2257:4;2295:3;2284:9;2280:19;2272:27;;2309:71;2377:1;2366:9;2362:17;2353:6;2309:71;:::i;:::-;2390:72;2458:2;2447:9;2443:18;2434:6;2390:72;:::i;:::-;2472;2540:2;2529:9;2525:18;2516:6;2472:72;:::i;:::-;2554;2622:2;2611:9;2607:18;2598:6;2554:72;:::i;:::-;2636:67;2698:3;2687:9;2683:19;2674:6;2636:67;:::i;:::-;2713:73;2781:3;2770:9;2766:19;2757:6;2713:73;:::i;:::-;2796;2864:3;2853:9;2849:19;2840:6;2796:73;:::i;:::-;2879;2947:3;2936:9;2932:19;2923:6;2879:73;:::i;:::-;2962;3030:3;3019:9;3015:19;3006:6;2962:73;:::i;:::-;1946:1096;;;;;;;;;;;;:::o;3048:122::-;3121:24;3139:5;3121:24;:::i;:::-;3114:5;3111:35;3101:63;;3160:1;3157;3150:12;3101:63;3048:122;:::o;3176:139::-;3222:5;3260:6;3247:20;3238:29;;3276:33;3303:5;3276:33;:::i;:::-;3176:139;;;;:::o;3321:765::-;3407:6;3415;3423;3431;3480:3;3468:9;3459:7;3455:23;3451:33;3448:120;;;3487:79;;:::i;:::-;3448:120;3607:1;3632:53;3677:7;3668:6;3657:9;3653:22;3632:53;:::i;:::-;3622:63;;3578:117;3734:2;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3705:118;3862:2;3888:53;3933:7;3924:6;3913:9;3909:22;3888:53;:::i;:::-;3878:63;;3833:118;3990:2;4016:53;4061:7;4052:6;4041:9;4037:22;4016:53;:::i;:::-;4006:63;;3961:118;3321:765;;;;;;;:::o;4092:222::-;4185:4;4223:2;4212:9;4208:18;4200:26;;4236:71;4304:1;4293:9;4289:17;4280:6;4236:71;:::i;:::-;4092:222;;;;:::o;4320:85::-;4365:7;4394:5;4383:16;;4320:85;;;:::o;4411:101::-;4447:7;4487:18;4480:5;4476:30;4465:41;;4411:101;;;:::o;4518:60::-;4546:3;4567:5;4560:12;;4518:60;;;:::o;4584:156::-;4641:9;4674:60;4691:42;4700:32;4726:5;4700:32;:::i;:::-;4691:42;:::i;:::-;4674:60;:::i;:::-;4661:73;;4584:156;;;:::o;4746:145::-;4840:44;4878:5;4840:44;:::i;:::-;4835:3;4828:57;4746:145;;:::o;4897:236::-;4997:4;5035:2;5024:9;5020:18;5012:26;;5048:78;5123:1;5112:9;5108:17;5099:6;5048:78;:::i;:::-;4897:236;;;;:::o;5139:180::-;5187:77;5184:1;5177:88;5284:4;5281:1;5274:15;5308:4;5305:1;5298:15;5325:191;5365:3;5384:20;5402:1;5384:20;:::i;:::-;5379:25;;5418:20;5436:1;5418:20;:::i;:::-;5413:25;;5461:1;5458;5454:9;5447:16;;5482:3;5479:1;5476:10;5473:36;;;5489:18;;:::i;:::-;5473:36;5325:191;;;;:::o;5522:169::-;5606:11;5640:6;5635:3;5628:19;5680:4;5675:3;5671:14;5656:29;;5522:169;;;;:::o;5697:167::-;5837:19;5833:1;5825:6;5821:14;5814:43;5697:167;:::o;5870:366::-;6012:3;6033:67;6097:2;6092:3;6033:67;:::i;:::-;6026:74;;6109:93;6198:3;6109:93;:::i;:::-;6227:2;6222:3;6218:12;6211:19;;5870:366;;;:::o;6242:419::-;6408:4;6446:2;6435:9;6431:18;6423:26;;6495:9;6489:4;6485:20;6481:1;6470:9;6466:17;6459:47;6523:131;6649:4;6523:131;:::i;:::-;6515:139;;6242:419;;;:::o;6667:230::-;6807:34;6803:1;6795:6;6791:14;6784:58;6876:13;6871:2;6863:6;6859:15;6852:38;6667:230;:::o;6903:366::-;7045:3;7066:67;7130:2;7125:3;7066:67;:::i;:::-;7059:74;;7142:93;7231:3;7142:93;:::i;:::-;7260:2;7255:3;7251:12;7244:19;;6903:366;;;:::o;7275:419::-;7441:4;7479:2;7468:9;7464:18;7456:26;;7528:9;7522:4;7518:20;7514:1;7503:9;7499:17;7492:47;7556:131;7682:4;7556:131;:::i;:::-;7548:139;;7275:419;;;:::o;7700:221::-;7840:34;7836:1;7828:6;7824:14;7817:58;7909:4;7904:2;7896:6;7892:15;7885:29;7700:221;:::o;7927:366::-;8069:3;8090:67;8154:2;8149:3;8090:67;:::i;:::-;8083:74;;8166:93;8255:3;8166:93;:::i;:::-;8284:2;8279:3;8275:12;8268:19;;7927:366;;;:::o;8299:419::-;8465:4;8503:2;8492:9;8488:18;8480:26;;8552:9;8546:4;8542:20;8538:1;8527:9;8523:17;8516:47;8580:131;8706:4;8580:131;:::i;:::-;8572:139;;8299:419;;;:::o;8724:225::-;8864:34;8860:1;8852:6;8848:14;8841:58;8933:8;8928:2;8920:6;8916:15;8909:33;8724:225;:::o;8955:366::-;9097:3;9118:67;9182:2;9177:3;9118:67;:::i;:::-;9111:74;;9194:93;9283:3;9194:93;:::i;:::-;9312:2;9307:3;9303:12;9296:19;;8955:366;;;:::o;9327:419::-;9493:4;9531:2;9520:9;9516:18;9508:26;;9580:9;9574:4;9570:20;9566:1;9555:9;9551:17;9544:47;9608:131;9734:4;9608:131;:::i;:::-;9600:139;;9327:419;;;:::o;9752:221::-;9892:34;9888:1;9880:6;9876:14;9869:58;9961:4;9956:2;9948:6;9944:15;9937:29;9752:221;:::o;9979:366::-;10121:3;10142:67;10206:2;10201:3;10142:67;:::i;:::-;10135:74;;10218:93;10307:3;10218:93;:::i;:::-;10336:2;10331:3;10327:12;10320:19;;9979:366;;;:::o;10351:419::-;10517:4;10555:2;10544:9;10540:18;10532:26;;10604:9;10598:4;10594:20;10590:1;10579:9;10575:17;10568:47;10632:131;10758:4;10632:131;:::i;:::-;10624:139;;10351:419;;;:::o;10776:233::-;10815:3;10838:24;10856:5;10838:24;:::i;:::-;10829:33;;10884:66;10877:5;10874:77;10871:103;;10954:18;;:::i;:::-;10871:103;11001:1;10994:5;10990:13;10983:20;;10776:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "786200",
								"executionCost": "816",
								"totalCost": "787016"
							},
							"external": {
								"admin()": "2552",
								"auctions(uint256)": "infinite",
								"createAuction(uint256,uint256,address,uint256)": "infinite",
								"initialize()": "105940",
								"nextAuctionId()": "2491",
								"placeBid(uint256)": "infinite",
								"platformFee()": "2426"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 2565,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206641268058a16bdbb2aeb7d8b0e09cf77c1e04d55e777ff79b641192cc3fa88d64736f6c634300081e0033",
									".code": [
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "9979EF45"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "9979EF45"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "B1CB48EF"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "F851A440"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "FC528482"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "26232A2E"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "571A26A0"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "8129FC1C"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 2565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 868,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 868,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 300,
											"end": 376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1885,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1885,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1171,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1171,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 842,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 842,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 808,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 868,
											"end": 894,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 759,
											"end": 802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 759,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 300,
											"end": 376,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 300,
											"end": 376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 359,
											"end": 369,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 351,
											"end": 356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 351,
											"end": 369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1996,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2078,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2136,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2099,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2082,
											"end": 2099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2099,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2082,
											"end": 2118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2082,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2118,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2082,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2136,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2064,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2056,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2056,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2185,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2206,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2230,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2241,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2176,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2168,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2168,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2385,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2346,
											"end": 2471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2430,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2440,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2401,
											"end": 2440,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 2441,
											"end": 2448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2459,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2471,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2346,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2502,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2502,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2502,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 2562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 2562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1089,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1062,
											"end": 1128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1062,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "EA60"
										},
										{
											"begin": 1308,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1329,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1300,
											"end": 1372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1300,
											"end": 1372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1401,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1405,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1382,
											"end": 1444,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1382,
											"end": 1444,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1521,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1560,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1545,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1545,
											"end": 1572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1545,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1612,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1712,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1778,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1464,
											"end": 1477,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1478,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1820,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1831,
											"end": 1844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1831,
											"end": 1846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1846,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 842,
											"end": 862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 808,
											"end": 836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1735,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1819,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1940,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1831,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1912,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1912,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2284,
											"end": 2293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2280,
											"end": 2299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2272,
											"end": 2299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2309,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2380,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2309,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2390,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2390,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2472,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2472,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2554,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2626,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2554,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2698,
											"end": 2701,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2680,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2636,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2703,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2636,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 2770,
											"end": 2779,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2713,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2786,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2713,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2864,
											"end": 2867,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 2853,
											"end": 2862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2796,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2869,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2796,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2936,
											"end": 2945,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2932,
											"end": 2951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2879,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2952,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2879,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3019,
											"end": 3028,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2962,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3035,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2962,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3170,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3048,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3139,
											"end": 3144,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3121,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3146,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3222,
											"end": 3227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3267,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3276,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3483,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3466,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3478,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3484,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3568,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3448,
											"end": 3568,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3487,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3487,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3566,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3487,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3568,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3448,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3666,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3632,
											"end": 3685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3685,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3632,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3685,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3622,
											"end": 3685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3736,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3805,
											"end": 3812,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3760,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3933,
											"end": 3940,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3888,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 3992,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4061,
											"end": 4068,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4052,
											"end": 4058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4016,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4016,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 4086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4236,
											"end": 4307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4405,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4320,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4512,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4411,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4480,
											"end": 4485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4465,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4518,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4560,
											"end": 4572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4560,
											"end": 4572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4518,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4740,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4584,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4691,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4726,
											"end": 4731,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4700,
											"end": 4732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4691,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4733,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4691,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4674,
											"end": 4734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4734,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4674,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4746,
											"end": 4891,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4746,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4878,
											"end": 4883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4840,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4840,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4840,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4835,
											"end": 4838,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4746,
											"end": 4891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4746,
											"end": 4891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4746,
											"end": 4891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 5133,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4897,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 5001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5020,
											"end": 5038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5121,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5108,
											"end": 5125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5099,
											"end": 5105,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5048,
											"end": 5126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5126,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5048,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 5133,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 5133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 5133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 5133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 5133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5319,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5139,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5264,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5184,
											"end": 5185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5274,
											"end": 5289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5305,
											"end": 5306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5313,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5516,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5325,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5384,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5404,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5384,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5418,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5438,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5418,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5413,
											"end": 5438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5461,
											"end": 5462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5485,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5479,
											"end": 5480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5486,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5509,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5473,
											"end": 5509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5489,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5489,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5509,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5473,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5516,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5691,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5522,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5617,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5675,
											"end": 5678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5671,
											"end": 5685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5864,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5697,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5837,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "41756374696F6E2068617320656E646564000000000000000000000000000000"
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5814,
											"end": 5857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6092,
											"end": 6095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 6033,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6033,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6198,
											"end": 6201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6109,
											"end": 6202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6109,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6225,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6489,
											"end": 6493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6485,
											"end": 6505,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6466,
											"end": 6483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6459,
											"end": 6506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6649,
											"end": 6653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6523,
											"end": 6654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6523,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6897,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6667,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6807,
											"end": 6841,
											"name": "PUSH",
											"source": 4,
											"value": "426964206D75737420626520686967686572207468616E2063757272656E7420"
										},
										{
											"begin": 6803,
											"end": 6804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 6889,
											"name": "PUSH",
											"source": 4,
											"value": "6869676865737420626964000000000000000000000000000000000000000000"
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6890,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 7269,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6903,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 4,
											"value": "2B"
										},
										{
											"begin": 7125,
											"end": 7128,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7066,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 7066,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7066,
											"end": 7133,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7066,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7231,
											"end": 7234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 7142,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 7142,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7255,
											"end": 7258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7251,
											"end": 7263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 7269,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 7269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 7269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 7269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7694,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7275,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7441,
											"end": 7445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7481,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7468,
											"end": 7477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7518,
											"end": 7538,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7492,
											"end": 7539,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7556,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7682,
											"end": 7686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7556,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7556,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7556,
											"end": 7687,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7556,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7548,
											"end": 7687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7548,
											"end": 7687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7700,
											"end": 7921,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7700,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7874,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469"
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7817,
											"end": 7875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 4,
											"value": "6F6E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7904,
											"end": 7906,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7902,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7892,
											"end": 7907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7700,
											"end": 7921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7700,
											"end": 7921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8149,
											"end": 8152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8090,
											"end": 8157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8255,
											"end": 8258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 8166,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8465,
											"end": 8469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8492,
											"end": 8501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8480,
											"end": 8506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8480,
											"end": 8506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8552,
											"end": 8561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8542,
											"end": 8562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8523,
											"end": 8540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 8580,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8572,
											"end": 8711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8572,
											"end": 8711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8949,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8724,
											"end": 8949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8898,
											"name": "PUSH",
											"source": 4,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E203120"
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8848,
											"end": 8862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8841,
											"end": 8899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8933,
											"end": 8941,
											"name": "PUSH",
											"source": 4,
											"value": "6D696E7574650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8928,
											"end": 8930,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8916,
											"end": 8931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8909,
											"end": 8942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 9321,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 8955,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9097,
											"end": 9100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 9177,
											"end": 9180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9118,
											"end": 9185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9118,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9111,
											"end": 9185,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9111,
											"end": 9185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9283,
											"end": 9286,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9194,
											"end": 9287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9312,
											"end": 9314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9307,
											"end": 9310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9303,
											"end": 9315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9296,
											"end": 9315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9296,
											"end": 9315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 9321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 9321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 9321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 9321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9746,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 9327,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9493,
											"end": 9497,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9531,
											"end": 9533,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9529,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9516,
											"end": 9534,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9580,
											"end": 9589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9570,
											"end": 9590,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9544,
											"end": 9591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9608,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9734,
											"end": 9738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9608,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9608,
											"end": 9739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9608,
											"end": 9739,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9608,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9600,
											"end": 9739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9327,
											"end": 9746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9752,
											"end": 9973,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 9752,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9926,
											"name": "PUSH",
											"source": 4,
											"value": "5374617274207072696365206D7573742062652067726561746572207468616E"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9886,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9961,
											"end": 9965,
											"name": "PUSH",
											"source": 4,
											"value": "2030000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9956,
											"end": 9958,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9948,
											"end": 9954,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9944,
											"end": 9959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9937,
											"end": 9966,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9752,
											"end": 9973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9752,
											"end": 9973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10201,
											"end": 10204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 10142,
											"end": 10209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10218,
											"end": 10311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10517,
											"end": 10521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10604,
											"end": 10613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10598,
											"end": 10602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10575,
											"end": 10592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10568,
											"end": 10615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10758,
											"end": 10762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 10632,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10624,
											"end": 10763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10624,
											"end": 10763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10351,
											"end": 10770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10776,
											"end": 11009,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 10776,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10815,
											"end": 10818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10838,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 10838,
											"end": 10862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10862,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10838,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10884,
											"end": 10950,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10877,
											"end": 10882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10874,
											"end": 10951,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10871,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 10871,
											"end": 10974,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10954,
											"end": 10972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10871,
											"end": 10974,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 10871,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11001,
											"end": 11002,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10994,
											"end": 10999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 11003,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10983,
											"end": 11003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10983,
											"end": 11003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10776,
											"end": 11009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10776,
											"end": 11009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10776,
											"end": 11009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10776,
											"end": 11009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NFTAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"auctions(uint256)": "571a26a0",
							"createAuction(uint256,uint256,address,uint256)": "b1cb48ef",
							"initialize()": "8129fc1c",
							"nextAuctionId()": "fc528482",
							"placeBid(uint256)": "9979ef45",
							"platformFee()": "26232a2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAuctionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTAuction.sol\":\"NFTAuction\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/NFTAuction.sol\":{\"keccak256\":\"0x51537ee5432cf1b688a51a05d31d886bc68dc1a2c129f83a9945212d6dd0d395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcfad2908051a5306b7679639b38de27a479349319b5cf8c65108c77233e077\",\"dweb:/ipfs/Qmebb24DKBFYKJP7Sr1mVP16jMbsyDpZMK6pJh9P1j9mVG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 437,
								"contract": "contracts/NFTAuction.sol:NFTAuction",
								"label": "auctions",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Auction)432_storage)"
							},
							{
								"astId": 439,
								"contract": "contracts/NFTAuction.sol:NFTAuction",
								"label": "nextAuctionId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 441,
								"contract": "contracts/NFTAuction.sol:NFTAuction",
								"label": "admin",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 443,
								"contract": "contracts/NFTAuction.sol:NFTAuction",
								"label": "platformFee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Auction)432_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTAuction.Auction)",
								"numberOfBytes": "32",
								"value": "t_struct(Auction)432_storage"
							},
							"t_struct(Auction)432_storage": {
								"encoding": "inplace",
								"label": "struct NFTAuction.Auction",
								"members": [
									{
										"astId": 415,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 417,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "duration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 419,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 421,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "startPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 423,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "ended",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 425,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "highestBidder",
										"offset": 1,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 427,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "highestBid",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 429,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "nftAddress",
										"offset": 0,
										"slot": "6",
										"type": "t_address"
									},
									{
										"astId": 431,
										"contract": "contracts/NFTAuction.sol:NFTAuction",
										"label": "tokenId",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							267
						]
					},
					"id": 268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 267,
							"linearizedBaseContracts": [
								267
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 267,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 267,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1079:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4704:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4724:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4744:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4768:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4788:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$267",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4854:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4871:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4849:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4885:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4906:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4899:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4981:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4977:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4997:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5068:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5064:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5084:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5098:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5135:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6289:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6355:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6355:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6355:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "6388:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6429:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6429:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6448:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6425:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6475:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6496:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6489:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6539:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6573:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6573:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6616:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6654:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6649:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6259:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:0"
									},
									"src": "6250:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6919:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6929:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:0"
									},
									"src": "6891:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7134:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7149:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7144:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7168:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7189:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7182:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:0"
									},
									"scope": 267,
									"src": "7082:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7758:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7824:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7824:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7824:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "7857:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7898:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7894:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7915:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7936:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7929:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7983:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7979:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8019:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8033:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8085:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8080:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:0"
									},
									"scope": 267,
									"src": "7709:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8306:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8323:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8323:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8316:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8298:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:0"
									},
									"scope": 267,
									"src": "8241:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8541:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "8558:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8558:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8551:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8535:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:0"
									},
									"scope": 267,
									"src": "8485:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8896:45:0",
										"statements": [
											{
												"expression": {
													"id": 249,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "8913:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 248,
												"id": 250,
												"nodeType": "Return",
												"src": "8906:28:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:0",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:0"
									},
									"scope": 267,
									"src": "8819:122:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "9161:115:0",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 265,
														"src": "9171:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 259,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "9186:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:0"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:0",
													"nodeType": "YulBlock",
													"src": "9232:38:0",
													"statements": [
														{
															"nativeSrc": "9246:14:0",
															"nodeType": "YulAssignment",
															"src": "9246:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:0",
																"nodeType": "YulIdentifier",
																"src": "9256:4:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 257,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 260,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:0",
														"valueSize": 1
													}
												],
												"id": 264,
												"nodeType": "InlineAssembly",
												"src": "9223:47:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "9129:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "9129:20:0"
													},
													"referencedDeclaration": 10,
													"src": "9129:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:0"
									},
									"scope": 267,
									"src": "9071:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 268,
							"src": "2349:6929:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:9166:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							396
						],
						"IERC721": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 269,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 397,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 270,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 396,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 273,
										"name": "IERC165",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "288:7:1"
									},
									"id": 274,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 272,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:1",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								396
							],
							"name": "IERC721",
							"nameLocation": "277:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 283,
									"name": "Transfer",
									"nameLocation": "401:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "410:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "432:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "452:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:1"
									},
									"src": "395:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 292,
									"name": "Approval",
									"nameLocation": "588:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "597:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "620:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "646:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:1"
									},
									"src": "582:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 301,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "820:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "843:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "869:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:1"
									},
									"src": "799:85:1"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "990:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "1028:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:1"
									},
									"scope": 384,
									"src": "971:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1244:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:1"
									},
									"scope": 384,
									"src": "1187:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1861:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1875:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1887:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1904:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:1"
									},
									"scope": 384,
									"src": "1835:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2691:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:1"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:1"
									},
									"scope": 384,
									"src": "2651:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3495:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3509:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "3521:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:1"
									},
									"scope": 384,
									"src": "3473:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "4027:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "4039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:1"
									},
									"scope": 384,
									"src": "4010:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4418:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4436:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:1"
									},
									"scope": 384,
									"src": "4391:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4671:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:1"
									},
									"scope": 384,
									"src": "4610:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4879:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "4920:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:1"
									},
									"scope": 384,
									"src": "4838:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "267:4661:1",
							"usedErrors": [],
							"usedEvents": [
								283,
								292,
								301
							]
						}
					],
					"src": "108:4821:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:2",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "IERC165",
							"nameLocation": "433:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "819:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 389,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "862:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:2"
									},
									"scope": 396,
									"src": "792:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 397,
							"src": "423:447:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:2"
				},
				"id": 2
			},
			"contracts/NFTAuction.sol": {
				"ast": {
					"absolutePath": "contracts/NFTAuction.sol",
					"exportedSymbols": {
						"IERC165": [
							396
						],
						"IERC721": [
							384
						],
						"Initializable": [
							267
						],
						"NFTAuction": [
							590
						]
					},
					"id": 591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 591,
							"sourceUnit": 385,
							"src": "57:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 591,
							"sourceUnit": 268,
							"src": "136:75:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 401,
										"name": "Initializable",
										"nameLocations": [
											"236:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 267,
										"src": "236:13:3"
									},
									"id": 402,
									"nodeType": "InheritanceSpecifier",
									"src": "236:13:3"
								}
							],
							"canonicalName": "NFTAuction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 590,
							"linearizedBaseContracts": [
								590,
								267
							],
							"name": "NFTAuction",
							"nameLocation": "222:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "341:35:3",
										"statements": [
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 407,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "351:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 408,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "359:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "363:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "359:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "351:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "351:18:3"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 404,
												"name": "initializer",
												"nameLocations": [
													"329:11:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "329:11:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "329:11:3"
										}
									],
									"name": "initialize",
									"nameLocation": "309:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:0:3"
									},
									"scope": 590,
									"src": "300:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "NFTAuction.Auction",
									"id": 432,
									"members": [
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "454:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "446:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 414,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "446:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 417,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "478:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "470:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 419,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "504:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "496:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "496:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 421,
											"mutability": "mutable",
											"name": "startPrice",
											"nameLocation": "531:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "523:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "523:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 423,
											"mutability": "mutable",
											"name": "ended",
											"nameLocation": "556:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "551:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 422,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "551:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 425,
											"mutability": "mutable",
											"name": "highestBidder",
											"nameLocation": "579:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "571:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 424,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "571:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 427,
											"mutability": "mutable",
											"name": "highestBid",
											"nameLocation": "610:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "602:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 426,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "602:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 429,
											"mutability": "mutable",
											"name": "nftAddress",
											"nameLocation": "667:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "659:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 428,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 431,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "719:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 432,
											"src": "711:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 430,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "711:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Auction",
									"nameLocation": "428:7:3",
									"nodeType": "StructDefinition",
									"scope": 590,
									"src": "421:312:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "571a26a0",
									"id": 437,
									"mutability": "mutable",
									"name": "auctions",
									"nameLocation": "794:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "759:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$432_storage_$",
										"typeString": "mapping(uint256 => struct NFTAuction.Auction)"
									},
									"typeName": {
										"id": 436,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 433,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "759:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$432_storage_$",
											"typeString": "mapping(uint256 => struct NFTAuction.Auction)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 434,
												"name": "Auction",
												"nameLocations": [
													"778:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 432,
												"src": "778:7:3"
											},
											"referencedDeclaration": 432,
											"src": "778:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
												"typeString": "struct NFTAuction.Auction"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc528482",
									"id": 439,
									"mutability": "mutable",
									"name": "nextAuctionId",
									"nameLocation": "823:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "808:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 438,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "808:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 441,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "857:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "842:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 440,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26232a2e",
									"id": 443,
									"mutability": "mutable",
									"name": "platformFee",
									"nameLocation": "883:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 590,
									"src": "868:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "868:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "1052:94:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 446,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1070:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1074:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1070:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 448,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "1084:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1070:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1091:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
																"typeString": "literal_string \"Only admin can perform this action\""
															},
															"value": "Only admin can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
																"typeString": "literal_string \"Only admin can perform this action\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1062:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1062:66:3"
											},
											{
												"id": 453,
												"nodeType": "PlaceholderStatement",
												"src": "1138:1:3"
											}
										]
									},
									"id": 455,
									"name": "onlyAdmin",
									"nameLocation": "1040:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:2:3"
									},
									"src": "1031:115:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1290:563:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 469,
																"name": "_duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "1308:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_60000_by_1",
																	"typeString": "int_const 60000"
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1320:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3630",
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1327:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "1320:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60000_by_1",
																	"typeString": "int_const 60000"
																}
															},
															"src": "1308:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e2031206d696e757465",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1331:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd",
																"typeString": "literal_string \"Duration must be greater than 1 minute\""
															},
															"value": "Duration must be greater than 1 minute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd",
																"typeString": "literal_string \"Duration must be greater than 1 minute\""
															}
														],
														"id": 468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1300:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "1300:72:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "_startPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "1390:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1404:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1390:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374617274207072696365206d7573742062652067726561746572207468616e2030",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1407:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																"typeString": "literal_string \"Start price must be greater than 0\""
															},
															"value": "Start price must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb",
																"typeString": "literal_string \"Start price must be greater than 0\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1382:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1382:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1382:62:3"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 484,
															"name": "auctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "1455:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$432_storage_$",
																"typeString": "mapping(uint256 => struct NFTAuction.Auction storage ref)"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "nextAuctionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "1464:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1455:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$432_storage",
															"typeString": "struct NFTAuction.Auction storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 488,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1511:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1515:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1511:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 490,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1545:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1551:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1545:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 492,
																	"name": "_duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "1563:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1545:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 494,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1597:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1603:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1597:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 496,
																"name": "_startPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "1638:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1670:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1712:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1704:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1704:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1704:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1740:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 503,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "1767:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 504,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "1801:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 487,
															"name": "Auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1481:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Auction_$432_storage_ptr_$",
																"typeString": "type(struct NFTAuction.Auction storage pointer)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1503:6:3",
															"1535:8:3",
															"1586:9:3",
															"1626:10:3",
															"1663:5:3",
															"1689:13:3",
															"1728:10:3",
															"1755:10:3",
															"1792:7:3"
														],
														"names": [
															"seller",
															"duration",
															"startTime",
															"startPrice",
															"ended",
															"highestBidder",
															"highestBid",
															"nftAddress",
															"tokenId"
														],
														"nodeType": "FunctionCall",
														"src": "1481:339:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$432_memory_ptr",
															"typeString": "struct NFTAuction.Auction memory"
														}
													},
													"src": "1455:365:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$432_storage",
														"typeString": "struct NFTAuction.Auction storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1455:365:3"
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1831:15:3",
													"subExpression": {
														"id": 508,
														"name": "nextAuctionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "1831:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "1831:15:3"
											}
										]
									},
									"functionSelector": "b1cb48ef",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyAdmin",
												"nameLocations": [
													"1280:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 455,
												"src": "1280:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1280:9:3"
										}
									],
									"name": "createAuction",
									"nameLocation": "1180:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_duration",
												"nameLocation": "1202:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1194:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "_startPrice",
												"nameLocation": "1221:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1213:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "1242:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1234:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1263:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1255:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:79:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:0:3"
									},
									"scope": 590,
									"src": "1171:682:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "1940:622:3",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "auction",
														"nameLocation": "1966:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "1950:23:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
															"typeString": "struct NFTAuction.Auction"
														},
														"typeName": {
															"id": 518,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 517,
																"name": "Auction",
																"nameLocations": [
																	"1950:7:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 432,
																"src": "1950:7:3"
															},
															"referencedDeclaration": 432,
															"src": "1950:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																"typeString": "struct NFTAuction.Auction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"baseExpression": {
														"id": 520,
														"name": "auctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "1976:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Auction_$432_storage_$",
															"typeString": "mapping(uint256 => struct NFTAuction.Auction storage ref)"
														}
													},
													"id": 522,
													"indexExpression": {
														"id": 521,
														"name": "_auctionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1985:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1976:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Auction_$432_storage",
														"typeString": "struct NFTAuction.Auction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1950:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2064:14:3",
																"subExpression": {
																	"expression": {
																		"id": 525,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2065:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																			"typeString": "struct NFTAuction.Auction storage pointer"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2073:5:3",
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "2065:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 528,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "2082:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																				"typeString": "struct NFTAuction.Auction storage pointer"
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2090:9:3",
																		"memberName": "startTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 419,
																		"src": "2082:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 530,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "2102:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																				"typeString": "struct NFTAuction.Auction storage pointer"
																			}
																		},
																		"id": 531,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2110:8:3",
																		"memberName": "duration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 417,
																		"src": "2102:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2082:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 533,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2121:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2127:9:3",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2121:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2082:54:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2064:72:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41756374696f6e2068617320656e646564",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2138:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															},
															"value": "Auction has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5",
																"typeString": "literal_string \"Auction has ended\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2056:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2056:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2056:102:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 541,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2176:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2180:5:3",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2176:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 543,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2188:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																			"typeString": "struct NFTAuction.Auction storage pointer"
																		}
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2196:10:3",
																	"memberName": "highestBid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 427,
																	"src": "2188:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2176:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 546,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2210:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2214:5:3",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2210:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 548,
																		"name": "auction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2223:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																			"typeString": "struct NFTAuction.Auction storage pointer"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2231:10:3",
																	"memberName": "startPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 421,
																	"src": "2223:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2210:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2176:65:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426964206d75737420626520686967686572207468616e2063757272656e74206869676865737420626964",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2243:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
																"typeString": "literal_string \"Bid must be higher than current highest bid\""
															},
															"value": "Bid must be higher than current highest bid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9",
																"typeString": "literal_string \"Bid must be higher than current highest bid\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2168:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2168:121:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																"typeString": "struct NFTAuction.Auction storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2358:13:3",
														"memberName": "highestBidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "2350:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2383:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2375:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 557,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2375:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2375:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2350:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "2346:125:3",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "2387:84:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 568,
																			"name": "auction",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "2441:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																				"typeString": "struct NFTAuction.Auction storage pointer"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2449:10:3",
																		"memberName": "highestBid",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 427,
																		"src": "2441:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 564,
																					"name": "auction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "2409:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																						"typeString": "struct NFTAuction.Auction storage pointer"
																					}
																				},
																				"id": 565,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2417:13:3",
																				"memberName": "highestBidder",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 425,
																				"src": "2409:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2401:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 562,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2401:8:3",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2401:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2432:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2401:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2401:59:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "2401:59:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 574,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2481:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																"typeString": "struct NFTAuction.Auction storage pointer"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2489:13:3",
														"memberName": "highestBidder",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "2481:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 577,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2505:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2509:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2505:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2481:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2481:34:3"
											},
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 581,
															"name": "auction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2525:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Auction_$432_storage_ptr",
																"typeString": "struct NFTAuction.Auction storage pointer"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2533:10:3",
														"memberName": "highestBid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "2525:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 584,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2546:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2550:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2546:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2525:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "2525:30:3"
											}
										]
									},
									"functionSelector": "9979ef45",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "placeBid",
									"nameLocation": "1894:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "_auctionId",
												"nameLocation": "1911:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1903:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:20:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:3"
									},
									"scope": 590,
									"src": "1885:677:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 591,
							"src": "213:2352:3",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:2533:3"
				},
				"id": 3
			}
		}
	}
}