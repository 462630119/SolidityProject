{"id":"f7e688d6a476794b9dad1ef1b01fde14","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/NFTAuction_v2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n// upgrade contract\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract NFTAuctionV2 is Initializable {\n    // 初始化函数，替代构造函数\n    function initialize() public initializer {\n        admin = msg.sender;\n    }\n\n    // Auction contract code goes here\n    struct Auction {\n        address seller;\n        uint256 duration;\n        uint256 startTime;\n        uint256 startPrice;\n        bool ended;\n        address highestBidder;\n        uint256 highestBid;\n\n        // NFT 合约地址\n        address nftAddress;\n        // NFT 代币ID\n        uint256 tokenId;\n    }\n\n    // 状态变量\n    mapping(uint256 => Auction) public auctions;\n    uint256 public nextAuctionId;\n    address public admin;\n    uint256 public platformFee; // 平台手续费，单位为百分比（例如：2 表示 2%）\n    // constructor () {\n    //     admin = msg.sender;\n    // }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin can perform this action\");\n        _;\n    }\n    // 创建拍卖\n    function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {\n        require(_duration > 1000 * 60, \"Duration must be greater than 1 minute\");\n        require(_startPrice > 0, \"Start price must be greater than 0\");\n\n        auctions[nextAuctionId] = Auction({\n            seller: msg.sender,\n            duration: block.timestamp + _duration,\n            startTime: block.timestamp,\n            startPrice: _startPrice,\n            ended: false,\n            highestBidder: address(0),\n            highestBid: 0,\n            nftAddress: _nftAddress,\n            tokenId: _tokenId\n        });\n\n        nextAuctionId++;\n    }\n\n    // 买家参与拍卖\n    function placeBid(uint256 _auctionId) external payable {\n        Auction storage auction = auctions[_auctionId];\n        // 拍卖结束flag && 拍卖时间未到\n        require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \"Auction has ended\");\n        require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \"Bid must be higher than current highest bid\");\n\n        // Refund the previous highest bidder\n        if (auction.highestBidder != address(0)) {\n            payable(auction.highestBidder).transfer(auction.highestBid);\n        }\n\n        auction.highestBidder = msg.sender;\n        auction.highestBid = msg.value;\n    }\n    function testHello() public pure returns (string memory) {\n        return \"Hello, World!\";\n    }\n\n}"},"contracts/NFTAuction.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n// upgrade contract\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract NFTAuction is Initializable, UUPSUpgradeable {\n    // 初始化函数，替代构造函数\n    function initialize() public initializer {\n        admin = msg.sender;\n    }\n\n    // Auction contract code goes here\n    struct Auction {\n        address seller;\n        uint256 duration;\n        uint256 startTime;\n        uint256 startPrice;\n        bool ended;\n        address highestBidder;\n        uint256 highestBid;\n\n        // NFT 合约地址\n        address nftAddress;\n        // NFT 代币ID\n        uint256 tokenId;\n    }\n\n    // 状态变量\n    mapping(uint256 => Auction) public auctions;\n    uint256 public nextAuctionId;\n    address public admin;\n    uint256 public platformFee; // 平台手续费，单位为百分比（例如：2 表示 2%）\n    // constructor () {\n    //     admin = msg.sender;\n    // }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin can perform this action\");\n        _;\n    }\n    // 创建拍卖\n    function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {\n        require(_duration > 1000 * 60, \"Duration must be greater than 1 minute\");\n        require(_startPrice > 0, \"Start price must be greater than 0\");\n\n        auctions[nextAuctionId] = Auction({\n            seller: msg.sender,\n            duration: block.timestamp + _duration,\n            startTime: block.timestamp,\n            startPrice: _startPrice,\n            ended: false,\n            highestBidder: address(0),\n            highestBid: 0,\n            nftAddress: _nftAddress,\n            tokenId: _tokenId\n        });\n\n        nextAuctionId++;\n    }\n\n    // 买家参与拍卖\n    function placeBid(uint256 _auctionId) external payable {\n        Auction storage auction = auctions[_auctionId];\n        // 拍卖结束flag && 拍卖时间未到\n        require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \"Auction has ended\");\n        require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \"Bid must be higher than current highest bid\");\n\n        // Refund the previous highest bidder\n        if (auction.highestBidder != address(0)) {\n            payable(auction.highestBidder).transfer(auction.highestBid);\n        }\n\n        auction.highestBidder = msg.sender;\n        auction.highestBid = msg.value;\n    }\n    function _authorizeUpgrade(address newImplementation) internal override onlyAdmin {\n        require(msg.sender == admin, \"Only admin can upgrade the contract\");\n    }\n\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/NFTAuction.sol:79:32:\n   |\n79 |     function _authorizeUpgrade(address newImplementation) internal override onlyAdmin {\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2714,"file":"contracts/NFTAuction.sol","start":2689},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/NFTAuction.sol:79:5:\n   |\n79 |     function _authorizeUpgrade(address newImplementation) internal override onlyAdmin {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":2828,"file":"contracts/NFTAuction.sol","start":2662},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[267]},"id":268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:0"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"139:2209:0","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":267,"linearizedBaseContracts":[267],"name":"Initializable","nameLocation":"2367:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"2387:293:0","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":10,"members":[{"constant":false,"id":6,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:0","nodeType":"VariableDeclaration","scope":10,"src":"2813:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:0","nodeType":"VariableDeclaration","scope":10,"src":"2950:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:0","nodeType":"StructDefinition","scope":267,"src":"2685:290:0","visibility":"public"},{"constant":true,"id":13,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:0","nodeType":"VariableDeclaration","scope":267,"src":"3098:115:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:0","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"3220:60:0","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":16,"name":"InvalidInitialization","nameLocation":"3291:21:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"3312:2:0"},"src":"3285:30:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"3321:57:0","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":19,"name":"NotInitializing","nameLocation":"3389:15:0","nodeType":"ErrorDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"3404:2:0"},"src":"3383:24:0"},{"anonymous":false,"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"3413:90:0","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":24,"name":"Initialized","nameLocation":"3514:11:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:0","nodeType":"VariableDeclaration","scope":24,"src":"3526:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":21,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:0"},"src":"3508:34:0"},{"body":{"id":106,"nodeType":"Block","src":"4092:1079:0","statements":[{"assignments":[29],"declarations":[{"constant":false,"id":29,"mutability":"mutable","name":"$","nameLocation":"4187:1:0","nodeType":"VariableDeclaration","scope":106,"src":"4158:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"InitializableStorage","nameLocations":["4158:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"4158:20:0"},"referencedDeclaration":10,"src":"4158:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":32,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":30,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4191:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:0"},{"assignments":[34],"declarations":[{"constant":false,"id":34,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:0","nodeType":"VariableDeclaration","scope":106,"src":"4279:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":38,"initialValue":{"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:0","subExpression":{"expression":{"id":35,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4302:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":36,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"4302:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:0"},{"assignments":[40],"declarations":[{"constant":false,"id":40,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:0","nodeType":"VariableDeclaration","scope":106,"src":"4327:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":39,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":43,"initialValue":{"expression":{"id":41,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4348:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":42,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"4348:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:0"},{"assignments":[45],"declarations":[{"constant":false,"id":45,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:0","nodeType":"VariableDeclaration","scope":106,"src":"4704:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":51,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":46,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"4724:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":49,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"4744:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:0"},{"assignments":[53],"declarations":[{"constant":false,"id":53,"mutability":"mutable","name":"construction","nameLocation":"4773:12:0","nodeType":"VariableDeclaration","scope":106,"src":"4768:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":52,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":66,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":54,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"4788:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":59,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$267","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$267","typeString":"contract Initializable"}],"id":58,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:0","typeDescriptions":{}}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:0","memberName":"code","nodeType":"MemberAccess","src":"4808:18:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:0","memberName":"length","nodeType":"MemberAccess","src":"4808:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:0","subExpression":{"id":67,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"4854:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:0","subExpression":{"id":69,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"4871:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":76,"nodeType":"IfStatement","src":"4849:91:0","trueBody":{"id":75,"nodeType":"Block","src":"4885:55:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":72,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"4906:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":74,"nodeType":"RevertStatement","src":"4899:30:0"}]}},{"expression":{"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":77,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4949:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"4949:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":82,"nodeType":"ExpressionStatement","src":"4949:18:0"},{"condition":{"id":83,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"4981:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":91,"nodeType":"IfStatement","src":"4977:67:0","trueBody":{"id":90,"nodeType":"Block","src":"4997:47:0","statements":[{"expression":{"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":84,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"5011:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":86,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"5011:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":89,"nodeType":"ExpressionStatement","src":"5011:22:0"}]}},{"id":92,"nodeType":"PlaceholderStatement","src":"5053:1:0"},{"condition":{"id":93,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"5068:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":105,"nodeType":"IfStatement","src":"5064:101:0","trueBody":{"id":104,"nodeType":"Block","src":"5084:81:0","statements":[{"expression":{"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":94,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"5098:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":96,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"5098:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":99,"nodeType":"ExpressionStatement","src":"5098:23:0"},{"eventCall":{"arguments":[{"hexValue":"31","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":100,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"5140:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"EmitStatement","src":"5135:19:0"}]}}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"3548:516:0","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":107,"name":"initializer","nameLocation":"4078:11:0","nodeType":"ModifierDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"4089:2:0"},"src":"4069:1102:0","virtual":false,"visibility":"internal"},{"body":{"id":153,"nodeType":"Block","src":"6289:392:0","statements":[{"assignments":[114],"declarations":[{"constant":false,"id":114,"mutability":"mutable","name":"$","nameLocation":"6384:1:0","nodeType":"VariableDeclaration","scope":153,"src":"6355:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":113,"nodeType":"UserDefinedTypeName","pathNode":{"id":112,"name":"InitializableStorage","nameLocations":["6355:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"6355:20:0"},"referencedDeclaration":10,"src":"6355:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":117,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6388:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":118,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"6429:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6429:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":120,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"6448:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"6448:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":122,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6466:7:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"6425:105:0","trueBody":{"id":128,"nodeType":"Block","src":"6475:55:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":125,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"6496:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":127,"nodeType":"RevertStatement","src":"6489:30:0"}]}},{"expression":{"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":130,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"6539:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"6539:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":133,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6556:7:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":135,"nodeType":"ExpressionStatement","src":"6539:24:0"},{"expression":{"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":136,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"6573:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6573:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":141,"nodeType":"ExpressionStatement","src":"6573:22:0"},{"id":142,"nodeType":"PlaceholderStatement","src":"6605:1:0"},{"expression":{"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":143,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"6616:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"6616:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":148,"nodeType":"ExpressionStatement","src":"6616:23:0"},{"eventCall":{"arguments":[{"id":150,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"6666:7:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":149,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"6654:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"EmitStatement","src":"6649:25:0"}]},"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"5177:1068:0","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":154,"name":"reinitializer","nameLocation":"6259:13:0","nodeType":"ModifierDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"version","nameLocation":"6280:7:0","nodeType":"VariableDeclaration","scope":154,"src":"6273:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":109,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:0"},"src":"6250:431:0","virtual":false,"visibility":"internal"},{"body":{"id":161,"nodeType":"Block","src":"6919:48:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":157,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"6929:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":159,"nodeType":"ExpressionStatement","src":"6929:20:0"},{"id":160,"nodeType":"PlaceholderStatement","src":"6959:1:0"}]},"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"6687:199:0","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":162,"name":"onlyInitializing","nameLocation":"6900:16:0","nodeType":"ModifierDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"6916:2:0"},"src":"6891:76:0","virtual":false,"visibility":"internal"},{"body":{"id":174,"nodeType":"Block","src":"7134:89:0","statements":[{"condition":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:0","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":166,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"7149:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":173,"nodeType":"IfStatement","src":"7144:73:0","trueBody":{"id":172,"nodeType":"Block","src":"7168:49:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"7189:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":171,"nodeType":"RevertStatement","src":"7182:24:0"}]}}]},"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"6973:104:0","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":175,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:0","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"7109:2:0"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"7134:0:0"},"scope":267,"src":"7082:141:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":220,"nodeType":"Block","src":"7758:373:0","statements":[{"assignments":[181],"declarations":[{"constant":false,"id":181,"mutability":"mutable","name":"$","nameLocation":"7853:1:0","nodeType":"VariableDeclaration","scope":220,"src":"7824:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":180,"nodeType":"UserDefinedTypeName","pathNode":{"id":179,"name":"InitializableStorage","nameLocations":["7824:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"7824:20:0"},"referencedDeclaration":10,"src":"7824:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":184,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":182,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"7857:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:0"},{"condition":{"expression":{"id":185,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"7898:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"7898:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":191,"nodeType":"IfStatement","src":"7894:76:0","trueBody":{"id":190,"nodeType":"Block","src":"7915:55:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":187,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"7936:21:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":189,"nodeType":"RevertStatement","src":"7929:30:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":192,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"7983:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"7983:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":195,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":194,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:0","memberName":"max","nodeType":"MemberAccess","src":"8001:16:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":219,"nodeType":"IfStatement","src":"7979:146:0","trueBody":{"id":218,"nodeType":"Block","src":"8019:106:0","statements":[{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":200,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"8033:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"8033:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":204,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":203,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:0","memberName":"max","nodeType":"MemberAccess","src":"8050:16:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":209,"nodeType":"ExpressionStatement","src":"8033:33:0"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":212,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":211,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:0","memberName":"max","nodeType":"MemberAccess","src":"8097:16:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":210,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8085:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"8080:34:0"}]}}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"7229:475:0","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":221,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:0","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"7738:2:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"7758:0:0"},"scope":267,"src":"7709:422:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"8306:63:0","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":227,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"8323:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:0","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":6,"src":"8323:39:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":226,"id":230,"nodeType":"Return","src":"8316:46:0"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"8137:99:0","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":232,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"8272:2:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"8298:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":224,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:0"},"scope":267,"src":"8241:128:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":242,"nodeType":"Block","src":"8541:64:0","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":238,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"8558:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:0","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":9,"src":"8558:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":237,"id":241,"nodeType":"Return","src":"8551:47:0"}]},"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"8375:105:0","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":243,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:0","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"8509:2:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"8535:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:0"},"scope":267,"src":"8485:120:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":251,"nodeType":"Block","src":"8896:45:0","statements":[{"expression":{"id":249,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"8913:21:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":248,"id":250,"nodeType":"Return","src":"8906:28:0"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"8611:203:0","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:0","nodeType":"FunctionDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"8853:2:0"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":252,"src":"8887:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:0"},"scope":267,"src":"8819:122:0","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"9161:115:0","statements":[{"assignments":[260],"declarations":[{"constant":false,"id":260,"mutability":"mutable","name":"slot","nameLocation":"9179:4:0","nodeType":"VariableDeclaration","scope":265,"src":"9171:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":263,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":261,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"9186:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:0"},{"AST":{"nativeSrc":"9232:38:0","nodeType":"YulBlock","src":"9232:38:0","statements":[{"nativeSrc":"9246:14:0","nodeType":"YulAssignment","src":"9246:14:0","value":{"name":"slot","nativeSrc":"9256:4:0","nodeType":"YulIdentifier","src":"9256:4:0"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:0","nodeType":"YulIdentifier","src":"9246:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":257,"isOffset":false,"isSlot":true,"src":"9246:6:0","suffix":"slot","valueSize":1},{"declaration":260,"isOffset":false,"isSlot":false,"src":"9256:4:0","valueSize":1}],"id":264,"nodeType":"InlineAssembly","src":"9223:47:0"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"8947:67:0","text":" @dev Returns a pointer to the storage namespace."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:0","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"9104:2:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"$","nameLocation":"9158:1:0","nodeType":"VariableDeclaration","scope":266,"src":"9129:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":256,"nodeType":"UserDefinedTypeName","pathNode":{"id":255,"name":"InitializableStorage","nameLocations":["9129:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"9129:20:0"},"referencedDeclaration":10,"src":"9129:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$10_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:0"},"scope":267,"src":"9071:205:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":268,"src":"2349:6929:0","usedErrors":[16,19],"usedEvents":[24]}],"src":"113:9166:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[774],"IERC1822Proxiable":[480],"Initializable":[267],"UUPSUpgradeable":[449]},"id":450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":269,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":450,"sourceUnit":481,"src":"141:88:1","symbolAliases":[{"foreign":{"id":270,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"149:17:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":450,"sourceUnit":775,"src":"230:84:1","symbolAliases":[{"foreign":{"id":272,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"238:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":450,"sourceUnit":268,"src":"315:50:1","symbolAliases":[{"foreign":{"id":274,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"323:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":277,"name":"Initializable","nameLocations":["1023:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":267,"src":"1023:13:1"},"id":278,"nodeType":"InheritanceSpecifier","src":"1023:13:1"},{"baseName":{"id":279,"name":"IERC1822Proxiable","nameLocations":["1038:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":480,"src":"1038:17:1"},"id":280,"nodeType":"InheritanceSpecifier","src":"1038:17:1"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"367:618:1","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":449,"linearizedBaseContracts":[449,480,267],"name":"UUPSUpgradeable","nameLocation":"1004:15:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"1062:61:1","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":287,"mutability":"immutable","name":"__self","nameLocation":"1154:6:1","nodeType":"VariableDeclaration","scope":449,"src":"1128:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":285,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$449","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$449","typeString":"contract UUPSUpgradeable"}],"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:1","typeDescriptions":{}}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"1183:631:1","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":291,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:1","nodeType":"VariableDeclaration","scope":449,"src":"1819:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":289,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1884:65:1","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":294,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:1","nodeType":"ErrorDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"1987:2:1"},"src":"1954:36:1"},{"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"1996:68:1","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":299,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:1","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"slot","nameLocation":"2112:4:1","nodeType":"VariableDeclaration","scope":299,"src":"2104:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:1"},"src":"2069:49:1"},{"body":{"id":306,"nodeType":"Block","src":"2645:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2655:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":304,"nodeType":"ExpressionStatement","src":"2655:13:1"},{"id":305,"nodeType":"PlaceholderStatement","src":"2678:1:1"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2124:495:1","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":307,"name":"onlyProxy","nameLocation":"2633:9:1","nodeType":"ModifierDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"2642:2:1"},"src":"2624:62:1","virtual":false,"visibility":"internal"},{"body":{"id":314,"nodeType":"Block","src":"2916:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2926:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"2926:20:1"},{"id":313,"nodeType":"PlaceholderStatement","src":"2956:1:1"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2692:195:1","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":315,"name":"notDelegated","nameLocation":"2901:12:1","nodeType":"ModifierDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"2913:2:1"},"src":"2892:72:1","virtual":false,"visibility":"internal"},{"body":{"id":320,"nodeType":"Block","src":"3030:7:1","statements":[]},"id":321,"implemented":true,"kind":"function","modifiers":[{"id":318,"kind":"modifierInvocation","modifierName":{"id":317,"name":"onlyInitializing","nameLocations":["3013:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"3013:16:1"},"nodeType":"ModifierInvocation","src":"3013:16:1"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:1","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[],"src":"3001:2:1"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"3030:0:1"},"scope":449,"src":"2970:67:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":326,"nodeType":"Block","src":"3113:7:1","statements":[]},"id":327,"implemented":true,"kind":"function","modifiers":[{"id":324,"kind":"modifierInvocation","modifierName":{"id":323,"name":"onlyInitializing","nameLocations":["3096:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"3096:16:1"},"nodeType":"ModifierInvocation","src":"3096:16:1"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:1","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"3084:2:1"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"3113:0:1"},"scope":449,"src":"3043:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[479],"body":{"id":338,"nodeType":"Block","src":"3786:56:1","statements":[{"expression":{"expression":{"id":335,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"3803:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$774_$","typeString":"type(library ERC1967Utils)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:1","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":495,"src":"3803:32:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":334,"id":337,"nodeType":"Return","src":"3796:39:1"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"3125:578:1","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":339,"implemented":true,"kind":"function","modifiers":[{"id":331,"kind":"modifierInvocation","modifierName":{"id":330,"name":"notDelegated","nameLocations":["3755:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"3755:12:1"},"nodeType":"ModifierInvocation","src":"3755:12:1"}],"name":"proxiableUUID","nameLocation":"3717:13:1","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[],"src":"3730:2:1"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"3777:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:1"},"scope":449,"src":"3708:134:1","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":358,"nodeType":"Block","src":"4266:109:1","statements":[{"expression":{"arguments":[{"id":350,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"4294:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":349,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4276:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"4276:36:1"},{"expression":{"arguments":[{"id":354,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"4344:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":355,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4363:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":353,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4322:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"4322:46:1"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"3848:308:1","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":359,"implemented":true,"kind":"function","modifiers":[{"id":347,"kind":"modifierInvocation","modifierName":{"id":346,"name":"onlyProxy","nameLocations":["4256:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":307,"src":"4256:9:1"},"nodeType":"ModifierInvocation","src":"4256:9:1"}],"name":"upgradeToAndCall","nameLocation":"4170:16:1","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:1","nodeType":"VariableDeclaration","scope":359,"src":"4187:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"data","nameLocation":"4227:4:1","nodeType":"VariableDeclaration","scope":359,"src":"4214:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":343,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:1"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"4266:0:1"},"scope":449,"src":"4161:214:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"4623:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":365,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$449","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$449","typeString":"contract UUPSUpgradeable"}],"id":364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:1","typeDescriptions":{}}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":367,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4667:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":369,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"4728:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$774_$","typeString":"type(library ERC1967Utils)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:1","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":526,"src":"4728:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":372,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4764:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":379,"nodeType":"IfStatement","src":"4633:251:1","trueBody":{"id":378,"nodeType":"Block","src":"4823:61:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":375,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4844:27:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":377,"nodeType":"RevertStatement","src":"4837:36:1"}]}}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"4381:192:1","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:1","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"4598:2:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"4623:0:1"},"scope":449,"src":"4578:312:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":396,"nodeType":"Block","src":"5059:161:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":387,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$449","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$449","typeString":"contract UUPSUpgradeable"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:1","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":389,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5090:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":395,"nodeType":"IfStatement","src":"5069:145:1","trueBody":{"id":394,"nodeType":"Block","src":"5098:116:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":391,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5174:27:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":393,"nodeType":"RevertStatement","src":"5167:36:1"}]}}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"4896:106:1","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":397,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:1","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"5034:2:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"5059:0:1"},"scope":449,"src":"5007:213:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"5226:372:1","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":403,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:1","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:1","nodeType":"VariableDeclaration","scope":403,"src":"5630:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:1"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"5673:0:1"},"scope":449,"src":"5603:71:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"6117:453:1","statements":[{"clauses":[{"block":{"id":436,"nodeType":"Block","src":"6207:212:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6225:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":420,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6233:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$774_$","typeString":"type(library ERC1967Utils)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:1","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":495,"src":"6233:32:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":428,"nodeType":"IfStatement","src":"6221:120:1","trueBody":{"id":427,"nodeType":"Block","src":"6267:74:1","statements":[{"errorCall":{"arguments":[{"id":424,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"6321:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":423,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"6292:28:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":426,"nodeType":"RevertStatement","src":"6285:41:1"}]}},{"expression":{"arguments":[{"id":432,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6384:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":433,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"6403:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":429,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6354:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$774_$","typeString":"type(library ERC1967Utils)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:1","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":589,"src":"6354:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"6354:54:1"}]},"errorName":"","id":437,"nodeType":"TryCatchClause","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"slot","nameLocation":"6201:4:1","nodeType":"VariableDeclaration","scope":437,"src":"6193:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:1"},"src":"6184:235:1"},{"block":{"id":444,"nodeType":"Block","src":"6426:138:1","statements":[{"errorCall":{"arguments":[{"id":441,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6535:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":438,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6493:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$774_$","typeString":"type(library ERC1967Utils)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:1","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":500,"src":"6493:41:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":443,"nodeType":"RevertStatement","src":"6486:67:1"}]},"errorName":"","id":445,"nodeType":"TryCatchClause","src":"6420:144:1"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":412,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6149:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":411,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6131:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$480_$","typeString":"type(contract IERC1822Proxiable)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$480","typeString":"contract IERC1822Proxiable"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:1","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":479,"src":"6131:50:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":446,"nodeType":"TryStatement","src":"6127:437:1"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"5680:347:1","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":448,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:1","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:1","nodeType":"VariableDeclaration","scope":448,"src":"6063:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"data","nameLocation":"6103:4:1","nodeType":"VariableDeclaration","scope":448,"src":"6090:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":407,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:1"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"6117:0:1"},"scope":449,"src":"6032:538:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":450,"src":"986:5586:1","usedErrors":[16,19,294,299,500,513,911,1174],"usedEvents":[24,457]}],"src":"115:6458:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[470]},"id":471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":451,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"134:101:2","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":470,"linearizedBaseContracts":[470],"name":"IERC1967","nameLocation":"246:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"261:68:2","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":457,"name":"Upgraded","nameLocation":"340:8:2","nodeType":"EventDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:2","nodeType":"VariableDeclaration","scope":457,"src":"349:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:2"},"src":"334:47:2"},{"anonymous":false,"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"387:67:2","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":464,"name":"AdminChanged","nameLocation":"465:12:2","nodeType":"EventDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:2","nodeType":"VariableDeclaration","scope":464,"src":"478:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:2","nodeType":"VariableDeclaration","scope":464,"src":"501:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:2"},"src":"459:60:2"},{"anonymous":false,"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"525:59:2","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":469,"name":"BeaconUpgraded","nameLocation":"595:14:2","nodeType":"EventDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:2","nodeType":"VariableDeclaration","scope":469,"src":"610:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:2"},"src":"589:45:2"}],"scope":471,"src":"236:400:2","usedErrors":[],"usedEvents":[457,464,469]}],"src":"107:530:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[480]},"id":481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":472,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"113:25:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"140:204:3","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":480,"linearizedBaseContracts":[480],"name":"IERC1822Proxiable","nameLocation":"355:17:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"379:438:3","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":479,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"831:13:3","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[],"src":"844:2:3"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"870:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"869:9:3"},"scope":480,"src":"822:57:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":481,"src":"345:536:3","usedErrors":[],"usedEvents":[]}],"src":"113:769:3"},"id":3},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1161],"ERC1967Utils":[774],"IBeacon":[784],"IERC1967":[470],"StorageSlot":[1307]},"id":775,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":482,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:4"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":775,"sourceUnit":785,"src":"140:46:4","symbolAliases":[{"foreign":{"id":483,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"148:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":775,"sourceUnit":471,"src":"187:55:4","symbolAliases":[{"foreign":{"id":485,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"195:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":775,"sourceUnit":1162,"src":"243:48:4","symbolAliases":[{"foreign":{"id":487,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"251:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":775,"sourceUnit":1308,"src":"292:56:4","symbolAliases":[{"foreign":{"id":489,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"300:11:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"350:145:4","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":774,"linearizedBaseContracts":[774],"name":"ERC1967Utils","nameLocation":"504:12:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"523:170:4","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":495,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:4","nodeType":"VariableDeclaration","scope":774,"src":"763:114:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:4","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"884:69:4","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":500,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:4","nodeType":"ErrorDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:4","nodeType":"VariableDeclaration","scope":500,"src":"993:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:4"},"src":"958:59:4"},{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"1023:60:4","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":505,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:4","nodeType":"ErrorDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"admin","nameLocation":"1122:5:4","nodeType":"VariableDeclaration","scope":505,"src":"1114:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:4"},"src":"1088:41:4"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"1135:61:4","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":510,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:4","nodeType":"ErrorDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:4","nodeType":"VariableDeclaration","scope":510,"src":"1228:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:4"},"src":"1201:43:4"},{"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"1250:82:4","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":513,"name":"ERC1967NonPayable","nameLocation":"1343:17:4","nodeType":"ErrorDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[],"src":"1360:2:4"},"src":"1337:26:4"},{"body":{"id":525,"nodeType":"Block","src":"1502:77:4","statements":[{"expression":{"expression":{"arguments":[{"id":521,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"1546:19:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":519,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"1519:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1307_$","typeString":"type(library StorageSlot)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"1519:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1189_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"1519:53:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":518,"id":524,"nodeType":"Return","src":"1512:60:4"}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"1369:67:4","text":" @dev Returns the current implementation address."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:4","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"1467:2:4"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"1493:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:4"},"scope":774,"src":"1441:138:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":552,"nodeType":"Block","src":"1734:218:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":532,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1748:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:4","memberName":"code","nodeType":"MemberAccess","src":"1748:22:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:4","memberName":"length","nodeType":"MemberAccess","src":"1748:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":542,"nodeType":"IfStatement","src":"1744:119:4","trueBody":{"id":541,"nodeType":"Block","src":"1784:79:4","statements":[{"errorCall":{"arguments":[{"id":538,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1834:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":537,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1805:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":540,"nodeType":"RevertStatement","src":"1798:54:4"}]}},{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":546,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"1899:19:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":543,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"1872:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1307_$","typeString":"type(library StorageSlot)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"1872:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1189_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"1872:53:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":549,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1928:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":551,"nodeType":"ExpressionStatement","src":"1872:73:4"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"1585:81:4","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":553,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:4","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:4","nodeType":"VariableDeclaration","scope":553,"src":"1699:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:4"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"1734:0:4"},"scope":774,"src":"1671:281:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":588,"nodeType":"Block","src":"2345:263:4","statements":[{"expression":{"arguments":[{"id":562,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2374:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":561,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"2355:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"2355:37:4"},{"eventCall":{"arguments":[{"id":568,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2425:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":565,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"2407:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$470_$","typeString":"type(contract IERC1967)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:4","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":457,"src":"2407:17:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"EmitStatement","src":"2402:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2458:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:4","memberName":"length","nodeType":"MemberAccess","src":"2458:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":586,"nodeType":"Block","src":"2559:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":583,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2573:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"2573:18:4"}]},"id":587,"nodeType":"IfStatement","src":"2454:148:4","trueBody":{"id":582,"nodeType":"Block","src":"2475:78:4","statements":[{"expression":{"arguments":[{"id":578,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2518:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":579,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2537:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":575,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2489:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1161_$","typeString":"type(library Address)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:4","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"2489:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":581,"nodeType":"ExpressionStatement","src":"2489:53:4"}]}}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1958:301:4","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":589,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:4","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:4","nodeType":"VariableDeclaration","scope":589,"src":"2290:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"data","nameLocation":"2330:4:4","nodeType":"VariableDeclaration","scope":589,"src":"2317:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":557,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:4"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"2345:0:4"},"scope":774,"src":"2264:344:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"2614:145:4","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":593,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:4","nodeType":"VariableDeclaration","scope":774,"src":"2829:105:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:4","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"3339:68:4","statements":[{"expression":{"expression":{"arguments":[{"id":601,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3383:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":599,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"3356:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1307_$","typeString":"type(library StorageSlot)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"3356:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1189_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"3356:44:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":598,"id":604,"nodeType":"Return","src":"3349:51:4"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2941:341:4","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"3304:2:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":606,"src":"3330:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:4"},"scope":774,"src":"3287:120:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":636,"nodeType":"Block","src":"3535:172:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":612,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3549:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:4","typeDescriptions":{}}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":626,"nodeType":"IfStatement","src":"3545:91:4","trueBody":{"id":625,"nodeType":"Block","src":"3573:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:4","typeDescriptions":{}}},"id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":618,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3594:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":624,"nodeType":"RevertStatement","src":"3587:38:4"}]}},{"expression":{"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":630,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"3672:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":627,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"3645:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1307_$","typeString":"type(library StorageSlot)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"3645:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1189_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"3645:44:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":633,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3692:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":635,"nodeType":"ExpressionStatement","src":"3645:55:4"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3413:72:4","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":637,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:4","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:4","nodeType":"VariableDeclaration","scope":637,"src":"3509:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:4"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"3535:0:4"},"scope":774,"src":"3490:217:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":655,"nodeType":"Block","src":"3875:94:4","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":646,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3912:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3924:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":643,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"3890:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$470_$","typeString":"type(contract IERC1967)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:4","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":464,"src":"3890:21:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"EmitStatement","src":"3885:48:4"},{"expression":{"arguments":[{"id":652,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"3953:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":651,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"3943:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"3943:19:4"}]},"documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"3713:109:4","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:4","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:4","nodeType":"VariableDeclaration","scope":656,"src":"3848:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:4"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"3875:0:4"},"scope":774,"src":"3827:142:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"3975:201:4","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":660,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:4","nodeType":"VariableDeclaration","scope":774,"src":"4246:106:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:4","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":672,"nodeType":"Block","src":"4468:69:4","statements":[{"expression":{"expression":{"arguments":[{"id":668,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4512:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":666,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"4485:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1307_$","typeString":"type(library StorageSlot)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"4485:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1189_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"4485:45:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":665,"id":671,"nodeType":"Return","src":"4478:52:4"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"4359:51:4","text":" @dev Returns the current beacon."},"id":673,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:4","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"4433:2:4"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":673,"src":"4459:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:4"},"scope":774,"src":"4415:122:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":718,"nodeType":"Block","src":"4667:390:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":679,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4681:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:4","memberName":"code","nodeType":"MemberAccess","src":"4681:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:4","memberName":"length","nodeType":"MemberAccess","src":"4681:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":689,"nodeType":"IfStatement","src":"4677:95:4","trueBody":{"id":688,"nodeType":"Block","src":"4709:63:4","statements":[{"errorCall":{"arguments":[{"id":685,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4751:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":684,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4730:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":687,"nodeType":"RevertStatement","src":"4723:38:4"}]}},{"expression":{"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":693,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4809:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":690,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"4782:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1307_$","typeString":"type(library StorageSlot)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"4782:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1189_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1188,"src":"4782:45:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":696,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4830:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":698,"nodeType":"ExpressionStatement","src":"4782:57:4"},{"assignments":[700],"declarations":[{"constant":false,"id":700,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:4","nodeType":"VariableDeclaration","scope":718,"src":"4850:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":702,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"4889:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":701,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4881:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$784_$","typeString":"type(contract IBeacon)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$784","typeString":"contract IBeacon"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:4","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":783,"src":"4881:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":707,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4930:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:4","memberName":"code","nodeType":"MemberAccess","src":"4930:25:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:4","memberName":"length","nodeType":"MemberAccess","src":"4930:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":717,"nodeType":"IfStatement","src":"4926:125:4","trueBody":{"id":716,"nodeType":"Block","src":"4969:82:4","statements":[{"errorCall":{"arguments":[{"id":713,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"5019:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":712,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4990:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":715,"nodeType":"RevertStatement","src":"4983:57:4"}]}}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"4543:72:4","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":719,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:4","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:4","nodeType":"VariableDeclaration","scope":719,"src":"4640:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:4"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"4667:0:4"},"scope":774,"src":"4620:437:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":758,"nodeType":"Block","src":"5661:263:4","statements":[{"expression":{"arguments":[{"id":728,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5682:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":727,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5671:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"5671:21:4"},{"eventCall":{"arguments":[{"id":734,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5731:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":731,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"5707:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$470_$","typeString":"type(contract IERC1967)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:4","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":469,"src":"5707:23:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"EmitStatement","src":"5702:39:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":737,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"5756:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:4","memberName":"length","nodeType":"MemberAccess","src":"5756:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":756,"nodeType":"Block","src":"5875:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":753,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"5889:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"5889:18:4"}]},"id":757,"nodeType":"IfStatement","src":"5752:166:4","trueBody":{"id":752,"nodeType":"Block","src":"5773:96:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":745,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"5824:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":744,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5816:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$784_$","typeString":"type(contract IBeacon)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$784","typeString":"contract IBeacon"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:4","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":783,"src":"5816:33:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"5853:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":741,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5787:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1161_$","typeString":"type(library Address)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:4","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"5787:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":751,"nodeType":"ExpressionStatement","src":"5787:71:4"}]}}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"5063:514:4","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:4","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:4","nodeType":"VariableDeclaration","scope":759,"src":"5614:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"data","nameLocation":"5646:4:4","nodeType":"VariableDeclaration","scope":759,"src":"5633:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:4"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"5661:0:4"},"scope":774,"src":"5582:342:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"6149:86:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:4","memberName":"value","nodeType":"MemberAccess","src":"6163:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":771,"nodeType":"IfStatement","src":"6159:70:4","trueBody":{"id":770,"nodeType":"Block","src":"6178:51:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":767,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6199:17:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":769,"nodeType":"RevertStatement","src":"6192:26:4"}]}}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"5930:178:4","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:4","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"6138:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"6149:0:4"},"scope":774,"src":"6113:122:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":775,"src":"496:5741:4","usedErrors":[500,505,510,513],"usedEvents":[]}],"src":"114:6124:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[784]},"id":785,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":776,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"135:79:5","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":784,"linearizedBaseContracts":[784],"name":"IBeacon","nameLocation":"225:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"239:168:5","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":783,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:5","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"435:2:5"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"461:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:5"},"scope":784,"src":"412:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":785,"src":"215:257:5","usedErrors":[],"usedEvents":[]}],"src":"108:365:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1319],"IERC721":[901]},"id":902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":786,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":902,"sourceUnit":1320,"src":"134:62:6","symbolAliases":[{"foreign":{"id":787,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":790,"name":"IERC165","nameLocations":["288:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1319,"src":"288:7:6"},"id":791,"nodeType":"InheritanceSpecifier","src":"288:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"198:68:6","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":901,"linearizedBaseContracts":[901,1319],"name":"IERC721","nameLocation":"277:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"302:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":800,"name":"Transfer","nameLocation":"401:8:6","nodeType":"EventDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:6","nodeType":"VariableDeclaration","scope":800,"src":"410:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:6","nodeType":"VariableDeclaration","scope":800,"src":"432:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:6","nodeType":"VariableDeclaration","scope":800,"src":"452:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:6"},"src":"395:82:6"},{"anonymous":false,"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"483:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":809,"name":"Approval","nameLocation":"588:8:6","nodeType":"EventDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:6","nodeType":"VariableDeclaration","scope":809,"src":"597:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:6","nodeType":"VariableDeclaration","scope":809,"src":"620:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:6","nodeType":"VariableDeclaration","scope":809,"src":"646:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:6"},"src":"582:89:6"},{"anonymous":false,"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"677:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":818,"name":"ApprovalForAll","nameLocation":"805:14:6","nodeType":"EventDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:6","nodeType":"VariableDeclaration","scope":818,"src":"820:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:6","nodeType":"VariableDeclaration","scope":818,"src":"843:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:6","nodeType":"VariableDeclaration","scope":818,"src":"869:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:6"},"src":"799:85:6"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"890:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:6","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"owner","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":826,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"balance","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":826,"src":"1028:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:6"},"scope":901,"src":"971:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1051:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:6","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:6","nodeType":"VariableDeclaration","scope":834,"src":"1204:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:6"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"owner","nameLocation":"1252:5:6","nodeType":"VariableDeclaration","scope":834,"src":"1244:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:6"},"scope":901,"src":"1187:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"1265:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":846,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:6","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"from","nameLocation":"1869:4:6","nodeType":"VariableDeclaration","scope":846,"src":"1861:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"to","nameLocation":"1883:2:6","nodeType":"VariableDeclaration","scope":846,"src":"1875:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:6","nodeType":"VariableDeclaration","scope":846,"src":"1887:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"data","nameLocation":"1919:4:6","nodeType":"VariableDeclaration","scope":846,"src":"1904:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":842,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:6"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"1933:0:6"},"scope":901,"src":"1835:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"1940:706:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":856,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:6","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":856,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"to","nameLocation":"2699:2:6","nodeType":"VariableDeclaration","scope":856,"src":"2691:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:6","nodeType":"VariableDeclaration","scope":856,"src":"2703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"2728:0:6"},"scope":901,"src":"2651:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"2735:733:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":866,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:6","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"from","nameLocation":"3503:4:6","nodeType":"VariableDeclaration","scope":866,"src":"3495:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"to","nameLocation":"3517:2:6","nodeType":"VariableDeclaration","scope":866,"src":"3509:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:6","nodeType":"VariableDeclaration","scope":866,"src":"3521:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:6"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[],"src":"3546:0:6"},"scope":901,"src":"3473:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"3553:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":874,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:6","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"4035:2:6","nodeType":"VariableDeclaration","scope":874,"src":"4027:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:6","nodeType":"VariableDeclaration","scope":874,"src":"4039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:6"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"4064:0:6"},"scope":901,"src":"4010:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"4071:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"operator","nameLocation":"4426:8:6","nodeType":"VariableDeclaration","scope":882,"src":"4418:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"approved","nameLocation":"4441:8:6","nodeType":"VariableDeclaration","scope":882,"src":"4436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":878,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:6"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"4459:0:6"},"scope":901,"src":"4391:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"4466:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:6","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:6","nodeType":"VariableDeclaration","scope":890,"src":"4631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"operator","nameLocation":"4679:8:6","nodeType":"VariableDeclaration","scope":890,"src":"4671:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:6"},"scope":901,"src":"4610:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"4695:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":900,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:6","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"owner","nameLocation":"4872:5:6","nodeType":"VariableDeclaration","scope":900,"src":"4864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"operator","nameLocation":"4887:8:6","nodeType":"VariableDeclaration","scope":900,"src":"4879:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":900,"src":"4920:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":897,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:6"},"scope":901,"src":"4838:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":902,"src":"267:4661:6","usedErrors":[],"usedEvents":[800,809,818]}],"src":"108:4821:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1161],"Errors":[1183]},"id":1162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":903,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1162,"sourceUnit":1184,"src":"127:36:7","symbolAliases":[{"foreign":{"id":904,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"135:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"165:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1161,"linearizedBaseContracts":[1161],"name":"Address","nameLocation":"241:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"255:75:7","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":911,"name":"AddressEmptyCode","nameLocation":"341:16:7","nodeType":"ErrorDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"target","nameLocation":"366:6:7","nodeType":"VariableDeclaration","scope":911,"src":"358:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:7"},"src":"335:39:7"},{"body":{"id":958,"nodeType":"Block","src":"1361:294:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":921,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:7","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:7","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":924,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1399:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":938,"nodeType":"IfStatement","src":"1371:125:7","trueBody":{"id":937,"nodeType":"Block","src":"1407:89:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":931,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}],"id":930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:7","typeDescriptions":{}}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:7","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":934,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1478:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":926,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"1428:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1183_$","typeString":"type(library Errors)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1171,"src":"1428:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":936,"nodeType":"RevertStatement","src":"1421:64:7"}]}},{"assignments":[940,942],"declarations":[{"constant":false,"id":940,"mutability":"mutable","name":"success","nameLocation":"1512:7:7","nodeType":"VariableDeclaration","scope":958,"src":"1507:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:7","nodeType":"VariableDeclaration","scope":958,"src":"1521:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":941,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":949,"initialValue":{"arguments":[{"hexValue":"","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":943,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"1548:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:7","memberName":"call","nodeType":"MemberAccess","src":"1548:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"1570:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:7"},{"condition":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:7","subExpression":{"id":950,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1596:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":957,"nodeType":"IfStatement","src":"1591:58:7","trueBody":{"id":956,"nodeType":"Block","src":"1605:44:7","statements":[{"expression":{"arguments":[{"id":953,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"1627:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":952,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1619:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"1619:19:7"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"380:905:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:7","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:7","nodeType":"VariableDeclaration","scope":959,"src":"1309:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"amount","nameLocation":"1344:6:7","nodeType":"VariableDeclaration","scope":959,"src":"1336:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:7"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"1361:0:7"},"scope":1161,"src":"1290:365:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"2589:62:7","statements":[{"expression":{"arguments":[{"id":970,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2628:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2636:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":969,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2606:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":968,"id":974,"nodeType":"Return","src":"2599:45:7"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1661:834:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"target","nameLocation":"2530:6:7","nodeType":"VariableDeclaration","scope":976,"src":"2522:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"data","nameLocation":"2551:4:7","nodeType":"VariableDeclaration","scope":976,"src":"2538:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":963,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"2575:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:7"},"scope":1161,"src":"2500:151:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"3088:294:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":990,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:7","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:7","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3126:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1007,"nodeType":"IfStatement","src":"3098:123:7","trueBody":{"id":1006,"nodeType":"Block","src":"3133:88:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1000,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1161","typeString":"library Address"}],"id":999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:7","typeDescriptions":{}}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:7","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3204:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":995,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"3154:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1183_$","typeString":"type(library Errors)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1171,"src":"3154:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1005,"nodeType":"RevertStatement","src":"3147:63:7"}]}},{"assignments":[1009,1011],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"success","nameLocation":"3236:7:7","nodeType":"VariableDeclaration","scope":1025,"src":"3231:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1008,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:7","nodeType":"VariableDeclaration","scope":1025,"src":"3245:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1010,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1018,"initialValue":{"arguments":[{"id":1016,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"3298:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1012,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3272:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:7","memberName":"call","nodeType":"MemberAccess","src":"3272:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"3291:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:7"},{"expression":{"arguments":[{"id":1020,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3347:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3355:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1022,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"3364:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1019,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3320:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":987,"id":1024,"nodeType":"Return","src":"3313:62:7"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"2657:313:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:7","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"target","nameLocation":"3014:6:7","nodeType":"VariableDeclaration","scope":1026,"src":"3006:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"data","nameLocation":"3035:4:7","nodeType":"VariableDeclaration","scope":1026,"src":"3022:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":980,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"value","nameLocation":"3049:5:7","nodeType":"VariableDeclaration","scope":1026,"src":"3041:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:7"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"3074:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":985,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:7"},"scope":1161,"src":"2975:407:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"3621:154:7","statements":[{"assignments":[1037,1039],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"success","nameLocation":"3637:7:7","nodeType":"VariableDeclaration","scope":1051,"src":"3632:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1036,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:7","nodeType":"VariableDeclaration","scope":1051,"src":"3646:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1044,"initialValue":{"arguments":[{"id":1042,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3691:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1040,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3673:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:7"},{"expression":{"arguments":[{"id":1046,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"3740:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3748:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1048,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3757:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1045,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3713:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1035,"id":1050,"nodeType":"Return","src":"3706:62:7"}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"3388:128:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:7","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"target","nameLocation":"3557:6:7","nodeType":"VariableDeclaration","scope":1052,"src":"3549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"data","nameLocation":"3578:4:7","nodeType":"VariableDeclaration","scope":1052,"src":"3565:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1030,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:7"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"3607:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1033,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:7"},"scope":1161,"src":"3521:254:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1077,"nodeType":"Block","src":"4013:156:7","statements":[{"assignments":[1063,1065],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"success","nameLocation":"4029:7:7","nodeType":"VariableDeclaration","scope":1077,"src":"4024:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1062,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:7","nodeType":"VariableDeclaration","scope":1077,"src":"4038:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1064,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1070,"initialValue":{"arguments":[{"id":1068,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"4085:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1066,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4065:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:7"},{"expression":{"arguments":[{"id":1072,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4134:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"4142:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1074,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"4151:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1071,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"4107:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1061,"id":1076,"nodeType":"Return","src":"4100:62:7"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"3781:130:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:7","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"target","nameLocation":"3954:6:7","nodeType":"VariableDeclaration","scope":1078,"src":"3946:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"data","nameLocation":"3975:4:7","nodeType":"VariableDeclaration","scope":1078,"src":"3962:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1056,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:7"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"3999:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1059,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:7"},"scope":1161,"src":"3916:253:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1117,"nodeType":"Block","src":"4595:424:7","statements":[{"condition":{"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:7","subExpression":{"id":1090,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"4610:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1115,"nodeType":"Block","src":"4669:344:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1097,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4857:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:7","memberName":"length","nodeType":"MemberAccess","src":"4857:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1101,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4883:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:7","memberName":"code","nodeType":"MemberAccess","src":"4883:11:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:7","memberName":"length","nodeType":"MemberAccess","src":"4883:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1112,"nodeType":"IfStatement","src":"4853:119:7","trueBody":{"id":1111,"nodeType":"Block","src":"4908:64:7","statements":[{"errorCall":{"arguments":[{"id":1108,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"4950:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1107,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4933:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1110,"nodeType":"RevertStatement","src":"4926:31:7"}]}},{"expression":{"id":1113,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4992:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1089,"id":1114,"nodeType":"Return","src":"4985:17:7"}]},"id":1116,"nodeType":"IfStatement","src":"4605:408:7","trueBody":{"id":1096,"nodeType":"Block","src":"4619:44:7","statements":[{"expression":{"arguments":[{"id":1093,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"4641:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1092,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4633:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"4633:19:7"}]}}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"4175:257:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:7","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"target","nameLocation":"4490:6:7","nodeType":"VariableDeclaration","scope":1118,"src":"4482:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"success","nameLocation":"4511:7:7","nodeType":"VariableDeclaration","scope":1118,"src":"4506:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:7","nodeType":"VariableDeclaration","scope":1118,"src":"4528:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:7"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1118,"src":"4581:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:7"},"scope":1161,"src":"4437:582:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"5323:122:7","statements":[{"condition":{"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:7","subExpression":{"id":1128,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"5338:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1137,"nodeType":"Block","src":"5397:42:7","statements":[{"expression":{"id":1135,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5418:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1127,"id":1136,"nodeType":"Return","src":"5411:17:7"}]},"id":1138,"nodeType":"IfStatement","src":"5333:106:7","trueBody":{"id":1134,"nodeType":"Block","src":"5347:44:7","statements":[{"expression":{"arguments":[{"id":1131,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5369:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1130,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"5361:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"5361:19:7"}]}}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"5025:191:7","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:7","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"success","nameLocation":"5252:7:7","nodeType":"VariableDeclaration","scope":1140,"src":"5247:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1120,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:7","nodeType":"VariableDeclaration","scope":1140,"src":"5261:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:7"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"5309:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:7"},"scope":1161,"src":"5221:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"5614:379:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1146,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"5690:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:7","memberName":"length","nodeType":"MemberAccess","src":"5690:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1157,"nodeType":"Block","src":"5936:51:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1152,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"5957:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1183_$","typeString":"type(library Errors)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:7","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"5957:17:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1156,"nodeType":"RevertStatement","src":"5950:26:7"}]},"id":1158,"nodeType":"IfStatement","src":"5686:301:7","trueBody":{"id":1151,"nodeType":"Block","src":"5713:217:7","statements":[{"AST":{"nativeSrc":"5840:80:7","nodeType":"YulBlock","src":"5840:80:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:7","nodeType":"YulIdentifier","src":"5869:10:7"},{"kind":"number","nativeSrc":"5881:4:7","nodeType":"YulLiteral","src":"5881:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:7","nodeType":"YulIdentifier","src":"5865:3:7"},"nativeSrc":"5865:21:7","nodeType":"YulFunctionCall","src":"5865:21:7"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:7","nodeType":"YulIdentifier","src":"5894:10:7"}],"functionName":{"name":"mload","nativeSrc":"5888:5:7","nodeType":"YulIdentifier","src":"5888:5:7"},"nativeSrc":"5888:17:7","nodeType":"YulFunctionCall","src":"5888:17:7"}],"functionName":{"name":"revert","nativeSrc":"5858:6:7","nodeType":"YulIdentifier","src":"5858:6:7"},"nativeSrc":"5858:48:7","nodeType":"YulFunctionCall","src":"5858:48:7"},"nativeSrc":"5858:48:7","nodeType":"YulExpressionStatement","src":"5858:48:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1143,"isOffset":false,"isSlot":false,"src":"5869:10:7","valueSize":1},{"declaration":1143,"isOffset":false,"isSlot":false,"src":"5894:10:7","valueSize":1}],"flags":["memory-safe"],"id":1150,"nodeType":"InlineAssembly","src":"5815:105:7"}]}}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"5451:103:7","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:7","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:7","nodeType":"VariableDeclaration","scope":1160,"src":"5576:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1142,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:7"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"5614:0:7"},"scope":1161,"src":"5559:434:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1162,"src":"233:5762:7","usedErrors":[911],"usedEvents":[]}],"src":"101:5895:7"},"id":7},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1183]},"id":1184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1163,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"126:284:8","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1183,"linearizedBaseContracts":[1183],"name":"Errors","nameLocation":"419:6:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"432:94:8","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1171,"name":"InsufficientBalance","nameLocation":"537:19:8","nodeType":"ErrorDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"balance","nameLocation":"565:7:8","nodeType":"VariableDeclaration","scope":1171,"src":"557:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"needed","nameLocation":"582:6:8","nodeType":"VariableDeclaration","scope":1171,"src":"574:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:8"},"src":"531:59:8"},{"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"596:89:8","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1174,"name":"FailedCall","nameLocation":"696:10:8","nodeType":"ErrorDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"706:2:8"},"src":"690:19:8"},{"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"715:46:8","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1177,"name":"FailedDeployment","nameLocation":"772:16:8","nodeType":"ErrorDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"788:2:8"},"src":"766:25:8"},{"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"797:58:8","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1182,"name":"MissingPrecompile","nameLocation":"866:17:8","nodeType":"ErrorDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1182,"src":"884:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:8"},"src":"860:33:8"}],"scope":1184,"src":"411:484:8","usedErrors":[1171,1174,1177,1182],"usedEvents":[]}],"src":"100:796:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1307]},"id":1308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1185,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"219:1187:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1307,"linearizedBaseContracts":[1307],"name":"StorageSlot","nameLocation":"1415:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1189,"members":[{"constant":false,"id":1188,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1189,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1307,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1192,"members":[{"constant":false,"id":1191,"mutability":"mutable","name":"value","nameLocation":"1522:5:9","nodeType":"VariableDeclaration","scope":1192,"src":"1517:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1190,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:9","nodeType":"StructDefinition","scope":1307,"src":"1488:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1195,"members":[{"constant":false,"id":1194,"mutability":"mutable","name":"value","nameLocation":"1577:5:9","nodeType":"VariableDeclaration","scope":1195,"src":"1569:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:9","nodeType":"StructDefinition","scope":1307,"src":"1540:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1198,"members":[{"constant":false,"id":1197,"mutability":"mutable","name":"value","nameLocation":"1632:5:9","nodeType":"VariableDeclaration","scope":1198,"src":"1624:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:9","nodeType":"StructDefinition","scope":1307,"src":"1595:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1201,"members":[{"constant":false,"id":1200,"mutability":"mutable","name":"value","nameLocation":"1685:5:9","nodeType":"VariableDeclaration","scope":1201,"src":"1678:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1199,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:9","nodeType":"StructDefinition","scope":1307,"src":"1650:47:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1204,"members":[{"constant":false,"id":1203,"mutability":"mutable","name":"value","nameLocation":"1738:5:9","nodeType":"VariableDeclaration","scope":1204,"src":"1731:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1202,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:9","nodeType":"StructDefinition","scope":1307,"src":"1703:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1207,"members":[{"constant":false,"id":1206,"mutability":"mutable","name":"value","nameLocation":"1789:5:9","nodeType":"VariableDeclaration","scope":1207,"src":"1783:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:9","nodeType":"StructDefinition","scope":1307,"src":"1756:45:9","visibility":"public"},{"body":{"id":1217,"nodeType":"Block","src":"1983:79:9","statements":[{"AST":{"nativeSrc":"2018:38:9","nodeType":"YulBlock","src":"2018:38:9","statements":[{"nativeSrc":"2032:14:9","nodeType":"YulAssignment","src":"2032:14:9","value":{"name":"slot","nativeSrc":"2042:4:9","nodeType":"YulIdentifier","src":"2042:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:9","nodeType":"YulIdentifier","src":"2032:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1214,"isOffset":false,"isSlot":true,"src":"2032:6:9","suffix":"slot","valueSize":1},{"declaration":1210,"isOffset":false,"isSlot":false,"src":"2042:4:9","valueSize":1}],"flags":["memory-safe"],"id":1216,"nodeType":"InlineAssembly","src":"1993:63:9"}]},"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"1807:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:9","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"slot","nameLocation":"1931:4:9","nodeType":"VariableDeclaration","scope":1218,"src":"1923:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:9"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"r","nameLocation":"1980:1:9","nodeType":"VariableDeclaration","scope":1218,"src":"1960:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1213,"nodeType":"UserDefinedTypeName","pathNode":{"id":1212,"name":"AddressSlot","nameLocations":["1960:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1189,"src":"1960:11:9"},"referencedDeclaration":1189,"src":"1960:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1189_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:9"},"scope":1307,"src":"1899:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"2243:79:9","statements":[{"AST":{"nativeSrc":"2278:38:9","nodeType":"YulBlock","src":"2278:38:9","statements":[{"nativeSrc":"2292:14:9","nodeType":"YulAssignment","src":"2292:14:9","value":{"name":"slot","nativeSrc":"2302:4:9","nodeType":"YulIdentifier","src":"2302:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:9","nodeType":"YulIdentifier","src":"2292:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1225,"isOffset":false,"isSlot":true,"src":"2292:6:9","suffix":"slot","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"2302:4:9","valueSize":1}],"flags":["memory-safe"],"id":1227,"nodeType":"InlineAssembly","src":"2253:63:9"}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"2068:86:9","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:9","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"slot","nameLocation":"2191:4:9","nodeType":"VariableDeclaration","scope":1229,"src":"2183:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:9"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"r","nameLocation":"2240:1:9","nodeType":"VariableDeclaration","scope":1229,"src":"2220:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1192_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"BooleanSlot","nameLocations":["2220:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1192,"src":"2220:11:9"},"referencedDeclaration":1192,"src":"2220:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1192_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:9"},"scope":1307,"src":"2159:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"2503:79:9","statements":[{"AST":{"nativeSrc":"2538:38:9","nodeType":"YulBlock","src":"2538:38:9","statements":[{"nativeSrc":"2552:14:9","nodeType":"YulAssignment","src":"2552:14:9","value":{"name":"slot","nativeSrc":"2562:4:9","nodeType":"YulIdentifier","src":"2562:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:9","nodeType":"YulIdentifier","src":"2552:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1236,"isOffset":false,"isSlot":true,"src":"2552:6:9","suffix":"slot","valueSize":1},{"declaration":1232,"isOffset":false,"isSlot":false,"src":"2562:4:9","valueSize":1}],"flags":["memory-safe"],"id":1238,"nodeType":"InlineAssembly","src":"2513:63:9"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"2328:86:9","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:9","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"slot","nameLocation":"2451:4:9","nodeType":"VariableDeclaration","scope":1240,"src":"2443:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:9"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"r","nameLocation":"2500:1:9","nodeType":"VariableDeclaration","scope":1240,"src":"2480:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1195_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1235,"nodeType":"UserDefinedTypeName","pathNode":{"id":1234,"name":"Bytes32Slot","nameLocations":["2480:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1195,"src":"2480:11:9"},"referencedDeclaration":1195,"src":"2480:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1195_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:9"},"scope":1307,"src":"2419:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"2763:79:9","statements":[{"AST":{"nativeSrc":"2798:38:9","nodeType":"YulBlock","src":"2798:38:9","statements":[{"nativeSrc":"2812:14:9","nodeType":"YulAssignment","src":"2812:14:9","value":{"name":"slot","nativeSrc":"2822:4:9","nodeType":"YulIdentifier","src":"2822:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:9","nodeType":"YulIdentifier","src":"2812:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1247,"isOffset":false,"isSlot":true,"src":"2812:6:9","suffix":"slot","valueSize":1},{"declaration":1243,"isOffset":false,"isSlot":false,"src":"2822:4:9","valueSize":1}],"flags":["memory-safe"],"id":1249,"nodeType":"InlineAssembly","src":"2773:63:9"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"2588:86:9","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:9","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"slot","nameLocation":"2711:4:9","nodeType":"VariableDeclaration","scope":1251,"src":"2703:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:9"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"r","nameLocation":"2760:1:9","nodeType":"VariableDeclaration","scope":1251,"src":"2740:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1198_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1246,"nodeType":"UserDefinedTypeName","pathNode":{"id":1245,"name":"Uint256Slot","nameLocations":["2740:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1198,"src":"2740:11:9"},"referencedDeclaration":1198,"src":"2740:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1198_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:9"},"scope":1307,"src":"2679:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1261,"nodeType":"Block","src":"3020:79:9","statements":[{"AST":{"nativeSrc":"3055:38:9","nodeType":"YulBlock","src":"3055:38:9","statements":[{"nativeSrc":"3069:14:9","nodeType":"YulAssignment","src":"3069:14:9","value":{"name":"slot","nativeSrc":"3079:4:9","nodeType":"YulIdentifier","src":"3079:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:9","nodeType":"YulIdentifier","src":"3069:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1258,"isOffset":false,"isSlot":true,"src":"3069:6:9","suffix":"slot","valueSize":1},{"declaration":1254,"isOffset":false,"isSlot":false,"src":"3079:4:9","valueSize":1}],"flags":["memory-safe"],"id":1260,"nodeType":"InlineAssembly","src":"3030:63:9"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"2848:85:9","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:9","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"slot","nameLocation":"2969:4:9","nodeType":"VariableDeclaration","scope":1262,"src":"2961:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:9"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"r","nameLocation":"3017:1:9","nodeType":"VariableDeclaration","scope":1262,"src":"2998:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1201_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1257,"nodeType":"UserDefinedTypeName","pathNode":{"id":1256,"name":"Int256Slot","nameLocations":["2998:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"2998:10:9"},"referencedDeclaration":1201,"src":"2998:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1201_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:9"},"scope":1307,"src":"2938:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"3277:79:9","statements":[{"AST":{"nativeSrc":"3312:38:9","nodeType":"YulBlock","src":"3312:38:9","statements":[{"nativeSrc":"3326:14:9","nodeType":"YulAssignment","src":"3326:14:9","value":{"name":"slot","nativeSrc":"3336:4:9","nodeType":"YulIdentifier","src":"3336:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:9","nodeType":"YulIdentifier","src":"3326:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1269,"isOffset":false,"isSlot":true,"src":"3326:6:9","suffix":"slot","valueSize":1},{"declaration":1265,"isOffset":false,"isSlot":false,"src":"3336:4:9","valueSize":1}],"flags":["memory-safe"],"id":1271,"nodeType":"InlineAssembly","src":"3287:63:9"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"3105:85:9","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:9","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"slot","nameLocation":"3226:4:9","nodeType":"VariableDeclaration","scope":1273,"src":"3218:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:9"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"r","nameLocation":"3274:1:9","nodeType":"VariableDeclaration","scope":1273,"src":"3255:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1204_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"StringSlot","nameLocations":["3255:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"3255:10:9"},"referencedDeclaration":1204,"src":"3255:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1204_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:9"},"scope":1307,"src":"3195:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"3558:85:9","statements":[{"AST":{"nativeSrc":"3593:44:9","nodeType":"YulBlock","src":"3593:44:9","statements":[{"nativeSrc":"3607:20:9","nodeType":"YulAssignment","src":"3607:20:9","value":{"name":"store.slot","nativeSrc":"3617:10:9","nodeType":"YulIdentifier","src":"3617:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:9","nodeType":"YulIdentifier","src":"3607:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1280,"isOffset":false,"isSlot":true,"src":"3607:6:9","suffix":"slot","valueSize":1},{"declaration":1276,"isOffset":false,"isSlot":true,"src":"3617:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1282,"nodeType":"InlineAssembly","src":"3568:69:9"}]},"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"3362:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:9","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"store","nameLocation":"3506:5:9","nodeType":"VariableDeclaration","scope":1284,"src":"3491:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1275,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:9"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"r","nameLocation":"3555:1:9","nodeType":"VariableDeclaration","scope":1284,"src":"3536:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1204_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1279,"nodeType":"UserDefinedTypeName","pathNode":{"id":1278,"name":"StringSlot","nameLocations":["3536:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"3536:10:9"},"referencedDeclaration":1204,"src":"3536:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1204_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:9"},"scope":1307,"src":"3468:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"3818:79:9","statements":[{"AST":{"nativeSrc":"3853:38:9","nodeType":"YulBlock","src":"3853:38:9","statements":[{"nativeSrc":"3867:14:9","nodeType":"YulAssignment","src":"3867:14:9","value":{"name":"slot","nativeSrc":"3877:4:9","nodeType":"YulIdentifier","src":"3877:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:9","nodeType":"YulIdentifier","src":"3867:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1291,"isOffset":false,"isSlot":true,"src":"3867:6:9","suffix":"slot","valueSize":1},{"declaration":1287,"isOffset":false,"isSlot":false,"src":"3877:4:9","valueSize":1}],"flags":["memory-safe"],"id":1293,"nodeType":"InlineAssembly","src":"3828:63:9"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"3649:84:9","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:9","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"slot","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":1295,"src":"3760:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:9"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"r","nameLocation":"3815:1:9","nodeType":"VariableDeclaration","scope":1295,"src":"3797:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"BytesSlot","nameLocations":["3797:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1207,"src":"3797:9:9"},"referencedDeclaration":1207,"src":"3797:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:9"},"scope":1307,"src":"3738:159:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"4094:85:9","statements":[{"AST":{"nativeSrc":"4129:44:9","nodeType":"YulBlock","src":"4129:44:9","statements":[{"nativeSrc":"4143:20:9","nodeType":"YulAssignment","src":"4143:20:9","value":{"name":"store.slot","nativeSrc":"4153:10:9","nodeType":"YulIdentifier","src":"4153:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:9","nodeType":"YulIdentifier","src":"4143:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1302,"isOffset":false,"isSlot":true,"src":"4143:6:9","suffix":"slot","valueSize":1},{"declaration":1298,"isOffset":false,"isSlot":true,"src":"4153:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1304,"nodeType":"InlineAssembly","src":"4104:69:9"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"3903:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:9","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"store","nameLocation":"4043:5:9","nodeType":"VariableDeclaration","scope":1306,"src":"4029:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1297,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"r","nameLocation":"4091:1:9","nodeType":"VariableDeclaration","scope":1306,"src":"4073:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1301,"nodeType":"UserDefinedTypeName","pathNode":{"id":1300,"name":"BytesSlot","nameLocations":["4073:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1207,"src":"4073:9:9"},"referencedDeclaration":1207,"src":"4073:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1207_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:9"},"scope":1307,"src":"4007:172:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1308,"src":"1407:2774:9","usedErrors":[],"usedEvents":[]}],"src":"193:3989:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1319]},"id":1320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1309,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"142:280:10","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1319,"linearizedBaseContracts":[1319],"name":"IERC165","nameLocation":"433:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"447:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1318,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:10","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:10","nodeType":"VariableDeclaration","scope":1318,"src":"819:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1312,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:10"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"862:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1315,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:10"},"scope":1319,"src":"792:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1320,"src":"423:447:10","usedErrors":[],"usedEvents":[]}],"src":"115:756:10"},"id":10},"contracts/NFTAuction.sol":{"ast":{"absolutePath":"contracts/NFTAuction.sol","exportedSymbols":{"ERC1967Utils":[774],"IERC165":[1319],"IERC1822Proxiable":[480],"IERC721":[901],"Initializable":[267],"NFTAuction":[1533],"UUPSUpgradeable":[449]},"id":1534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1534,"sourceUnit":902,"src":"57:58:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1534,"sourceUnit":268,"src":"136:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":1324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1534,"sourceUnit":450,"src":"212:77:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1325,"name":"Initializable","nameLocations":["314:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":267,"src":"314:13:11"},"id":1326,"nodeType":"InheritanceSpecifier","src":"314:13:11"},{"baseName":{"id":1327,"name":"UUPSUpgradeable","nameLocations":["329:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":449,"src":"329:15:11"},"id":1328,"nodeType":"InheritanceSpecifier","src":"329:15:11"}],"canonicalName":"NFTAuction","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1533,"linearizedBaseContracts":[1533,449,480,267],"name":"NFTAuction","nameLocation":"300:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1338,"nodeType":"Block","src":"436:35:11","statements":[{"expression":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1333,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"446:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"454:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"458:6:11","memberName":"sender","nodeType":"MemberAccess","src":"454:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"446:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1337,"nodeType":"ExpressionStatement","src":"446:18:11"}]},"functionSelector":"8129fc1c","id":1339,"implemented":true,"kind":"function","modifiers":[{"id":1331,"kind":"modifierInvocation","modifierName":{"id":1330,"name":"initializer","nameLocations":["424:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":107,"src":"424:11:11"},"nodeType":"ModifierInvocation","src":"424:11:11"}],"name":"initialize","nameLocation":"404:10:11","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[],"src":"414:2:11"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"436:0:11"},"scope":1533,"src":"395:76:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"NFTAuction.Auction","id":1358,"members":[{"constant":false,"id":1341,"mutability":"mutable","name":"seller","nameLocation":"549:6:11","nodeType":"VariableDeclaration","scope":1358,"src":"541:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"duration","nameLocation":"573:8:11","nodeType":"VariableDeclaration","scope":1358,"src":"565:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"565:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"startTime","nameLocation":"599:9:11","nodeType":"VariableDeclaration","scope":1358,"src":"591:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"startPrice","nameLocation":"626:10:11","nodeType":"VariableDeclaration","scope":1358,"src":"618:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"ended","nameLocation":"651:5:11","nodeType":"VariableDeclaration","scope":1358,"src":"646:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1348,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"highestBidder","nameLocation":"674:13:11","nodeType":"VariableDeclaration","scope":1358,"src":"666:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"highestBid","nameLocation":"705:10:11","nodeType":"VariableDeclaration","scope":1358,"src":"697:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"nftAddress","nameLocation":"762:10:11","nodeType":"VariableDeclaration","scope":1358,"src":"754:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"tokenId","nameLocation":"814:7:11","nodeType":"VariableDeclaration","scope":1358,"src":"806:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Auction","nameLocation":"523:7:11","nodeType":"StructDefinition","scope":1533,"src":"516:312:11","visibility":"public"},{"constant":false,"functionSelector":"571a26a0","id":1363,"mutability":"mutable","name":"auctions","nameLocation":"889:8:11","nodeType":"VariableDeclaration","scope":1533,"src":"854:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1358_storage_$","typeString":"mapping(uint256 => struct NFTAuction.Auction)"},"typeName":{"id":1362,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"854:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1358_storage_$","typeString":"mapping(uint256 => struct NFTAuction.Auction)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1361,"nodeType":"UserDefinedTypeName","pathNode":{"id":1360,"name":"Auction","nameLocations":["873:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"873:7:11"},"referencedDeclaration":1358,"src":"873:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction"}}},"visibility":"public"},{"constant":false,"functionSelector":"fc528482","id":1365,"mutability":"mutable","name":"nextAuctionId","nameLocation":"918:13:11","nodeType":"VariableDeclaration","scope":1533,"src":"903:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":1367,"mutability":"mutable","name":"admin","nameLocation":"952:5:11","nodeType":"VariableDeclaration","scope":1533,"src":"937:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"937:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"26232a2e","id":1369,"mutability":"mutable","name":"platformFee","nameLocation":"978:11:11","nodeType":"VariableDeclaration","scope":1533,"src":"963:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"1147:94:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1165:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1169:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1165:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1374,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"1179:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1165:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1186:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","typeString":"literal_string \"Only admin can perform this action\""},"value":"Only admin can perform this action"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","typeString":"literal_string \"Only admin can perform this action\""}],"id":1371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1157:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1157:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"1157:66:11"},{"id":1379,"nodeType":"PlaceholderStatement","src":"1233:1:11"}]},"id":1381,"name":"onlyAdmin","nameLocation":"1135:9:11","nodeType":"ModifierDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[],"src":"1144:2:11"},"src":"1126:115:11","virtual":false,"visibility":"internal"},{"body":{"id":1437,"nodeType":"Block","src":"1385:563:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"1403:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_60000_by_1","typeString":"int_const 60000"},"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1415:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1422:2:11","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1415:9:11","typeDescriptions":{"typeIdentifier":"t_rational_60000_by_1","typeString":"int_const 60000"}},"src":"1403:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d7573742062652067726561746572207468616e2031206d696e757465","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1426:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","typeString":"literal_string \"Duration must be greater than 1 minute\""},"value":"Duration must be greater than 1 minute"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","typeString":"literal_string \"Duration must be greater than 1 minute\""}],"id":1394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1395:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1395:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"ExpressionStatement","src":"1395:72:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"1485:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1499:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1485:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374617274207072696365206d7573742062652067726561746572207468616e2030","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1502:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","typeString":"literal_string \"Start price must be greater than 0\""},"value":"Start price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","typeString":"literal_string \"Start price must be greater than 0\""}],"id":1403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1477:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1477:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"1477:62:11"},{"expression":{"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1410,"name":"auctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1550:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1358_storage_$","typeString":"mapping(uint256 => struct NFTAuction.Auction storage ref)"}},"id":1412,"indexExpression":{"id":1411,"name":"nextAuctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"1559:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1550:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage","typeString":"struct NFTAuction.Auction storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1606:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1606:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1416,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1640:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1640:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1418,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"1658:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1640:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1420,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1692:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1698:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1692:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1422,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"1733:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1765:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1799:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:11","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1799:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1429,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"1862:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1430,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1896:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1413,"name":"Auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1576:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Auction_$1358_storage_ptr_$","typeString":"type(struct NFTAuction.Auction storage pointer)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1598:6:11","1630:8:11","1681:9:11","1721:10:11","1758:5:11","1784:13:11","1823:10:11","1850:10:11","1887:7:11"],"names":["seller","duration","startTime","startPrice","ended","highestBidder","highestBid","nftAddress","tokenId"],"nodeType":"FunctionCall","src":"1576:339:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_memory_ptr","typeString":"struct NFTAuction.Auction memory"}},"src":"1550:365:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage","typeString":"struct NFTAuction.Auction storage ref"}},"id":1433,"nodeType":"ExpressionStatement","src":"1550:365:11"},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1926:15:11","subExpression":{"id":1434,"name":"nextAuctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"1926:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1436,"nodeType":"ExpressionStatement","src":"1926:15:11"}]},"functionSelector":"b1cb48ef","id":1438,"implemented":true,"kind":"function","modifiers":[{"id":1392,"kind":"modifierInvocation","modifierName":{"id":1391,"name":"onlyAdmin","nameLocations":["1375:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1381,"src":"1375:9:11"},"nodeType":"ModifierInvocation","src":"1375:9:11"}],"name":"createAuction","nameLocation":"1275:13:11","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"_duration","nameLocation":"1297:9:11","nodeType":"VariableDeclaration","scope":1438,"src":"1289:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"_startPrice","nameLocation":"1316:11:11","nodeType":"VariableDeclaration","scope":1438,"src":"1308:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"_nftAddress","nameLocation":"1337:11:11","nodeType":"VariableDeclaration","scope":1438,"src":"1329:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"_tokenId","nameLocation":"1358:8:11","nodeType":"VariableDeclaration","scope":1438,"src":"1350:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1288:79:11"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[],"src":"1385:0:11"},"scope":1533,"src":"1266:682:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1514,"nodeType":"Block","src":"2035:622:11","statements":[{"assignments":[1445],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"auction","nameLocation":"2061:7:11","nodeType":"VariableDeclaration","scope":1514,"src":"2045:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction"},"typeName":{"id":1444,"nodeType":"UserDefinedTypeName","pathNode":{"id":1443,"name":"Auction","nameLocations":["2045:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"2045:7:11"},"referencedDeclaration":1358,"src":"2045:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction"}},"visibility":"internal"}],"id":1449,"initialValue":{"baseExpression":{"id":1446,"name":"auctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"2071:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1358_storage_$","typeString":"mapping(uint256 => struct NFTAuction.Auction storage ref)"}},"id":1448,"indexExpression":{"id":1447,"name":"_auctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"2080:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2071:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage","typeString":"struct NFTAuction.Auction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2045:46:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2159:14:11","subExpression":{"expression":{"id":1451,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2160:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2168:5:11","memberName":"ended","nodeType":"MemberAccess","referencedDeclaration":1349,"src":"2160:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1454,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2177:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2185:9:11","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":1345,"src":"2177:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1456,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2197:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2205:8:11","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"2197:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2177:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2216:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2222:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2216:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2177:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2159:72:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e2068617320656e646564","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2233:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""},"value":"Auction has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""}],"id":1450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2151:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:102:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"2151:102:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1467,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2271:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2275:5:11","memberName":"value","nodeType":"MemberAccess","src":"2271:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1469,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2283:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2291:10:11","memberName":"highestBid","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"2283:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2271:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2305:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:5:11","memberName":"value","nodeType":"MemberAccess","src":"2305:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1474,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2318:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2326:10:11","memberName":"startPrice","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"2318:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2305:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2271:65:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206d75737420626520686967686572207468616e2063757272656e74206869676865737420626964","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2338:45:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","typeString":"literal_string \"Bid must be higher than current highest bid\""},"value":"Bid must be higher than current highest bid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","typeString":"literal_string \"Bid must be higher than current highest bid\""}],"id":1466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2263:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:121:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"2263:121:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1481,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2445:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2453:13:11","memberName":"highestBidder","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"2445:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2478:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2470:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2470:7:11","typeDescriptions":{}}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2470:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2445:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1499,"nodeType":"IfStatement","src":"2441:125:11","trueBody":{"id":1498,"nodeType":"Block","src":"2482:84:11","statements":[{"expression":{"arguments":[{"expression":{"id":1494,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2536:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2544:10:11","memberName":"highestBid","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"2536:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1490,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2504:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2512:13:11","memberName":"highestBidder","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"2504:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2496:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"2496:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:8:11","memberName":"transfer","nodeType":"MemberAccess","src":"2496:39:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1497,"nodeType":"ExpressionStatement","src":"2496:59:11"}]}},{"expression":{"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1500,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2576:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2584:13:11","memberName":"highestBidder","nodeType":"MemberAccess","referencedDeclaration":1351,"src":"2576:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2600:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2604:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2600:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2576:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1506,"nodeType":"ExpressionStatement","src":"2576:34:11"},{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1507,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2620:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1358_storage_ptr","typeString":"struct NFTAuction.Auction storage pointer"}},"id":1509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2628:10:11","memberName":"highestBid","nodeType":"MemberAccess","referencedDeclaration":1353,"src":"2620:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2641:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2645:5:11","memberName":"value","nodeType":"MemberAccess","src":"2641:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2620:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ExpressionStatement","src":"2620:30:11"}]},"functionSelector":"9979ef45","id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"placeBid","nameLocation":"1989:8:11","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"_auctionId","nameLocation":"2006:10:11","nodeType":"VariableDeclaration","scope":1515,"src":"1998:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1998:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1997:20:11"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[],"src":"2035:0:11"},"scope":1533,"src":"1980:677:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[403],"body":{"id":1531,"nodeType":"Block","src":"2744:84:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2762:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2766:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2762:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1526,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2776:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2762:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e20757067726164652074686520636f6e7472616374","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2783:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50","typeString":"literal_string \"Only admin can upgrade the contract\""},"value":"Only admin can upgrade the contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50","typeString":"literal_string \"Only admin can upgrade the contract\""}],"id":1523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2754:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"ExpressionStatement","src":"2754:67:11"}]},"id":1532,"implemented":true,"kind":"function","modifiers":[{"id":1521,"kind":"modifierInvocation","modifierName":{"id":1520,"name":"onlyAdmin","nameLocations":["2734:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1381,"src":"2734:9:11"},"nodeType":"ModifierInvocation","src":"2734:9:11"}],"name":"_authorizeUpgrade","nameLocation":"2671:17:11","nodeType":"FunctionDefinition","overrides":{"id":1519,"nodeType":"OverrideSpecifier","overrides":[],"src":"2725:8:11"},"parameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"newImplementation","nameLocation":"2697:17:11","nodeType":"VariableDeclaration","scope":1532,"src":"2689:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2688:27:11"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[],"src":"2744:0:11"},"scope":1533,"src":"2662:166:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1534,"src":"291:2540:11","usedErrors":[16,19,294,299,500,513,911,1174],"usedEvents":[24,457]}],"src":"32:2799:11"},"id":11},"contracts/NFTAuction_v2.sol":{"ast":{"absolutePath":"contracts/NFTAuction_v2.sol","exportedSymbols":{"IERC165":[1319],"IERC721":[901],"Initializable":[267],"NFTAuctionV2":[1735]},"id":1736,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1535,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1736,"sourceUnit":902,"src":"57:58:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1736,"sourceUnit":268,"src":"136:75:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1538,"name":"Initializable","nameLocations":["238:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":267,"src":"238:13:12"},"id":1539,"nodeType":"InheritanceSpecifier","src":"238:13:12"}],"canonicalName":"NFTAuctionV2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1735,"linearizedBaseContracts":[1735,267],"name":"NFTAuctionV2","nameLocation":"222:12:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1549,"nodeType":"Block","src":"343:35:12","statements":[{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1544,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"353:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"361:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"365:6:12","memberName":"sender","nodeType":"MemberAccess","src":"361:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"353:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1548,"nodeType":"ExpressionStatement","src":"353:18:12"}]},"functionSelector":"8129fc1c","id":1550,"implemented":true,"kind":"function","modifiers":[{"id":1542,"kind":"modifierInvocation","modifierName":{"id":1541,"name":"initializer","nameLocations":["331:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":107,"src":"331:11:12"},"nodeType":"ModifierInvocation","src":"331:11:12"}],"name":"initialize","nameLocation":"311:10:12","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"321:2:12"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[],"src":"343:0:12"},"scope":1735,"src":"302:76:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"NFTAuctionV2.Auction","id":1569,"members":[{"constant":false,"id":1552,"mutability":"mutable","name":"seller","nameLocation":"456:6:12","nodeType":"VariableDeclaration","scope":1569,"src":"448:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"duration","nameLocation":"480:8:12","nodeType":"VariableDeclaration","scope":1569,"src":"472:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"startTime","nameLocation":"506:9:12","nodeType":"VariableDeclaration","scope":1569,"src":"498:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"startPrice","nameLocation":"533:10:12","nodeType":"VariableDeclaration","scope":1569,"src":"525:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"ended","nameLocation":"558:5:12","nodeType":"VariableDeclaration","scope":1569,"src":"553:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1559,"name":"bool","nodeType":"ElementaryTypeName","src":"553:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"highestBidder","nameLocation":"581:13:12","nodeType":"VariableDeclaration","scope":1569,"src":"573:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"highestBid","nameLocation":"612:10:12","nodeType":"VariableDeclaration","scope":1569,"src":"604:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"nftAddress","nameLocation":"669:10:12","nodeType":"VariableDeclaration","scope":1569,"src":"661:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"661:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"tokenId","nameLocation":"721:7:12","nodeType":"VariableDeclaration","scope":1569,"src":"713:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Auction","nameLocation":"430:7:12","nodeType":"StructDefinition","scope":1735,"src":"423:312:12","visibility":"public"},{"constant":false,"functionSelector":"571a26a0","id":1574,"mutability":"mutable","name":"auctions","nameLocation":"796:8:12","nodeType":"VariableDeclaration","scope":1735,"src":"761:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1569_storage_$","typeString":"mapping(uint256 => struct NFTAuctionV2.Auction)"},"typeName":{"id":1573,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"761:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1569_storage_$","typeString":"mapping(uint256 => struct NFTAuctionV2.Auction)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1572,"nodeType":"UserDefinedTypeName","pathNode":{"id":1571,"name":"Auction","nameLocations":["780:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1569,"src":"780:7:12"},"referencedDeclaration":1569,"src":"780:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction"}}},"visibility":"public"},{"constant":false,"functionSelector":"fc528482","id":1576,"mutability":"mutable","name":"nextAuctionId","nameLocation":"825:13:12","nodeType":"VariableDeclaration","scope":1735,"src":"810:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":1578,"mutability":"mutable","name":"admin","nameLocation":"859:5:12","nodeType":"VariableDeclaration","scope":1735,"src":"844:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"26232a2e","id":1580,"mutability":"mutable","name":"platformFee","nameLocation":"885:11:12","nodeType":"VariableDeclaration","scope":1735,"src":"870:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"870:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1591,"nodeType":"Block","src":"1054:94:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1072:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1585,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"1086:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1072:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1093:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","typeString":"literal_string \"Only admin can perform this action\""},"value":"Only admin can perform this action"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","typeString":"literal_string \"Only admin can perform this action\""}],"id":1582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1064:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1064:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1589,"nodeType":"ExpressionStatement","src":"1064:66:12"},{"id":1590,"nodeType":"PlaceholderStatement","src":"1140:1:12"}]},"id":1592,"name":"onlyAdmin","nameLocation":"1042:9:12","nodeType":"ModifierDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[],"src":"1051:2:12"},"src":"1033:115:12","virtual":false,"visibility":"internal"},{"body":{"id":1648,"nodeType":"Block","src":"1292:563:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1310:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_60000_by_1","typeString":"int_const 60000"},"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1322:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1329:2:12","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1322:9:12","typeDescriptions":{"typeIdentifier":"t_rational_60000_by_1","typeString":"int_const 60000"}},"src":"1310:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d7573742062652067726561746572207468616e2031206d696e757465","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1333:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","typeString":"literal_string \"Duration must be greater than 1 minute\""},"value":"Duration must be greater than 1 minute"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","typeString":"literal_string \"Duration must be greater than 1 minute\""}],"id":1605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1302:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1302:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"1302:72:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1392:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1392:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374617274207072696365206d7573742062652067726561746572207468616e2030","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1409:36:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","typeString":"literal_string \"Start price must be greater than 0\""},"value":"Start price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","typeString":"literal_string \"Start price must be greater than 0\""}],"id":1614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1384:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1384:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"1384:62:12"},{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1621,"name":"auctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1457:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1569_storage_$","typeString":"mapping(uint256 => struct NFTAuctionV2.Auction storage ref)"}},"id":1623,"indexExpression":{"id":1622,"name":"nextAuctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1466:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1457:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage","typeString":"struct NFTAuctionV2.Auction storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1513:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1517:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1513:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1627,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1547:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1553:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"1547:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1629,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1565:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1547:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1631,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1599:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1605:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"1599:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1633,"name":"_startPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1640:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1672:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1714:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:12","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1640,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"1769:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1641,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"1803:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"name":"Auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1483:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Auction_$1569_storage_ptr_$","typeString":"type(struct NFTAuctionV2.Auction storage pointer)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1505:6:12","1537:8:12","1588:9:12","1628:10:12","1665:5:12","1691:13:12","1730:10:12","1757:10:12","1794:7:12"],"names":["seller","duration","startTime","startPrice","ended","highestBidder","highestBid","nftAddress","tokenId"],"nodeType":"FunctionCall","src":"1483:339:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_memory_ptr","typeString":"struct NFTAuctionV2.Auction memory"}},"src":"1457:365:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage","typeString":"struct NFTAuctionV2.Auction storage ref"}},"id":1644,"nodeType":"ExpressionStatement","src":"1457:365:12"},{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1833:15:12","subExpression":{"id":1645,"name":"nextAuctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1833:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"1833:15:12"}]},"functionSelector":"b1cb48ef","id":1649,"implemented":true,"kind":"function","modifiers":[{"id":1603,"kind":"modifierInvocation","modifierName":{"id":1602,"name":"onlyAdmin","nameLocations":["1282:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1592,"src":"1282:9:12"},"nodeType":"ModifierInvocation","src":"1282:9:12"}],"name":"createAuction","nameLocation":"1182:13:12","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"_duration","nameLocation":"1204:9:12","nodeType":"VariableDeclaration","scope":1649,"src":"1196:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"_startPrice","nameLocation":"1223:11:12","nodeType":"VariableDeclaration","scope":1649,"src":"1215:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"_nftAddress","nameLocation":"1244:11:12","nodeType":"VariableDeclaration","scope":1649,"src":"1236:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"_tokenId","nameLocation":"1265:8:12","nodeType":"VariableDeclaration","scope":1649,"src":"1257:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1195:79:12"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[],"src":"1292:0:12"},"scope":1735,"src":"1173:682:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1725,"nodeType":"Block","src":"1942:622:12","statements":[{"assignments":[1656],"declarations":[{"constant":false,"id":1656,"mutability":"mutable","name":"auction","nameLocation":"1968:7:12","nodeType":"VariableDeclaration","scope":1725,"src":"1952:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction"},"typeName":{"id":1655,"nodeType":"UserDefinedTypeName","pathNode":{"id":1654,"name":"Auction","nameLocations":["1952:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1569,"src":"1952:7:12"},"referencedDeclaration":1569,"src":"1952:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction"}},"visibility":"internal"}],"id":1660,"initialValue":{"baseExpression":{"id":1657,"name":"auctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1978:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Auction_$1569_storage_$","typeString":"mapping(uint256 => struct NFTAuctionV2.Auction storage ref)"}},"id":1659,"indexExpression":{"id":1658,"name":"_auctionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"1987:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1978:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage","typeString":"struct NFTAuctionV2.Auction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1952:46:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2066:14:12","subExpression":{"expression":{"id":1662,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2067:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2075:5:12","memberName":"ended","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"2067:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1665,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2084:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2092:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":1556,"src":"2084:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1667,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2104:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2112:8:12","memberName":"duration","nodeType":"MemberAccess","referencedDeclaration":1554,"src":"2104:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2084:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1670,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2123:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2129:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"2123:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2084:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2066:72:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e2068617320656e646564","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2140:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""},"value":"Auction has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""}],"id":1661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2058:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2058:102:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"2058:102:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1678,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2178:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2182:5:12","memberName":"value","nodeType":"MemberAccess","src":"2178:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1680,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2190:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2198:10:12","memberName":"highestBid","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"2190:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2178:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2212:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:5:12","memberName":"value","nodeType":"MemberAccess","src":"2212:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1685,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2225:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2233:10:12","memberName":"startPrice","nodeType":"MemberAccess","referencedDeclaration":1558,"src":"2225:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2212:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2178:65:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206d75737420626520686967686572207468616e2063757272656e74206869676865737420626964","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2245:45:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","typeString":"literal_string \"Bid must be higher than current highest bid\""},"value":"Bid must be higher than current highest bid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","typeString":"literal_string \"Bid must be higher than current highest bid\""}],"id":1677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2170:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2170:121:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1691,"nodeType":"ExpressionStatement","src":"2170:121:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1692,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2352:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2360:13:12","memberName":"highestBidder","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"2352:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2377:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"2377:7:12","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2377:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2352:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"2348:125:12","trueBody":{"id":1709,"nodeType":"Block","src":"2389:84:12","statements":[{"expression":{"arguments":[{"expression":{"id":1705,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2443:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2451:10:12","memberName":"highestBid","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"2443:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1701,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2411:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2419:13:12","memberName":"highestBidder","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"2411:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2403:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1699,"name":"address","nodeType":"ElementaryTypeName","src":"2403:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2434:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"2403:39:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"ExpressionStatement","src":"2403:59:12"}]}},{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1711,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2483:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2491:13:12","memberName":"highestBidder","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"2483:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1714,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2507:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2511:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2507:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2483:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1717,"nodeType":"ExpressionStatement","src":"2483:34:12"},{"expression":{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1718,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"2527:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Auction_$1569_storage_ptr","typeString":"struct NFTAuctionV2.Auction storage pointer"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2535:10:12","memberName":"highestBid","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"2527:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2548:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2552:5:12","memberName":"value","nodeType":"MemberAccess","src":"2548:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2527:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"nodeType":"ExpressionStatement","src":"2527:30:12"}]},"functionSelector":"9979ef45","id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"placeBid","nameLocation":"1896:8:12","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"_auctionId","nameLocation":"1913:10:12","nodeType":"VariableDeclaration","scope":1726,"src":"1905:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:20:12"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"1942:0:12"},"scope":1735,"src":"1887:677:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1733,"nodeType":"Block","src":"2626:39:12","statements":[{"expression":{"hexValue":"48656c6c6f2c20576f726c6421","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2643:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_acaf3289d7b601cbd114fb36c4d29c85bbfd5e133f14cb355c3fd8d99367964f","typeString":"literal_string \"Hello, World!\""},"value":"Hello, World!"},"functionReturnParameters":1730,"id":1732,"nodeType":"Return","src":"2636:22:12"}]},"functionSelector":"c97c6353","id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"testHello","nameLocation":"2578:9:12","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[],"src":"2587:2:12"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"2611:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1728,"name":"string","nodeType":"ElementaryTypeName","src":"2611:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2610:15:12"},"scope":1735,"src":"2569:96:12","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":1736,"src":"213:2455:12","usedErrors":[16,19],"usedEvents":[24]}],"src":"32:2636:12"},"id":12}},"contracts":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.22;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC-1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\\n\\npragma solidity >=0.4.11;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.21;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {IERC1967} from \\\"../../interfaces/IERC1967.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This library provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the ERC-1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit IERC1967.Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the ERC-1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit IERC1967.BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            _revert(returndata);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                revert(add(returndata, 0x20), mload(returndata))\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC-1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * TIP: Consider using this library along with {SlotDerivation}.\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct Int256Slot {\\n        int256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\\n     */\\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\\n\\npragma solidity >=0.4.11;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"devdoc":{"details":"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f066fe511778cf0700df1c2442f8fca79599057717810d20512791fc50c260a464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH7 0xFE511778CF0700 0xDF SHR 0x24 TIMESTAMP 0xF8 0xFC 0xA7 SWAP6 SWAP10 SDIV PUSH24 0x17810D20512791FC50C260A464736F6C634300081C003300 ","sourceMap":"496:5741:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f066fe511778cf0700df1c2442f8fca79599057717810d20512791fc50c260a464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH7 0xFE511778CF0700 0xDF SHR 0x24 TIMESTAMP 0xF8 0xFC 0xA7 SWAP6 SWAP10 SDIV PUSH24 0x17810D20512791FC50C260A464736F6C634300081C003300 ","sourceMap":"496:5741:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\\n\\npragma solidity >=0.4.11;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.21;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {IERC1967} from \\\"../../interfaces/IERC1967.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This library provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the ERC-1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit IERC1967.Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the ERC-1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit IERC1967.BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            _revert(returndata);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                revert(add(returndata, 0x20), mload(returndata))\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC-1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * TIP: Consider using this library along with {SlotDerivation}.\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct Int256Slot {\\n        int256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\\n     */\\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220127d8fce0c9446903f35f0852af3440701b196e5f1a43842a94e5e7a4006fca864736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH30 0x8FCE0C9446903F35F0852AF3440701B196E5F1A43842A94E5E7A4006FCA8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"233:5762:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220127d8fce0c9446903f35f0852af3440701b196e5f1a43842a94e5e7a4006fca864736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH30 0x8FCE0C9446903F35F0852AF3440701B196E5F1A43842A94E5E7A4006FCA8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"233:5762:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            _revert(returndata);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                revert(add(returndata, 0x20), mload(returndata))\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220071306b615c3ce71af0f41f90e219ff99db8f44aabf8991f6a3a690127422a0464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SGT MOD 0xB6 ISZERO 0xC3 0xCE PUSH18 0xAF0F41F90E219FF99DB8F44AABF8991F6A3A PUSH10 0x127422A0464736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220071306b615c3ce71af0f41f90e219ff99db8f44aabf8991f6a3a690127422a0464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SGT MOD 0xB6 ISZERO 0xC3 0xCE PUSH18 0xAF0F41F90E219FF99DB8F44AABF8991F6A3A PUSH10 0x127422A0464736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2c13fe035e560a2ac49e23f8fd2d6c43eb8be35415cefe035afe4678c46567464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xC1 EXTCODEHASH 0xE0 CALLDATALOAD 0xE5 PUSH1 0xA2 0xAC BLOBHASH 0xE2 EXTCODEHASH DUP16 0xD2 0xD6 0xC4 RETURNDATACOPY 0xB8 0xBE CALLDATALOAD COINBASE TLOAD 0xEF 0xE0 CALLDATALOAD 0xAF 0xE4 PUSH8 0x8C46567464736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2c13fe035e560a2ac49e23f8fd2d6c43eb8be35415cefe035afe4678c46567464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xC1 EXTCODEHASH 0xE0 CALLDATALOAD 0xE5 PUSH1 0xA2 0xAC BLOBHASH 0xE2 EXTCODEHASH DUP16 0xD2 0xD6 0xC4 RETURNDATACOPY 0xB8 0xBE CALLDATALOAD COINBASE TLOAD 0xEF 0xE0 CALLDATALOAD 0xAF 0xE4 PUSH8 0x8C46567464736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getInt256Slot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC-1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * TIP: Consider using this library along with {SlotDerivation}.\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct Int256Slot {\\n        int256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\\n     */\\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTAuction.sol":{"NFTAuction":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"auctions","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"startPrice","type":"uint256"},{"internalType":"bool","name":"ended","type":"bool"},{"internalType":"address","name":"highestBidder","type":"address"},{"internalType":"uint256","name":"highestBid","type":"uint256"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_duration","type":"uint256"},{"internalType":"uint256","name":"_startPrice","type":"uint256"},{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"createAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextAuctionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_auctionId","type":"uint256"}],"name":"placeBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"platformFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015604257600080fd5b50608051611b8661006c60003960008181610a6401528181610ab90152610d8c0152611b866000f3fe6080604052600436106100915760003560e01c80639979ef45116100595780639979ef4514610164578063ad3cb1cc14610180578063b1cb48ef146101ab578063f851a440146101d4578063fc528482146101ff57610091565b806326232a2e146100965780634f1ef286146100c157806352d1902d146100dd578063571a26a0146101085780638129fc1c1461014d575b600080fd5b3480156100a257600080fd5b506100ab61022a565b6040516100b8919061119e565b60405180910390f35b6100db60048036038101906100d69190611371565b610230565b005b3480156100e957600080fd5b506100f261024f565b6040516100ff91906113e6565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a919061142d565b610282565b60405161014499989796959493929190611484565b60405180910390f35b34801561015957600080fd5b5061016261033d565b005b61017e6004803603810190610179919061142d565b610503565b005b34801561018c57600080fd5b506101956106f7565b6040516101a29190611590565b60405180910390f35b3480156101b757600080fd5b506101d260048036038101906101cd91906115b2565b610730565b005b3480156101e057600080fd5b506101e9610a36565b6040516101f69190611619565b60405180910390f35b34801561020b57600080fd5b50610214610a5c565b604051610221919061119e565b60405180910390f35b60035481565b610238610a62565b61024182610b48565b61024b8282610c6b565b5050565b6000610259610d8a565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b6000610347610e11565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156103955750825b9050600060018367ffffffffffffffff161480156103ca575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156103d8575080155b1561040f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561045f5760018560000160086101000a81548160ff0219169083151502179055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156104fc5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104f3919061168d565b60405180910390a15b5050505050565b600080600083815260200190815260200160002090508060040160009054906101000a900460ff1615801561054a5750428160010154826002015461054891906116d7565b115b610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058090611757565b60405180910390fd5b8060050154341180156105a0575080600301543410155b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906117e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a7578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600501549081150290604051600060405180830381858888f193505050501580156106a5573d6000803e3d6000fd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b79061187b565b60405180910390fd5b61ea608411610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb9061190d565b60405180910390fd5b60008311610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e9061199f565b60405180910390fd5b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001854261087b91906116d7565b8152602001428152602001848152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816007015590505060016000815480929190610a2b906119bf565b919050555050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610b0f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610af6610e25565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610b46576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf9061187b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5f90611a79565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cd357506040513d601f19601f82011682018060405250810190610cd09190611ac5565b60015b610d1457816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610d0b9190611619565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610d7b57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610d7291906113e6565b60405180910390fd5b610d858383610e7c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610e0f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080610e1c610eef565b90508091505090565b6000610e537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f1a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e8582610f24565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ee257610edc8282610ff1565b50610eeb565b610eea611075565b5b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610f8057806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610f779190611619565b60405180910390fd5b80610fad7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f1a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161101b9190611b39565b600060405180830381855af49150503d8060008114611056576040519150601f19603f3d011682016040523d82523d6000602084013e61105b565b606091505b509150915061106b8583836110b2565b9250505092915050565b60003411156110b0576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826110c7576110c282611141565b611139565b600082511480156110ef575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561113157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111289190611619565b60405180910390fd5b81905061113a565b5b9392505050565b60008151111561115357805160208201fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61119881611185565b82525050565b60006020820190506111b3600083018461118f565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f8826111cd565b9050919050565b611208816111ed565b811461121357600080fd5b50565b600081359050611225816111ff565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61127e82611235565b810181811067ffffffffffffffff8211171561129d5761129c611246565b5b80604052505050565b60006112b06111b9565b90506112bc8282611275565b919050565b600067ffffffffffffffff8211156112dc576112db611246565b5b6112e582611235565b9050602081019050919050565b82818337600083830152505050565b600061131461130f846112c1565b6112a6565b9050828152602081018484840111156113305761132f611230565b5b61133b8482856112f2565b509392505050565b600082601f8301126113585761135761122b565b5b8135611368848260208601611301565b91505092915050565b60008060408385031215611388576113876111c3565b5b600061139685828601611216565b925050602083013567ffffffffffffffff8111156113b7576113b66111c8565b5b6113c385828601611343565b9150509250929050565b6000819050919050565b6113e0816113cd565b82525050565b60006020820190506113fb60008301846113d7565b92915050565b61140a81611185565b811461141557600080fd5b50565b60008135905061142781611401565b92915050565b600060208284031215611443576114426111c3565b5b600061145184828501611418565b91505092915050565b611463816111ed565b82525050565b60008115159050919050565b61147e81611469565b82525050565b60006101208201905061149a600083018c61145a565b6114a7602083018b61118f565b6114b4604083018a61118f565b6114c1606083018961118f565b6114ce6080830188611475565b6114db60a083018761145a565b6114e860c083018661118f565b6114f560e083018561145a565b61150361010083018461118f565b9a9950505050505050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561154b578082015181840152602081019050611530565b60008484015250505050565b600061156282611511565b61156c818561151c565b935061157c81856020860161152d565b61158581611235565b840191505092915050565b600060208201905081810360008301526115aa8184611557565b905092915050565b600080600080608085870312156115cc576115cb6111c3565b5b60006115da87828801611418565b94505060206115eb87828801611418565b93505060406115fc87828801611216565b925050606061160d87828801611418565b91505092959194509250565b600060208201905061162e600083018461145a565b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061167761167261166d84611634565b611652565b61163e565b9050919050565b6116878161165c565b82525050565b60006020820190506116a2600083018461167e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116e282611185565b91506116ed83611185565b9250828201905080821115611705576117046116a8565b5b92915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b600061174160118361151c565b915061174c8261170b565b602082019050919050565b6000602082019050818103600083015261177081611734565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e742060008201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b60006117d3602b8361151c565b91506117de82611777565b604082019050919050565b60006020820190508181036000830152611802816117c6565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b600061186560228361151c565b915061187082611809565b604082019050919050565b6000602082019050818103600083015261189481611858565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e20312060008201527f6d696e7574650000000000000000000000000000000000000000000000000000602082015250565b60006118f760268361151c565b91506119028261189b565b604082019050919050565b60006020820190508181036000830152611926816118ea565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b600061198960228361151c565b91506119948261192d565b604082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b60006119ca82611185565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119fc576119fb6116a8565b5b600182019050919050565b7f4f6e6c792061646d696e2063616e20757067726164652074686520636f6e747260008201527f6163740000000000000000000000000000000000000000000000000000000000602082015250565b6000611a6360238361151c565b9150611a6e82611a07565b604082019050919050565b60006020820190508181036000830152611a9281611a56565b9050919050565b611aa2816113cd565b8114611aad57600080fd5b50565b600081519050611abf81611a99565b92915050565b600060208284031215611adb57611ada6111c3565b5b6000611ae984828501611ab0565b91505092915050565b600081519050919050565b600081905092915050565b6000611b1382611af2565b611b1d8185611afd565b9350611b2d81856020860161152d565b80840191505092915050565b6000611b458284611b08565b91508190509291505056fea2646970667358221220167a128c397519117479a3fd535b6a5f603afe9b3ed7517dbce2d8d5dc36f62d64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1B86 PUSH2 0x6C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xA64 ADD MSTORE DUP2 DUP2 PUSH2 0xAB9 ADD MSTORE PUSH2 0xD8C ADD MSTORE PUSH2 0x1B86 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9979EF45 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x1FF JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x33D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x241 DUP3 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0x24B DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 PUSH2 0xD8A JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x395 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3CA JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3D8 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x45F JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x54A JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST GT JUMPDEST PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x5A0 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D6 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A7 JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA2B SWAP1 PUSH2 0x19BF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB0F JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF6 PUSH2 0xE25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCF SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5F SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD14 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0xD7B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD85 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE1C PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE85 DUP3 PUSH2 0xF24 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEDC DUP3 DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xEEA PUSH2 0x1075 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xF80 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xFAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1056 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x105B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x106B DUP6 DUP4 DUP4 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x10C7 JUMPI PUSH2 0x10C2 DUP3 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x10EF JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1131 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1153 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1198 DUP2 PUSH2 0x1185 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x118F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 DUP3 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1208 DUP2 PUSH2 0x11ED JUMP JUMPDEST DUP2 EQ PUSH2 0x1213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1225 DUP2 PUSH2 0x11FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x127E DUP3 PUSH2 0x1235 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x129D JUMPI PUSH2 0x129C PUSH2 0x1246 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 PUSH2 0x11B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x12BC DUP3 DUP3 PUSH2 0x1275 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12DC JUMPI PUSH2 0x12DB PUSH2 0x1246 JUMP JUMPDEST JUMPDEST PUSH2 0x12E5 DUP3 PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1314 PUSH2 0x130F DUP5 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x12A6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH2 0x133B DUP5 DUP3 DUP6 PUSH2 0x12F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1358 JUMPI PUSH2 0x1357 PUSH2 0x122B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1368 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1396 DUP6 DUP3 DUP7 ADD PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x13B6 PUSH2 0x11C8 JUMP JUMPDEST JUMPDEST PUSH2 0x13C3 DUP6 DUP3 DUP7 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E0 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140A DUP2 PUSH2 0x1185 JUMP JUMPDEST DUP2 EQ PUSH2 0x1415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1427 DUP2 PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1451 DUP5 DUP3 DUP6 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x11ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147E DUP2 PUSH2 0x1469 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x149A PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x14A7 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14B4 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14C1 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14CE PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x14DB PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x14E8 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14F5 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x1503 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x118F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x154B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1562 DUP3 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x156C DUP2 DUP6 PUSH2 0x151C JUMP JUMPDEST SWAP4 POP PUSH2 0x157C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x152D JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AA DUP2 DUP5 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CB PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DA DUP8 DUP3 DUP9 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x15EB DUP8 DUP3 DUP9 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x15FC DUP8 DUP3 DUP9 ADD PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x160D DUP8 DUP3 DUP9 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1677 PUSH2 0x1672 PUSH2 0x166D DUP5 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x163E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1687 DUP2 PUSH2 0x165C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x167E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH2 0x16ED DUP4 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1741 PUSH1 0x11 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x174C DUP3 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1770 DUP2 PUSH2 0x1734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D3 PUSH1 0x2B DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x17DE DUP3 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1802 DUP2 PUSH2 0x17C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 PUSH1 0x22 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1870 DUP3 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1894 DUP2 PUSH2 0x1858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D696E7574650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F7 PUSH1 0x26 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1902 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1926 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1989 PUSH1 0x22 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1994 DUP3 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B8 DUP2 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CA DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20757067726164652074686520636F6E7472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 PUSH1 0x23 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6E DUP3 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A92 DUP2 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ABF DUP2 PUSH2 0x1A99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE9 DUP5 DUP3 DUP6 ADD PUSH2 0x1AB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x1B1D DUP2 DUP6 PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x152D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B45 DUP3 DUP5 PUSH2 0x1B08 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH27 0x128C397519117479A3FD535B6A5F603AFE9B3ED7517DBCE2D8D5DC CALLDATASIZE 0xF6 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"291:2540:11:-:0;;;1171:4:1;1128:48;;;;;;;;;291:2540:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_291":{"entryPoint":1783,"id":291,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_1532":{"entryPoint":2888,"id":1532,"parameterSlots":1,"returnSlots":0},"@_checkNonPayable_773":{"entryPoint":4213,"id":773,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_397":{"entryPoint":3466,"id":397,"parameterSlots":0,"returnSlots":0},"@_checkProxy_381":{"entryPoint":2658,"id":381,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_266":{"entryPoint":3601,"id":266,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_252":{"entryPoint":3823,"id":252,"parameterSlots":0,"returnSlots":1},"@_revert_1160":{"entryPoint":4417,"id":1160,"parameterSlots":1,"returnSlots":0},"@_setImplementation_553":{"entryPoint":3876,"id":553,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_448":{"entryPoint":3179,"id":448,"parameterSlots":2,"returnSlots":0},"@admin_1367":{"entryPoint":2614,"id":1367,"parameterSlots":0,"returnSlots":0},"@auctions_1363":{"entryPoint":642,"id":1363,"parameterSlots":0,"returnSlots":0},"@createAuction_1438":{"entryPoint":1840,"id":1438,"parameterSlots":4,"returnSlots":0},"@functionDelegateCall_1078":{"entryPoint":4081,"id":1078,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1218":{"entryPoint":3866,"id":1218,"parameterSlots":1,"returnSlots":1},"@getImplementation_526":{"entryPoint":3621,"id":526,"parameterSlots":0,"returnSlots":1},"@initialize_1339":{"entryPoint":829,"id":1339,"parameterSlots":0,"returnSlots":0},"@nextAuctionId_1365":{"entryPoint":2652,"id":1365,"parameterSlots":0,"returnSlots":0},"@placeBid_1515":{"entryPoint":1283,"id":1515,"parameterSlots":1,"returnSlots":0},"@platformFee_1369":{"entryPoint":554,"id":1369,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_339":{"entryPoint":591,"id":339,"parameterSlots":0,"returnSlots":1},"@upgradeToAndCall_359":{"entryPoint":560,"id":359,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_589":{"entryPoint":3708,"id":589,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1118":{"entryPoint":4274,"id":1118,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4865,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":6832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4931,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":4977,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256":{"entryPoint":5554,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5210,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5237,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5079,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":5758,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50_to_t_string_memory_ptr_fromStack":{"entryPoint":6742,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack":{"entryPoint":6378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack":{"entryPoint":6086,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack":{"entryPoint":5940,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack":{"entryPoint":6524,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack":{"entryPoint":6232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4495,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":5252,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":5773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6777,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6413,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6559,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6267,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4510,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4774,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4537,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4801,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6898,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5393,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6909,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5404,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5847,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4589,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5225,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5069,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":5684,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4557,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4485,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":5694,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":5724,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4850,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5421,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4725,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":5714,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6591,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5800,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4678,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4651,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4552,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4547,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4661,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50":{"entryPoint":6663,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd":{"entryPoint":6299,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9":{"entryPoint":6007,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5":{"entryPoint":5899,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb":{"entryPoint":6445,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b":{"entryPoint":6153,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4607,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6809,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5121,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:17966:13","nodeType":"YulBlock","src":"0:17966:13","statements":[{"body":{"nativeSrc":"52:32:13","nodeType":"YulBlock","src":"52:32:13","statements":[{"nativeSrc":"62:16:13","nodeType":"YulAssignment","src":"62:16:13","value":{"name":"value","nativeSrc":"73:5:13","nodeType":"YulIdentifier","src":"73:5:13"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:13","nodeType":"YulIdentifier","src":"62:7:13"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:13","nodeType":"YulTypedName","src":"34:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:13","nodeType":"YulTypedName","src":"44:7:13","type":""}],"src":"7:77:13"},{"body":{"nativeSrc":"155:53:13","nodeType":"YulBlock","src":"155:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:13","nodeType":"YulIdentifier","src":"172:3:13"},{"arguments":[{"name":"value","nativeSrc":"195:5:13","nodeType":"YulIdentifier","src":"195:5:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:13","nodeType":"YulIdentifier","src":"177:17:13"},"nativeSrc":"177:24:13","nodeType":"YulFunctionCall","src":"177:24:13"}],"functionName":{"name":"mstore","nativeSrc":"165:6:13","nodeType":"YulIdentifier","src":"165:6:13"},"nativeSrc":"165:37:13","nodeType":"YulFunctionCall","src":"165:37:13"},"nativeSrc":"165:37:13","nodeType":"YulExpressionStatement","src":"165:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:13","nodeType":"YulTypedName","src":"143:5:13","type":""},{"name":"pos","nativeSrc":"150:3:13","nodeType":"YulTypedName","src":"150:3:13","type":""}],"src":"90:118:13"},{"body":{"nativeSrc":"312:124:13","nodeType":"YulBlock","src":"312:124:13","statements":[{"nativeSrc":"322:26:13","nodeType":"YulAssignment","src":"322:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:13","nodeType":"YulIdentifier","src":"334:9:13"},{"kind":"number","nativeSrc":"345:2:13","nodeType":"YulLiteral","src":"345:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:13","nodeType":"YulIdentifier","src":"330:3:13"},"nativeSrc":"330:18:13","nodeType":"YulFunctionCall","src":"330:18:13"},"variableNames":[{"name":"tail","nativeSrc":"322:4:13","nodeType":"YulIdentifier","src":"322:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:13","nodeType":"YulIdentifier","src":"402:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:13","nodeType":"YulIdentifier","src":"415:9:13"},{"kind":"number","nativeSrc":"426:1:13","nodeType":"YulLiteral","src":"426:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:13","nodeType":"YulIdentifier","src":"411:3:13"},"nativeSrc":"411:17:13","nodeType":"YulFunctionCall","src":"411:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:13","nodeType":"YulIdentifier","src":"358:43:13"},"nativeSrc":"358:71:13","nodeType":"YulFunctionCall","src":"358:71:13"},"nativeSrc":"358:71:13","nodeType":"YulExpressionStatement","src":"358:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:13","nodeType":"YulTypedName","src":"284:9:13","type":""},{"name":"value0","nativeSrc":"296:6:13","nodeType":"YulTypedName","src":"296:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:13","nodeType":"YulTypedName","src":"307:4:13","type":""}],"src":"214:222:13"},{"body":{"nativeSrc":"482:35:13","nodeType":"YulBlock","src":"482:35:13","statements":[{"nativeSrc":"492:19:13","nodeType":"YulAssignment","src":"492:19:13","value":{"arguments":[{"kind":"number","nativeSrc":"508:2:13","nodeType":"YulLiteral","src":"508:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"502:5:13","nodeType":"YulIdentifier","src":"502:5:13"},"nativeSrc":"502:9:13","nodeType":"YulFunctionCall","src":"502:9:13"},"variableNames":[{"name":"memPtr","nativeSrc":"492:6:13","nodeType":"YulIdentifier","src":"492:6:13"}]}]},"name":"allocate_unbounded","nativeSrc":"442:75:13","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"475:6:13","nodeType":"YulTypedName","src":"475:6:13","type":""}],"src":"442:75:13"},{"body":{"nativeSrc":"612:28:13","nodeType":"YulBlock","src":"612:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"629:1:13","nodeType":"YulLiteral","src":"629:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"632:1:13","nodeType":"YulLiteral","src":"632:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"622:6:13","nodeType":"YulIdentifier","src":"622:6:13"},"nativeSrc":"622:12:13","nodeType":"YulFunctionCall","src":"622:12:13"},"nativeSrc":"622:12:13","nodeType":"YulExpressionStatement","src":"622:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"523:117:13","nodeType":"YulFunctionDefinition","src":"523:117:13"},{"body":{"nativeSrc":"735:28:13","nodeType":"YulBlock","src":"735:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"752:1:13","nodeType":"YulLiteral","src":"752:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"755:1:13","nodeType":"YulLiteral","src":"755:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"745:6:13","nodeType":"YulIdentifier","src":"745:6:13"},"nativeSrc":"745:12:13","nodeType":"YulFunctionCall","src":"745:12:13"},"nativeSrc":"745:12:13","nodeType":"YulExpressionStatement","src":"745:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"646:117:13","nodeType":"YulFunctionDefinition","src":"646:117:13"},{"body":{"nativeSrc":"814:81:13","nodeType":"YulBlock","src":"814:81:13","statements":[{"nativeSrc":"824:65:13","nodeType":"YulAssignment","src":"824:65:13","value":{"arguments":[{"name":"value","nativeSrc":"839:5:13","nodeType":"YulIdentifier","src":"839:5:13"},{"kind":"number","nativeSrc":"846:42:13","nodeType":"YulLiteral","src":"846:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"835:3:13","nodeType":"YulIdentifier","src":"835:3:13"},"nativeSrc":"835:54:13","nodeType":"YulFunctionCall","src":"835:54:13"},"variableNames":[{"name":"cleaned","nativeSrc":"824:7:13","nodeType":"YulIdentifier","src":"824:7:13"}]}]},"name":"cleanup_t_uint160","nativeSrc":"769:126:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"796:5:13","nodeType":"YulTypedName","src":"796:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"806:7:13","nodeType":"YulTypedName","src":"806:7:13","type":""}],"src":"769:126:13"},{"body":{"nativeSrc":"946:51:13","nodeType":"YulBlock","src":"946:51:13","statements":[{"nativeSrc":"956:35:13","nodeType":"YulAssignment","src":"956:35:13","value":{"arguments":[{"name":"value","nativeSrc":"985:5:13","nodeType":"YulIdentifier","src":"985:5:13"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"967:17:13","nodeType":"YulIdentifier","src":"967:17:13"},"nativeSrc":"967:24:13","nodeType":"YulFunctionCall","src":"967:24:13"},"variableNames":[{"name":"cleaned","nativeSrc":"956:7:13","nodeType":"YulIdentifier","src":"956:7:13"}]}]},"name":"cleanup_t_address","nativeSrc":"901:96:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"928:5:13","nodeType":"YulTypedName","src":"928:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"938:7:13","nodeType":"YulTypedName","src":"938:7:13","type":""}],"src":"901:96:13"},{"body":{"nativeSrc":"1046:79:13","nodeType":"YulBlock","src":"1046:79:13","statements":[{"body":{"nativeSrc":"1103:16:13","nodeType":"YulBlock","src":"1103:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1112:1:13","nodeType":"YulLiteral","src":"1112:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1115:1:13","nodeType":"YulLiteral","src":"1115:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1105:6:13","nodeType":"YulIdentifier","src":"1105:6:13"},"nativeSrc":"1105:12:13","nodeType":"YulFunctionCall","src":"1105:12:13"},"nativeSrc":"1105:12:13","nodeType":"YulExpressionStatement","src":"1105:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1069:5:13","nodeType":"YulIdentifier","src":"1069:5:13"},{"arguments":[{"name":"value","nativeSrc":"1094:5:13","nodeType":"YulIdentifier","src":"1094:5:13"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1076:17:13","nodeType":"YulIdentifier","src":"1076:17:13"},"nativeSrc":"1076:24:13","nodeType":"YulFunctionCall","src":"1076:24:13"}],"functionName":{"name":"eq","nativeSrc":"1066:2:13","nodeType":"YulIdentifier","src":"1066:2:13"},"nativeSrc":"1066:35:13","nodeType":"YulFunctionCall","src":"1066:35:13"}],"functionName":{"name":"iszero","nativeSrc":"1059:6:13","nodeType":"YulIdentifier","src":"1059:6:13"},"nativeSrc":"1059:43:13","nodeType":"YulFunctionCall","src":"1059:43:13"},"nativeSrc":"1056:63:13","nodeType":"YulIf","src":"1056:63:13"}]},"name":"validator_revert_t_address","nativeSrc":"1003:122:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1039:5:13","nodeType":"YulTypedName","src":"1039:5:13","type":""}],"src":"1003:122:13"},{"body":{"nativeSrc":"1183:87:13","nodeType":"YulBlock","src":"1183:87:13","statements":[{"nativeSrc":"1193:29:13","nodeType":"YulAssignment","src":"1193:29:13","value":{"arguments":[{"name":"offset","nativeSrc":"1215:6:13","nodeType":"YulIdentifier","src":"1215:6:13"}],"functionName":{"name":"calldataload","nativeSrc":"1202:12:13","nodeType":"YulIdentifier","src":"1202:12:13"},"nativeSrc":"1202:20:13","nodeType":"YulFunctionCall","src":"1202:20:13"},"variableNames":[{"name":"value","nativeSrc":"1193:5:13","nodeType":"YulIdentifier","src":"1193:5:13"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1258:5:13","nodeType":"YulIdentifier","src":"1258:5:13"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1231:26:13","nodeType":"YulIdentifier","src":"1231:26:13"},"nativeSrc":"1231:33:13","nodeType":"YulFunctionCall","src":"1231:33:13"},"nativeSrc":"1231:33:13","nodeType":"YulExpressionStatement","src":"1231:33:13"}]},"name":"abi_decode_t_address","nativeSrc":"1131:139:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1161:6:13","nodeType":"YulTypedName","src":"1161:6:13","type":""},{"name":"end","nativeSrc":"1169:3:13","nodeType":"YulTypedName","src":"1169:3:13","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1177:5:13","nodeType":"YulTypedName","src":"1177:5:13","type":""}],"src":"1131:139:13"},{"body":{"nativeSrc":"1365:28:13","nodeType":"YulBlock","src":"1365:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1382:1:13","nodeType":"YulLiteral","src":"1382:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1385:1:13","nodeType":"YulLiteral","src":"1385:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1375:6:13","nodeType":"YulIdentifier","src":"1375:6:13"},"nativeSrc":"1375:12:13","nodeType":"YulFunctionCall","src":"1375:12:13"},"nativeSrc":"1375:12:13","nodeType":"YulExpressionStatement","src":"1375:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"1276:117:13","nodeType":"YulFunctionDefinition","src":"1276:117:13"},{"body":{"nativeSrc":"1488:28:13","nodeType":"YulBlock","src":"1488:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1505:1:13","nodeType":"YulLiteral","src":"1505:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1508:1:13","nodeType":"YulLiteral","src":"1508:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1498:6:13","nodeType":"YulIdentifier","src":"1498:6:13"},"nativeSrc":"1498:12:13","nodeType":"YulFunctionCall","src":"1498:12:13"},"nativeSrc":"1498:12:13","nodeType":"YulExpressionStatement","src":"1498:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"1399:117:13","nodeType":"YulFunctionDefinition","src":"1399:117:13"},{"body":{"nativeSrc":"1570:54:13","nodeType":"YulBlock","src":"1570:54:13","statements":[{"nativeSrc":"1580:38:13","nodeType":"YulAssignment","src":"1580:38:13","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1598:5:13","nodeType":"YulIdentifier","src":"1598:5:13"},{"kind":"number","nativeSrc":"1605:2:13","nodeType":"YulLiteral","src":"1605:2:13","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1594:3:13","nodeType":"YulIdentifier","src":"1594:3:13"},"nativeSrc":"1594:14:13","nodeType":"YulFunctionCall","src":"1594:14:13"},{"arguments":[{"kind":"number","nativeSrc":"1614:2:13","nodeType":"YulLiteral","src":"1614:2:13","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1610:3:13","nodeType":"YulIdentifier","src":"1610:3:13"},"nativeSrc":"1610:7:13","nodeType":"YulFunctionCall","src":"1610:7:13"}],"functionName":{"name":"and","nativeSrc":"1590:3:13","nodeType":"YulIdentifier","src":"1590:3:13"},"nativeSrc":"1590:28:13","nodeType":"YulFunctionCall","src":"1590:28:13"},"variableNames":[{"name":"result","nativeSrc":"1580:6:13","nodeType":"YulIdentifier","src":"1580:6:13"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1522:102:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1553:5:13","nodeType":"YulTypedName","src":"1553:5:13","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1563:6:13","nodeType":"YulTypedName","src":"1563:6:13","type":""}],"src":"1522:102:13"},{"body":{"nativeSrc":"1658:152:13","nodeType":"YulBlock","src":"1658:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1675:1:13","nodeType":"YulLiteral","src":"1675:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1678:77:13","nodeType":"YulLiteral","src":"1678:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1668:6:13","nodeType":"YulIdentifier","src":"1668:6:13"},"nativeSrc":"1668:88:13","nodeType":"YulFunctionCall","src":"1668:88:13"},"nativeSrc":"1668:88:13","nodeType":"YulExpressionStatement","src":"1668:88:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1772:1:13","nodeType":"YulLiteral","src":"1772:1:13","type":"","value":"4"},{"kind":"number","nativeSrc":"1775:4:13","nodeType":"YulLiteral","src":"1775:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1765:6:13","nodeType":"YulIdentifier","src":"1765:6:13"},"nativeSrc":"1765:15:13","nodeType":"YulFunctionCall","src":"1765:15:13"},"nativeSrc":"1765:15:13","nodeType":"YulExpressionStatement","src":"1765:15:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1796:1:13","nodeType":"YulLiteral","src":"1796:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1799:4:13","nodeType":"YulLiteral","src":"1799:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1789:6:13","nodeType":"YulIdentifier","src":"1789:6:13"},"nativeSrc":"1789:15:13","nodeType":"YulFunctionCall","src":"1789:15:13"},"nativeSrc":"1789:15:13","nodeType":"YulExpressionStatement","src":"1789:15:13"}]},"name":"panic_error_0x41","nativeSrc":"1630:180:13","nodeType":"YulFunctionDefinition","src":"1630:180:13"},{"body":{"nativeSrc":"1859:238:13","nodeType":"YulBlock","src":"1859:238:13","statements":[{"nativeSrc":"1869:58:13","nodeType":"YulVariableDeclaration","src":"1869:58:13","value":{"arguments":[{"name":"memPtr","nativeSrc":"1891:6:13","nodeType":"YulIdentifier","src":"1891:6:13"},{"arguments":[{"name":"size","nativeSrc":"1921:4:13","nodeType":"YulIdentifier","src":"1921:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1899:21:13","nodeType":"YulIdentifier","src":"1899:21:13"},"nativeSrc":"1899:27:13","nodeType":"YulFunctionCall","src":"1899:27:13"}],"functionName":{"name":"add","nativeSrc":"1887:3:13","nodeType":"YulIdentifier","src":"1887:3:13"},"nativeSrc":"1887:40:13","nodeType":"YulFunctionCall","src":"1887:40:13"},"variables":[{"name":"newFreePtr","nativeSrc":"1873:10:13","nodeType":"YulTypedName","src":"1873:10:13","type":""}]},{"body":{"nativeSrc":"2038:22:13","nodeType":"YulBlock","src":"2038:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2040:16:13","nodeType":"YulIdentifier","src":"2040:16:13"},"nativeSrc":"2040:18:13","nodeType":"YulFunctionCall","src":"2040:18:13"},"nativeSrc":"2040:18:13","nodeType":"YulExpressionStatement","src":"2040:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1981:10:13","nodeType":"YulIdentifier","src":"1981:10:13"},{"kind":"number","nativeSrc":"1993:18:13","nodeType":"YulLiteral","src":"1993:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1978:2:13","nodeType":"YulIdentifier","src":"1978:2:13"},"nativeSrc":"1978:34:13","nodeType":"YulFunctionCall","src":"1978:34:13"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2017:10:13","nodeType":"YulIdentifier","src":"2017:10:13"},{"name":"memPtr","nativeSrc":"2029:6:13","nodeType":"YulIdentifier","src":"2029:6:13"}],"functionName":{"name":"lt","nativeSrc":"2014:2:13","nodeType":"YulIdentifier","src":"2014:2:13"},"nativeSrc":"2014:22:13","nodeType":"YulFunctionCall","src":"2014:22:13"}],"functionName":{"name":"or","nativeSrc":"1975:2:13","nodeType":"YulIdentifier","src":"1975:2:13"},"nativeSrc":"1975:62:13","nodeType":"YulFunctionCall","src":"1975:62:13"},"nativeSrc":"1972:88:13","nodeType":"YulIf","src":"1972:88:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2076:2:13","nodeType":"YulLiteral","src":"2076:2:13","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2080:10:13","nodeType":"YulIdentifier","src":"2080:10:13"}],"functionName":{"name":"mstore","nativeSrc":"2069:6:13","nodeType":"YulIdentifier","src":"2069:6:13"},"nativeSrc":"2069:22:13","nodeType":"YulFunctionCall","src":"2069:22:13"},"nativeSrc":"2069:22:13","nodeType":"YulExpressionStatement","src":"2069:22:13"}]},"name":"finalize_allocation","nativeSrc":"1816:281:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1845:6:13","nodeType":"YulTypedName","src":"1845:6:13","type":""},{"name":"size","nativeSrc":"1853:4:13","nodeType":"YulTypedName","src":"1853:4:13","type":""}],"src":"1816:281:13"},{"body":{"nativeSrc":"2144:88:13","nodeType":"YulBlock","src":"2144:88:13","statements":[{"nativeSrc":"2154:30:13","nodeType":"YulAssignment","src":"2154:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"2164:18:13","nodeType":"YulIdentifier","src":"2164:18:13"},"nativeSrc":"2164:20:13","nodeType":"YulFunctionCall","src":"2164:20:13"},"variableNames":[{"name":"memPtr","nativeSrc":"2154:6:13","nodeType":"YulIdentifier","src":"2154:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2213:6:13","nodeType":"YulIdentifier","src":"2213:6:13"},{"name":"size","nativeSrc":"2221:4:13","nodeType":"YulIdentifier","src":"2221:4:13"}],"functionName":{"name":"finalize_allocation","nativeSrc":"2193:19:13","nodeType":"YulIdentifier","src":"2193:19:13"},"nativeSrc":"2193:33:13","nodeType":"YulFunctionCall","src":"2193:33:13"},"nativeSrc":"2193:33:13","nodeType":"YulExpressionStatement","src":"2193:33:13"}]},"name":"allocate_memory","nativeSrc":"2103:129:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2128:4:13","nodeType":"YulTypedName","src":"2128:4:13","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2137:6:13","nodeType":"YulTypedName","src":"2137:6:13","type":""}],"src":"2103:129:13"},{"body":{"nativeSrc":"2304:241:13","nodeType":"YulBlock","src":"2304:241:13","statements":[{"body":{"nativeSrc":"2409:22:13","nodeType":"YulBlock","src":"2409:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2411:16:13","nodeType":"YulIdentifier","src":"2411:16:13"},"nativeSrc":"2411:18:13","nodeType":"YulFunctionCall","src":"2411:18:13"},"nativeSrc":"2411:18:13","nodeType":"YulExpressionStatement","src":"2411:18:13"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2381:6:13","nodeType":"YulIdentifier","src":"2381:6:13"},{"kind":"number","nativeSrc":"2389:18:13","nodeType":"YulLiteral","src":"2389:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2378:2:13","nodeType":"YulIdentifier","src":"2378:2:13"},"nativeSrc":"2378:30:13","nodeType":"YulFunctionCall","src":"2378:30:13"},"nativeSrc":"2375:56:13","nodeType":"YulIf","src":"2375:56:13"},{"nativeSrc":"2441:37:13","nodeType":"YulAssignment","src":"2441:37:13","value":{"arguments":[{"name":"length","nativeSrc":"2471:6:13","nodeType":"YulIdentifier","src":"2471:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2449:21:13","nodeType":"YulIdentifier","src":"2449:21:13"},"nativeSrc":"2449:29:13","nodeType":"YulFunctionCall","src":"2449:29:13"},"variableNames":[{"name":"size","nativeSrc":"2441:4:13","nodeType":"YulIdentifier","src":"2441:4:13"}]},{"nativeSrc":"2515:23:13","nodeType":"YulAssignment","src":"2515:23:13","value":{"arguments":[{"name":"size","nativeSrc":"2527:4:13","nodeType":"YulIdentifier","src":"2527:4:13"},{"kind":"number","nativeSrc":"2533:4:13","nodeType":"YulLiteral","src":"2533:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2523:3:13","nodeType":"YulIdentifier","src":"2523:3:13"},"nativeSrc":"2523:15:13","nodeType":"YulFunctionCall","src":"2523:15:13"},"variableNames":[{"name":"size","nativeSrc":"2515:4:13","nodeType":"YulIdentifier","src":"2515:4:13"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"2238:307:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"2288:6:13","nodeType":"YulTypedName","src":"2288:6:13","type":""}],"returnVariables":[{"name":"size","nativeSrc":"2299:4:13","nodeType":"YulTypedName","src":"2299:4:13","type":""}],"src":"2238:307:13"},{"body":{"nativeSrc":"2615:84:13","nodeType":"YulBlock","src":"2615:84:13","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2639:3:13","nodeType":"YulIdentifier","src":"2639:3:13"},{"name":"src","nativeSrc":"2644:3:13","nodeType":"YulIdentifier","src":"2644:3:13"},{"name":"length","nativeSrc":"2649:6:13","nodeType":"YulIdentifier","src":"2649:6:13"}],"functionName":{"name":"calldatacopy","nativeSrc":"2626:12:13","nodeType":"YulIdentifier","src":"2626:12:13"},"nativeSrc":"2626:30:13","nodeType":"YulFunctionCall","src":"2626:30:13"},"nativeSrc":"2626:30:13","nodeType":"YulExpressionStatement","src":"2626:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2676:3:13","nodeType":"YulIdentifier","src":"2676:3:13"},{"name":"length","nativeSrc":"2681:6:13","nodeType":"YulIdentifier","src":"2681:6:13"}],"functionName":{"name":"add","nativeSrc":"2672:3:13","nodeType":"YulIdentifier","src":"2672:3:13"},"nativeSrc":"2672:16:13","nodeType":"YulFunctionCall","src":"2672:16:13"},{"kind":"number","nativeSrc":"2690:1:13","nodeType":"YulLiteral","src":"2690:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2665:6:13","nodeType":"YulIdentifier","src":"2665:6:13"},"nativeSrc":"2665:27:13","nodeType":"YulFunctionCall","src":"2665:27:13"},"nativeSrc":"2665:27:13","nodeType":"YulExpressionStatement","src":"2665:27:13"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"2551:148:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2597:3:13","nodeType":"YulTypedName","src":"2597:3:13","type":""},{"name":"dst","nativeSrc":"2602:3:13","nodeType":"YulTypedName","src":"2602:3:13","type":""},{"name":"length","nativeSrc":"2607:6:13","nodeType":"YulTypedName","src":"2607:6:13","type":""}],"src":"2551:148:13"},{"body":{"nativeSrc":"2788:340:13","nodeType":"YulBlock","src":"2788:340:13","statements":[{"nativeSrc":"2798:74:13","nodeType":"YulAssignment","src":"2798:74:13","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2864:6:13","nodeType":"YulIdentifier","src":"2864:6:13"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"2823:40:13","nodeType":"YulIdentifier","src":"2823:40:13"},"nativeSrc":"2823:48:13","nodeType":"YulFunctionCall","src":"2823:48:13"}],"functionName":{"name":"allocate_memory","nativeSrc":"2807:15:13","nodeType":"YulIdentifier","src":"2807:15:13"},"nativeSrc":"2807:65:13","nodeType":"YulFunctionCall","src":"2807:65:13"},"variableNames":[{"name":"array","nativeSrc":"2798:5:13","nodeType":"YulIdentifier","src":"2798:5:13"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2888:5:13","nodeType":"YulIdentifier","src":"2888:5:13"},{"name":"length","nativeSrc":"2895:6:13","nodeType":"YulIdentifier","src":"2895:6:13"}],"functionName":{"name":"mstore","nativeSrc":"2881:6:13","nodeType":"YulIdentifier","src":"2881:6:13"},"nativeSrc":"2881:21:13","nodeType":"YulFunctionCall","src":"2881:21:13"},"nativeSrc":"2881:21:13","nodeType":"YulExpressionStatement","src":"2881:21:13"},{"nativeSrc":"2911:27:13","nodeType":"YulVariableDeclaration","src":"2911:27:13","value":{"arguments":[{"name":"array","nativeSrc":"2926:5:13","nodeType":"YulIdentifier","src":"2926:5:13"},{"kind":"number","nativeSrc":"2933:4:13","nodeType":"YulLiteral","src":"2933:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2922:3:13","nodeType":"YulIdentifier","src":"2922:3:13"},"nativeSrc":"2922:16:13","nodeType":"YulFunctionCall","src":"2922:16:13"},"variables":[{"name":"dst","nativeSrc":"2915:3:13","nodeType":"YulTypedName","src":"2915:3:13","type":""}]},{"body":{"nativeSrc":"2976:83:13","nodeType":"YulBlock","src":"2976:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2978:77:13","nodeType":"YulIdentifier","src":"2978:77:13"},"nativeSrc":"2978:79:13","nodeType":"YulFunctionCall","src":"2978:79:13"},"nativeSrc":"2978:79:13","nodeType":"YulExpressionStatement","src":"2978:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2957:3:13","nodeType":"YulIdentifier","src":"2957:3:13"},{"name":"length","nativeSrc":"2962:6:13","nodeType":"YulIdentifier","src":"2962:6:13"}],"functionName":{"name":"add","nativeSrc":"2953:3:13","nodeType":"YulIdentifier","src":"2953:3:13"},"nativeSrc":"2953:16:13","nodeType":"YulFunctionCall","src":"2953:16:13"},{"name":"end","nativeSrc":"2971:3:13","nodeType":"YulIdentifier","src":"2971:3:13"}],"functionName":{"name":"gt","nativeSrc":"2950:2:13","nodeType":"YulIdentifier","src":"2950:2:13"},"nativeSrc":"2950:25:13","nodeType":"YulFunctionCall","src":"2950:25:13"},"nativeSrc":"2947:112:13","nodeType":"YulIf","src":"2947:112:13"},{"expression":{"arguments":[{"name":"src","nativeSrc":"3105:3:13","nodeType":"YulIdentifier","src":"3105:3:13"},{"name":"dst","nativeSrc":"3110:3:13","nodeType":"YulIdentifier","src":"3110:3:13"},{"name":"length","nativeSrc":"3115:6:13","nodeType":"YulIdentifier","src":"3115:6:13"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"3068:36:13","nodeType":"YulIdentifier","src":"3068:36:13"},"nativeSrc":"3068:54:13","nodeType":"YulFunctionCall","src":"3068:54:13"},"nativeSrc":"3068:54:13","nodeType":"YulExpressionStatement","src":"3068:54:13"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"2705:423:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2761:3:13","nodeType":"YulTypedName","src":"2761:3:13","type":""},{"name":"length","nativeSrc":"2766:6:13","nodeType":"YulTypedName","src":"2766:6:13","type":""},{"name":"end","nativeSrc":"2774:3:13","nodeType":"YulTypedName","src":"2774:3:13","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2782:5:13","nodeType":"YulTypedName","src":"2782:5:13","type":""}],"src":"2705:423:13"},{"body":{"nativeSrc":"3208:277:13","nodeType":"YulBlock","src":"3208:277:13","statements":[{"body":{"nativeSrc":"3257:83:13","nodeType":"YulBlock","src":"3257:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3259:77:13","nodeType":"YulIdentifier","src":"3259:77:13"},"nativeSrc":"3259:79:13","nodeType":"YulFunctionCall","src":"3259:79:13"},"nativeSrc":"3259:79:13","nodeType":"YulExpressionStatement","src":"3259:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3236:6:13","nodeType":"YulIdentifier","src":"3236:6:13"},{"kind":"number","nativeSrc":"3244:4:13","nodeType":"YulLiteral","src":"3244:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3232:3:13","nodeType":"YulIdentifier","src":"3232:3:13"},"nativeSrc":"3232:17:13","nodeType":"YulFunctionCall","src":"3232:17:13"},{"name":"end","nativeSrc":"3251:3:13","nodeType":"YulIdentifier","src":"3251:3:13"}],"functionName":{"name":"slt","nativeSrc":"3228:3:13","nodeType":"YulIdentifier","src":"3228:3:13"},"nativeSrc":"3228:27:13","nodeType":"YulFunctionCall","src":"3228:27:13"}],"functionName":{"name":"iszero","nativeSrc":"3221:6:13","nodeType":"YulIdentifier","src":"3221:6:13"},"nativeSrc":"3221:35:13","nodeType":"YulFunctionCall","src":"3221:35:13"},"nativeSrc":"3218:122:13","nodeType":"YulIf","src":"3218:122:13"},{"nativeSrc":"3349:34:13","nodeType":"YulVariableDeclaration","src":"3349:34:13","value":{"arguments":[{"name":"offset","nativeSrc":"3376:6:13","nodeType":"YulIdentifier","src":"3376:6:13"}],"functionName":{"name":"calldataload","nativeSrc":"3363:12:13","nodeType":"YulIdentifier","src":"3363:12:13"},"nativeSrc":"3363:20:13","nodeType":"YulFunctionCall","src":"3363:20:13"},"variables":[{"name":"length","nativeSrc":"3353:6:13","nodeType":"YulTypedName","src":"3353:6:13","type":""}]},{"nativeSrc":"3392:87:13","nodeType":"YulAssignment","src":"3392:87:13","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3452:6:13","nodeType":"YulIdentifier","src":"3452:6:13"},{"kind":"number","nativeSrc":"3460:4:13","nodeType":"YulLiteral","src":"3460:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:13","nodeType":"YulIdentifier","src":"3448:3:13"},"nativeSrc":"3448:17:13","nodeType":"YulFunctionCall","src":"3448:17:13"},{"name":"length","nativeSrc":"3467:6:13","nodeType":"YulIdentifier","src":"3467:6:13"},{"name":"end","nativeSrc":"3475:3:13","nodeType":"YulIdentifier","src":"3475:3:13"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"3401:46:13","nodeType":"YulIdentifier","src":"3401:46:13"},"nativeSrc":"3401:78:13","nodeType":"YulFunctionCall","src":"3401:78:13"},"variableNames":[{"name":"array","nativeSrc":"3392:5:13","nodeType":"YulIdentifier","src":"3392:5:13"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"3147:338:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3186:6:13","nodeType":"YulTypedName","src":"3186:6:13","type":""},{"name":"end","nativeSrc":"3194:3:13","nodeType":"YulTypedName","src":"3194:3:13","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3202:5:13","nodeType":"YulTypedName","src":"3202:5:13","type":""}],"src":"3147:338:13"},{"body":{"nativeSrc":"3583:560:13","nodeType":"YulBlock","src":"3583:560:13","statements":[{"body":{"nativeSrc":"3629:83:13","nodeType":"YulBlock","src":"3629:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3631:77:13","nodeType":"YulIdentifier","src":"3631:77:13"},"nativeSrc":"3631:79:13","nodeType":"YulFunctionCall","src":"3631:79:13"},"nativeSrc":"3631:79:13","nodeType":"YulExpressionStatement","src":"3631:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3604:7:13","nodeType":"YulIdentifier","src":"3604:7:13"},{"name":"headStart","nativeSrc":"3613:9:13","nodeType":"YulIdentifier","src":"3613:9:13"}],"functionName":{"name":"sub","nativeSrc":"3600:3:13","nodeType":"YulIdentifier","src":"3600:3:13"},"nativeSrc":"3600:23:13","nodeType":"YulFunctionCall","src":"3600:23:13"},{"kind":"number","nativeSrc":"3625:2:13","nodeType":"YulLiteral","src":"3625:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3596:3:13","nodeType":"YulIdentifier","src":"3596:3:13"},"nativeSrc":"3596:32:13","nodeType":"YulFunctionCall","src":"3596:32:13"},"nativeSrc":"3593:119:13","nodeType":"YulIf","src":"3593:119:13"},{"nativeSrc":"3722:117:13","nodeType":"YulBlock","src":"3722:117:13","statements":[{"nativeSrc":"3737:15:13","nodeType":"YulVariableDeclaration","src":"3737:15:13","value":{"kind":"number","nativeSrc":"3751:1:13","nodeType":"YulLiteral","src":"3751:1:13","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3741:6:13","nodeType":"YulTypedName","src":"3741:6:13","type":""}]},{"nativeSrc":"3766:63:13","nodeType":"YulAssignment","src":"3766:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3801:9:13","nodeType":"YulIdentifier","src":"3801:9:13"},{"name":"offset","nativeSrc":"3812:6:13","nodeType":"YulIdentifier","src":"3812:6:13"}],"functionName":{"name":"add","nativeSrc":"3797:3:13","nodeType":"YulIdentifier","src":"3797:3:13"},"nativeSrc":"3797:22:13","nodeType":"YulFunctionCall","src":"3797:22:13"},{"name":"dataEnd","nativeSrc":"3821:7:13","nodeType":"YulIdentifier","src":"3821:7:13"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3776:20:13","nodeType":"YulIdentifier","src":"3776:20:13"},"nativeSrc":"3776:53:13","nodeType":"YulFunctionCall","src":"3776:53:13"},"variableNames":[{"name":"value0","nativeSrc":"3766:6:13","nodeType":"YulIdentifier","src":"3766:6:13"}]}]},{"nativeSrc":"3849:287:13","nodeType":"YulBlock","src":"3849:287:13","statements":[{"nativeSrc":"3864:46:13","nodeType":"YulVariableDeclaration","src":"3864:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3895:9:13","nodeType":"YulIdentifier","src":"3895:9:13"},{"kind":"number","nativeSrc":"3906:2:13","nodeType":"YulLiteral","src":"3906:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3891:3:13","nodeType":"YulIdentifier","src":"3891:3:13"},"nativeSrc":"3891:18:13","nodeType":"YulFunctionCall","src":"3891:18:13"}],"functionName":{"name":"calldataload","nativeSrc":"3878:12:13","nodeType":"YulIdentifier","src":"3878:12:13"},"nativeSrc":"3878:32:13","nodeType":"YulFunctionCall","src":"3878:32:13"},"variables":[{"name":"offset","nativeSrc":"3868:6:13","nodeType":"YulTypedName","src":"3868:6:13","type":""}]},{"body":{"nativeSrc":"3957:83:13","nodeType":"YulBlock","src":"3957:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3959:77:13","nodeType":"YulIdentifier","src":"3959:77:13"},"nativeSrc":"3959:79:13","nodeType":"YulFunctionCall","src":"3959:79:13"},"nativeSrc":"3959:79:13","nodeType":"YulExpressionStatement","src":"3959:79:13"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3929:6:13","nodeType":"YulIdentifier","src":"3929:6:13"},{"kind":"number","nativeSrc":"3937:18:13","nodeType":"YulLiteral","src":"3937:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3926:2:13","nodeType":"YulIdentifier","src":"3926:2:13"},"nativeSrc":"3926:30:13","nodeType":"YulFunctionCall","src":"3926:30:13"},"nativeSrc":"3923:117:13","nodeType":"YulIf","src":"3923:117:13"},{"nativeSrc":"4054:72:13","nodeType":"YulAssignment","src":"4054:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4098:9:13","nodeType":"YulIdentifier","src":"4098:9:13"},{"name":"offset","nativeSrc":"4109:6:13","nodeType":"YulIdentifier","src":"4109:6:13"}],"functionName":{"name":"add","nativeSrc":"4094:3:13","nodeType":"YulIdentifier","src":"4094:3:13"},"nativeSrc":"4094:22:13","nodeType":"YulFunctionCall","src":"4094:22:13"},{"name":"dataEnd","nativeSrc":"4118:7:13","nodeType":"YulIdentifier","src":"4118:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"4064:29:13","nodeType":"YulIdentifier","src":"4064:29:13"},"nativeSrc":"4064:62:13","nodeType":"YulFunctionCall","src":"4064:62:13"},"variableNames":[{"name":"value1","nativeSrc":"4054:6:13","nodeType":"YulIdentifier","src":"4054:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3491:652:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3545:9:13","nodeType":"YulTypedName","src":"3545:9:13","type":""},{"name":"dataEnd","nativeSrc":"3556:7:13","nodeType":"YulTypedName","src":"3556:7:13","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3568:6:13","nodeType":"YulTypedName","src":"3568:6:13","type":""},{"name":"value1","nativeSrc":"3576:6:13","nodeType":"YulTypedName","src":"3576:6:13","type":""}],"src":"3491:652:13"},{"body":{"nativeSrc":"4194:32:13","nodeType":"YulBlock","src":"4194:32:13","statements":[{"nativeSrc":"4204:16:13","nodeType":"YulAssignment","src":"4204:16:13","value":{"name":"value","nativeSrc":"4215:5:13","nodeType":"YulIdentifier","src":"4215:5:13"},"variableNames":[{"name":"cleaned","nativeSrc":"4204:7:13","nodeType":"YulIdentifier","src":"4204:7:13"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4149:77:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4176:5:13","nodeType":"YulTypedName","src":"4176:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4186:7:13","nodeType":"YulTypedName","src":"4186:7:13","type":""}],"src":"4149:77:13"},{"body":{"nativeSrc":"4297:53:13","nodeType":"YulBlock","src":"4297:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4314:3:13","nodeType":"YulIdentifier","src":"4314:3:13"},{"arguments":[{"name":"value","nativeSrc":"4337:5:13","nodeType":"YulIdentifier","src":"4337:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4319:17:13","nodeType":"YulIdentifier","src":"4319:17:13"},"nativeSrc":"4319:24:13","nodeType":"YulFunctionCall","src":"4319:24:13"}],"functionName":{"name":"mstore","nativeSrc":"4307:6:13","nodeType":"YulIdentifier","src":"4307:6:13"},"nativeSrc":"4307:37:13","nodeType":"YulFunctionCall","src":"4307:37:13"},"nativeSrc":"4307:37:13","nodeType":"YulExpressionStatement","src":"4307:37:13"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4232:118:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4285:5:13","nodeType":"YulTypedName","src":"4285:5:13","type":""},{"name":"pos","nativeSrc":"4292:3:13","nodeType":"YulTypedName","src":"4292:3:13","type":""}],"src":"4232:118:13"},{"body":{"nativeSrc":"4454:124:13","nodeType":"YulBlock","src":"4454:124:13","statements":[{"nativeSrc":"4464:26:13","nodeType":"YulAssignment","src":"4464:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"4476:9:13","nodeType":"YulIdentifier","src":"4476:9:13"},{"kind":"number","nativeSrc":"4487:2:13","nodeType":"YulLiteral","src":"4487:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4472:3:13","nodeType":"YulIdentifier","src":"4472:3:13"},"nativeSrc":"4472:18:13","nodeType":"YulFunctionCall","src":"4472:18:13"},"variableNames":[{"name":"tail","nativeSrc":"4464:4:13","nodeType":"YulIdentifier","src":"4464:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4544:6:13","nodeType":"YulIdentifier","src":"4544:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"4557:9:13","nodeType":"YulIdentifier","src":"4557:9:13"},{"kind":"number","nativeSrc":"4568:1:13","nodeType":"YulLiteral","src":"4568:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4553:3:13","nodeType":"YulIdentifier","src":"4553:3:13"},"nativeSrc":"4553:17:13","nodeType":"YulFunctionCall","src":"4553:17:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4500:43:13","nodeType":"YulIdentifier","src":"4500:43:13"},"nativeSrc":"4500:71:13","nodeType":"YulFunctionCall","src":"4500:71:13"},"nativeSrc":"4500:71:13","nodeType":"YulExpressionStatement","src":"4500:71:13"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4356:222:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4426:9:13","nodeType":"YulTypedName","src":"4426:9:13","type":""},{"name":"value0","nativeSrc":"4438:6:13","nodeType":"YulTypedName","src":"4438:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4449:4:13","nodeType":"YulTypedName","src":"4449:4:13","type":""}],"src":"4356:222:13"},{"body":{"nativeSrc":"4627:79:13","nodeType":"YulBlock","src":"4627:79:13","statements":[{"body":{"nativeSrc":"4684:16:13","nodeType":"YulBlock","src":"4684:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4693:1:13","nodeType":"YulLiteral","src":"4693:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"4696:1:13","nodeType":"YulLiteral","src":"4696:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4686:6:13","nodeType":"YulIdentifier","src":"4686:6:13"},"nativeSrc":"4686:12:13","nodeType":"YulFunctionCall","src":"4686:12:13"},"nativeSrc":"4686:12:13","nodeType":"YulExpressionStatement","src":"4686:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4650:5:13","nodeType":"YulIdentifier","src":"4650:5:13"},{"arguments":[{"name":"value","nativeSrc":"4675:5:13","nodeType":"YulIdentifier","src":"4675:5:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4657:17:13","nodeType":"YulIdentifier","src":"4657:17:13"},"nativeSrc":"4657:24:13","nodeType":"YulFunctionCall","src":"4657:24:13"}],"functionName":{"name":"eq","nativeSrc":"4647:2:13","nodeType":"YulIdentifier","src":"4647:2:13"},"nativeSrc":"4647:35:13","nodeType":"YulFunctionCall","src":"4647:35:13"}],"functionName":{"name":"iszero","nativeSrc":"4640:6:13","nodeType":"YulIdentifier","src":"4640:6:13"},"nativeSrc":"4640:43:13","nodeType":"YulFunctionCall","src":"4640:43:13"},"nativeSrc":"4637:63:13","nodeType":"YulIf","src":"4637:63:13"}]},"name":"validator_revert_t_uint256","nativeSrc":"4584:122:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4620:5:13","nodeType":"YulTypedName","src":"4620:5:13","type":""}],"src":"4584:122:13"},{"body":{"nativeSrc":"4764:87:13","nodeType":"YulBlock","src":"4764:87:13","statements":[{"nativeSrc":"4774:29:13","nodeType":"YulAssignment","src":"4774:29:13","value":{"arguments":[{"name":"offset","nativeSrc":"4796:6:13","nodeType":"YulIdentifier","src":"4796:6:13"}],"functionName":{"name":"calldataload","nativeSrc":"4783:12:13","nodeType":"YulIdentifier","src":"4783:12:13"},"nativeSrc":"4783:20:13","nodeType":"YulFunctionCall","src":"4783:20:13"},"variableNames":[{"name":"value","nativeSrc":"4774:5:13","nodeType":"YulIdentifier","src":"4774:5:13"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4839:5:13","nodeType":"YulIdentifier","src":"4839:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"4812:26:13","nodeType":"YulIdentifier","src":"4812:26:13"},"nativeSrc":"4812:33:13","nodeType":"YulFunctionCall","src":"4812:33:13"},"nativeSrc":"4812:33:13","nodeType":"YulExpressionStatement","src":"4812:33:13"}]},"name":"abi_decode_t_uint256","nativeSrc":"4712:139:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4742:6:13","nodeType":"YulTypedName","src":"4742:6:13","type":""},{"name":"end","nativeSrc":"4750:3:13","nodeType":"YulTypedName","src":"4750:3:13","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4758:5:13","nodeType":"YulTypedName","src":"4758:5:13","type":""}],"src":"4712:139:13"},{"body":{"nativeSrc":"4923:263:13","nodeType":"YulBlock","src":"4923:263:13","statements":[{"body":{"nativeSrc":"4969:83:13","nodeType":"YulBlock","src":"4969:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4971:77:13","nodeType":"YulIdentifier","src":"4971:77:13"},"nativeSrc":"4971:79:13","nodeType":"YulFunctionCall","src":"4971:79:13"},"nativeSrc":"4971:79:13","nodeType":"YulExpressionStatement","src":"4971:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4944:7:13","nodeType":"YulIdentifier","src":"4944:7:13"},{"name":"headStart","nativeSrc":"4953:9:13","nodeType":"YulIdentifier","src":"4953:9:13"}],"functionName":{"name":"sub","nativeSrc":"4940:3:13","nodeType":"YulIdentifier","src":"4940:3:13"},"nativeSrc":"4940:23:13","nodeType":"YulFunctionCall","src":"4940:23:13"},{"kind":"number","nativeSrc":"4965:2:13","nodeType":"YulLiteral","src":"4965:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4936:3:13","nodeType":"YulIdentifier","src":"4936:3:13"},"nativeSrc":"4936:32:13","nodeType":"YulFunctionCall","src":"4936:32:13"},"nativeSrc":"4933:119:13","nodeType":"YulIf","src":"4933:119:13"},{"nativeSrc":"5062:117:13","nodeType":"YulBlock","src":"5062:117:13","statements":[{"nativeSrc":"5077:15:13","nodeType":"YulVariableDeclaration","src":"5077:15:13","value":{"kind":"number","nativeSrc":"5091:1:13","nodeType":"YulLiteral","src":"5091:1:13","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5081:6:13","nodeType":"YulTypedName","src":"5081:6:13","type":""}]},{"nativeSrc":"5106:63:13","nodeType":"YulAssignment","src":"5106:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5141:9:13","nodeType":"YulIdentifier","src":"5141:9:13"},{"name":"offset","nativeSrc":"5152:6:13","nodeType":"YulIdentifier","src":"5152:6:13"}],"functionName":{"name":"add","nativeSrc":"5137:3:13","nodeType":"YulIdentifier","src":"5137:3:13"},"nativeSrc":"5137:22:13","nodeType":"YulFunctionCall","src":"5137:22:13"},{"name":"dataEnd","nativeSrc":"5161:7:13","nodeType":"YulIdentifier","src":"5161:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5116:20:13","nodeType":"YulIdentifier","src":"5116:20:13"},"nativeSrc":"5116:53:13","nodeType":"YulFunctionCall","src":"5116:53:13"},"variableNames":[{"name":"value0","nativeSrc":"5106:6:13","nodeType":"YulIdentifier","src":"5106:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4857:329:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4893:9:13","nodeType":"YulTypedName","src":"4893:9:13","type":""},{"name":"dataEnd","nativeSrc":"4904:7:13","nodeType":"YulTypedName","src":"4904:7:13","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4916:6:13","nodeType":"YulTypedName","src":"4916:6:13","type":""}],"src":"4857:329:13"},{"body":{"nativeSrc":"5257:53:13","nodeType":"YulBlock","src":"5257:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5274:3:13","nodeType":"YulIdentifier","src":"5274:3:13"},{"arguments":[{"name":"value","nativeSrc":"5297:5:13","nodeType":"YulIdentifier","src":"5297:5:13"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5279:17:13","nodeType":"YulIdentifier","src":"5279:17:13"},"nativeSrc":"5279:24:13","nodeType":"YulFunctionCall","src":"5279:24:13"}],"functionName":{"name":"mstore","nativeSrc":"5267:6:13","nodeType":"YulIdentifier","src":"5267:6:13"},"nativeSrc":"5267:37:13","nodeType":"YulFunctionCall","src":"5267:37:13"},"nativeSrc":"5267:37:13","nodeType":"YulExpressionStatement","src":"5267:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5192:118:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5245:5:13","nodeType":"YulTypedName","src":"5245:5:13","type":""},{"name":"pos","nativeSrc":"5252:3:13","nodeType":"YulTypedName","src":"5252:3:13","type":""}],"src":"5192:118:13"},{"body":{"nativeSrc":"5358:48:13","nodeType":"YulBlock","src":"5358:48:13","statements":[{"nativeSrc":"5368:32:13","nodeType":"YulAssignment","src":"5368:32:13","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5393:5:13","nodeType":"YulIdentifier","src":"5393:5:13"}],"functionName":{"name":"iszero","nativeSrc":"5386:6:13","nodeType":"YulIdentifier","src":"5386:6:13"},"nativeSrc":"5386:13:13","nodeType":"YulFunctionCall","src":"5386:13:13"}],"functionName":{"name":"iszero","nativeSrc":"5379:6:13","nodeType":"YulIdentifier","src":"5379:6:13"},"nativeSrc":"5379:21:13","nodeType":"YulFunctionCall","src":"5379:21:13"},"variableNames":[{"name":"cleaned","nativeSrc":"5368:7:13","nodeType":"YulIdentifier","src":"5368:7:13"}]}]},"name":"cleanup_t_bool","nativeSrc":"5316:90:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5340:5:13","nodeType":"YulTypedName","src":"5340:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5350:7:13","nodeType":"YulTypedName","src":"5350:7:13","type":""}],"src":"5316:90:13"},{"body":{"nativeSrc":"5471:50:13","nodeType":"YulBlock","src":"5471:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5488:3:13","nodeType":"YulIdentifier","src":"5488:3:13"},{"arguments":[{"name":"value","nativeSrc":"5508:5:13","nodeType":"YulIdentifier","src":"5508:5:13"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"5493:14:13","nodeType":"YulIdentifier","src":"5493:14:13"},"nativeSrc":"5493:21:13","nodeType":"YulFunctionCall","src":"5493:21:13"}],"functionName":{"name":"mstore","nativeSrc":"5481:6:13","nodeType":"YulIdentifier","src":"5481:6:13"},"nativeSrc":"5481:34:13","nodeType":"YulFunctionCall","src":"5481:34:13"},"nativeSrc":"5481:34:13","nodeType":"YulExpressionStatement","src":"5481:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"5412:109:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5459:5:13","nodeType":"YulTypedName","src":"5459:5:13","type":""},{"name":"pos","nativeSrc":"5466:3:13","nodeType":"YulTypedName","src":"5466:3:13","type":""}],"src":"5412:109:13"},{"body":{"nativeSrc":"5843:780:13","nodeType":"YulBlock","src":"5843:780:13","statements":[{"nativeSrc":"5853:27:13","nodeType":"YulAssignment","src":"5853:27:13","value":{"arguments":[{"name":"headStart","nativeSrc":"5865:9:13","nodeType":"YulIdentifier","src":"5865:9:13"},{"kind":"number","nativeSrc":"5876:3:13","nodeType":"YulLiteral","src":"5876:3:13","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"5861:3:13","nodeType":"YulIdentifier","src":"5861:3:13"},"nativeSrc":"5861:19:13","nodeType":"YulFunctionCall","src":"5861:19:13"},"variableNames":[{"name":"tail","nativeSrc":"5853:4:13","nodeType":"YulIdentifier","src":"5853:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5934:6:13","nodeType":"YulIdentifier","src":"5934:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"5947:9:13","nodeType":"YulIdentifier","src":"5947:9:13"},{"kind":"number","nativeSrc":"5958:1:13","nodeType":"YulLiteral","src":"5958:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5943:3:13","nodeType":"YulIdentifier","src":"5943:3:13"},"nativeSrc":"5943:17:13","nodeType":"YulFunctionCall","src":"5943:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5890:43:13","nodeType":"YulIdentifier","src":"5890:43:13"},"nativeSrc":"5890:71:13","nodeType":"YulFunctionCall","src":"5890:71:13"},"nativeSrc":"5890:71:13","nodeType":"YulExpressionStatement","src":"5890:71:13"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6015:6:13","nodeType":"YulIdentifier","src":"6015:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6028:9:13","nodeType":"YulIdentifier","src":"6028:9:13"},{"kind":"number","nativeSrc":"6039:2:13","nodeType":"YulLiteral","src":"6039:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6024:3:13","nodeType":"YulIdentifier","src":"6024:3:13"},"nativeSrc":"6024:18:13","nodeType":"YulFunctionCall","src":"6024:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5971:43:13","nodeType":"YulIdentifier","src":"5971:43:13"},"nativeSrc":"5971:72:13","nodeType":"YulFunctionCall","src":"5971:72:13"},"nativeSrc":"5971:72:13","nodeType":"YulExpressionStatement","src":"5971:72:13"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6097:6:13","nodeType":"YulIdentifier","src":"6097:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6110:9:13","nodeType":"YulIdentifier","src":"6110:9:13"},{"kind":"number","nativeSrc":"6121:2:13","nodeType":"YulLiteral","src":"6121:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6106:3:13","nodeType":"YulIdentifier","src":"6106:3:13"},"nativeSrc":"6106:18:13","nodeType":"YulFunctionCall","src":"6106:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6053:43:13","nodeType":"YulIdentifier","src":"6053:43:13"},"nativeSrc":"6053:72:13","nodeType":"YulFunctionCall","src":"6053:72:13"},"nativeSrc":"6053:72:13","nodeType":"YulExpressionStatement","src":"6053:72:13"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"6179:6:13","nodeType":"YulIdentifier","src":"6179:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6192:9:13","nodeType":"YulIdentifier","src":"6192:9:13"},{"kind":"number","nativeSrc":"6203:2:13","nodeType":"YulLiteral","src":"6203:2:13","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6188:3:13","nodeType":"YulIdentifier","src":"6188:3:13"},"nativeSrc":"6188:18:13","nodeType":"YulFunctionCall","src":"6188:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6135:43:13","nodeType":"YulIdentifier","src":"6135:43:13"},"nativeSrc":"6135:72:13","nodeType":"YulFunctionCall","src":"6135:72:13"},"nativeSrc":"6135:72:13","nodeType":"YulExpressionStatement","src":"6135:72:13"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"6255:6:13","nodeType":"YulIdentifier","src":"6255:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6268:9:13","nodeType":"YulIdentifier","src":"6268:9:13"},{"kind":"number","nativeSrc":"6279:3:13","nodeType":"YulLiteral","src":"6279:3:13","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6264:3:13","nodeType":"YulIdentifier","src":"6264:3:13"},"nativeSrc":"6264:19:13","nodeType":"YulFunctionCall","src":"6264:19:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"6217:37:13","nodeType":"YulIdentifier","src":"6217:37:13"},"nativeSrc":"6217:67:13","nodeType":"YulFunctionCall","src":"6217:67:13"},"nativeSrc":"6217:67:13","nodeType":"YulExpressionStatement","src":"6217:67:13"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"6338:6:13","nodeType":"YulIdentifier","src":"6338:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6351:9:13","nodeType":"YulIdentifier","src":"6351:9:13"},{"kind":"number","nativeSrc":"6362:3:13","nodeType":"YulLiteral","src":"6362:3:13","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6347:3:13","nodeType":"YulIdentifier","src":"6347:3:13"},"nativeSrc":"6347:19:13","nodeType":"YulFunctionCall","src":"6347:19:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6294:43:13","nodeType":"YulIdentifier","src":"6294:43:13"},"nativeSrc":"6294:73:13","nodeType":"YulFunctionCall","src":"6294:73:13"},"nativeSrc":"6294:73:13","nodeType":"YulExpressionStatement","src":"6294:73:13"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"6421:6:13","nodeType":"YulIdentifier","src":"6421:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6434:9:13","nodeType":"YulIdentifier","src":"6434:9:13"},{"kind":"number","nativeSrc":"6445:3:13","nodeType":"YulLiteral","src":"6445:3:13","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6430:3:13","nodeType":"YulIdentifier","src":"6430:3:13"},"nativeSrc":"6430:19:13","nodeType":"YulFunctionCall","src":"6430:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6377:43:13","nodeType":"YulIdentifier","src":"6377:43:13"},"nativeSrc":"6377:73:13","nodeType":"YulFunctionCall","src":"6377:73:13"},"nativeSrc":"6377:73:13","nodeType":"YulExpressionStatement","src":"6377:73:13"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"6504:6:13","nodeType":"YulIdentifier","src":"6504:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6517:9:13","nodeType":"YulIdentifier","src":"6517:9:13"},{"kind":"number","nativeSrc":"6528:3:13","nodeType":"YulLiteral","src":"6528:3:13","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"6513:3:13","nodeType":"YulIdentifier","src":"6513:3:13"},"nativeSrc":"6513:19:13","nodeType":"YulFunctionCall","src":"6513:19:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6460:43:13","nodeType":"YulIdentifier","src":"6460:43:13"},"nativeSrc":"6460:73:13","nodeType":"YulFunctionCall","src":"6460:73:13"},"nativeSrc":"6460:73:13","nodeType":"YulExpressionStatement","src":"6460:73:13"},{"expression":{"arguments":[{"name":"value8","nativeSrc":"6587:6:13","nodeType":"YulIdentifier","src":"6587:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6600:9:13","nodeType":"YulIdentifier","src":"6600:9:13"},{"kind":"number","nativeSrc":"6611:3:13","nodeType":"YulLiteral","src":"6611:3:13","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"6596:3:13","nodeType":"YulIdentifier","src":"6596:3:13"},"nativeSrc":"6596:19:13","nodeType":"YulFunctionCall","src":"6596:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6543:43:13","nodeType":"YulIdentifier","src":"6543:43:13"},"nativeSrc":"6543:73:13","nodeType":"YulFunctionCall","src":"6543:73:13"},"nativeSrc":"6543:73:13","nodeType":"YulExpressionStatement","src":"6543:73:13"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"5527:1096:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5751:9:13","nodeType":"YulTypedName","src":"5751:9:13","type":""},{"name":"value8","nativeSrc":"5763:6:13","nodeType":"YulTypedName","src":"5763:6:13","type":""},{"name":"value7","nativeSrc":"5771:6:13","nodeType":"YulTypedName","src":"5771:6:13","type":""},{"name":"value6","nativeSrc":"5779:6:13","nodeType":"YulTypedName","src":"5779:6:13","type":""},{"name":"value5","nativeSrc":"5787:6:13","nodeType":"YulTypedName","src":"5787:6:13","type":""},{"name":"value4","nativeSrc":"5795:6:13","nodeType":"YulTypedName","src":"5795:6:13","type":""},{"name":"value3","nativeSrc":"5803:6:13","nodeType":"YulTypedName","src":"5803:6:13","type":""},{"name":"value2","nativeSrc":"5811:6:13","nodeType":"YulTypedName","src":"5811:6:13","type":""},{"name":"value1","nativeSrc":"5819:6:13","nodeType":"YulTypedName","src":"5819:6:13","type":""},{"name":"value0","nativeSrc":"5827:6:13","nodeType":"YulTypedName","src":"5827:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5838:4:13","nodeType":"YulTypedName","src":"5838:4:13","type":""}],"src":"5527:1096:13"},{"body":{"nativeSrc":"6688:40:13","nodeType":"YulBlock","src":"6688:40:13","statements":[{"nativeSrc":"6699:22:13","nodeType":"YulAssignment","src":"6699:22:13","value":{"arguments":[{"name":"value","nativeSrc":"6715:5:13","nodeType":"YulIdentifier","src":"6715:5:13"}],"functionName":{"name":"mload","nativeSrc":"6709:5:13","nodeType":"YulIdentifier","src":"6709:5:13"},"nativeSrc":"6709:12:13","nodeType":"YulFunctionCall","src":"6709:12:13"},"variableNames":[{"name":"length","nativeSrc":"6699:6:13","nodeType":"YulIdentifier","src":"6699:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"6629:99:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6671:5:13","nodeType":"YulTypedName","src":"6671:5:13","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6681:6:13","nodeType":"YulTypedName","src":"6681:6:13","type":""}],"src":"6629:99:13"},{"body":{"nativeSrc":"6830:73:13","nodeType":"YulBlock","src":"6830:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6847:3:13","nodeType":"YulIdentifier","src":"6847:3:13"},{"name":"length","nativeSrc":"6852:6:13","nodeType":"YulIdentifier","src":"6852:6:13"}],"functionName":{"name":"mstore","nativeSrc":"6840:6:13","nodeType":"YulIdentifier","src":"6840:6:13"},"nativeSrc":"6840:19:13","nodeType":"YulFunctionCall","src":"6840:19:13"},"nativeSrc":"6840:19:13","nodeType":"YulExpressionStatement","src":"6840:19:13"},{"nativeSrc":"6868:29:13","nodeType":"YulAssignment","src":"6868:29:13","value":{"arguments":[{"name":"pos","nativeSrc":"6887:3:13","nodeType":"YulIdentifier","src":"6887:3:13"},{"kind":"number","nativeSrc":"6892:4:13","nodeType":"YulLiteral","src":"6892:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6883:3:13","nodeType":"YulIdentifier","src":"6883:3:13"},"nativeSrc":"6883:14:13","nodeType":"YulFunctionCall","src":"6883:14:13"},"variableNames":[{"name":"updated_pos","nativeSrc":"6868:11:13","nodeType":"YulIdentifier","src":"6868:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6734:169:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6802:3:13","nodeType":"YulTypedName","src":"6802:3:13","type":""},{"name":"length","nativeSrc":"6807:6:13","nodeType":"YulTypedName","src":"6807:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6818:11:13","nodeType":"YulTypedName","src":"6818:11:13","type":""}],"src":"6734:169:13"},{"body":{"nativeSrc":"6971:186:13","nodeType":"YulBlock","src":"6971:186:13","statements":[{"nativeSrc":"6982:10:13","nodeType":"YulVariableDeclaration","src":"6982:10:13","value":{"kind":"number","nativeSrc":"6991:1:13","nodeType":"YulLiteral","src":"6991:1:13","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6986:1:13","nodeType":"YulTypedName","src":"6986:1:13","type":""}]},{"body":{"nativeSrc":"7051:63:13","nodeType":"YulBlock","src":"7051:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7076:3:13","nodeType":"YulIdentifier","src":"7076:3:13"},{"name":"i","nativeSrc":"7081:1:13","nodeType":"YulIdentifier","src":"7081:1:13"}],"functionName":{"name":"add","nativeSrc":"7072:3:13","nodeType":"YulIdentifier","src":"7072:3:13"},"nativeSrc":"7072:11:13","nodeType":"YulFunctionCall","src":"7072:11:13"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7095:3:13","nodeType":"YulIdentifier","src":"7095:3:13"},{"name":"i","nativeSrc":"7100:1:13","nodeType":"YulIdentifier","src":"7100:1:13"}],"functionName":{"name":"add","nativeSrc":"7091:3:13","nodeType":"YulIdentifier","src":"7091:3:13"},"nativeSrc":"7091:11:13","nodeType":"YulFunctionCall","src":"7091:11:13"}],"functionName":{"name":"mload","nativeSrc":"7085:5:13","nodeType":"YulIdentifier","src":"7085:5:13"},"nativeSrc":"7085:18:13","nodeType":"YulFunctionCall","src":"7085:18:13"}],"functionName":{"name":"mstore","nativeSrc":"7065:6:13","nodeType":"YulIdentifier","src":"7065:6:13"},"nativeSrc":"7065:39:13","nodeType":"YulFunctionCall","src":"7065:39:13"},"nativeSrc":"7065:39:13","nodeType":"YulExpressionStatement","src":"7065:39:13"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7012:1:13","nodeType":"YulIdentifier","src":"7012:1:13"},{"name":"length","nativeSrc":"7015:6:13","nodeType":"YulIdentifier","src":"7015:6:13"}],"functionName":{"name":"lt","nativeSrc":"7009:2:13","nodeType":"YulIdentifier","src":"7009:2:13"},"nativeSrc":"7009:13:13","nodeType":"YulFunctionCall","src":"7009:13:13"},"nativeSrc":"7001:113:13","nodeType":"YulForLoop","post":{"nativeSrc":"7023:19:13","nodeType":"YulBlock","src":"7023:19:13","statements":[{"nativeSrc":"7025:15:13","nodeType":"YulAssignment","src":"7025:15:13","value":{"arguments":[{"name":"i","nativeSrc":"7034:1:13","nodeType":"YulIdentifier","src":"7034:1:13"},{"kind":"number","nativeSrc":"7037:2:13","nodeType":"YulLiteral","src":"7037:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7030:3:13","nodeType":"YulIdentifier","src":"7030:3:13"},"nativeSrc":"7030:10:13","nodeType":"YulFunctionCall","src":"7030:10:13"},"variableNames":[{"name":"i","nativeSrc":"7025:1:13","nodeType":"YulIdentifier","src":"7025:1:13"}]}]},"pre":{"nativeSrc":"7005:3:13","nodeType":"YulBlock","src":"7005:3:13","statements":[]},"src":"7001:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7134:3:13","nodeType":"YulIdentifier","src":"7134:3:13"},{"name":"length","nativeSrc":"7139:6:13","nodeType":"YulIdentifier","src":"7139:6:13"}],"functionName":{"name":"add","nativeSrc":"7130:3:13","nodeType":"YulIdentifier","src":"7130:3:13"},"nativeSrc":"7130:16:13","nodeType":"YulFunctionCall","src":"7130:16:13"},{"kind":"number","nativeSrc":"7148:1:13","nodeType":"YulLiteral","src":"7148:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7123:6:13","nodeType":"YulIdentifier","src":"7123:6:13"},"nativeSrc":"7123:27:13","nodeType":"YulFunctionCall","src":"7123:27:13"},"nativeSrc":"7123:27:13","nodeType":"YulExpressionStatement","src":"7123:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6909:248:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6953:3:13","nodeType":"YulTypedName","src":"6953:3:13","type":""},{"name":"dst","nativeSrc":"6958:3:13","nodeType":"YulTypedName","src":"6958:3:13","type":""},{"name":"length","nativeSrc":"6963:6:13","nodeType":"YulTypedName","src":"6963:6:13","type":""}],"src":"6909:248:13"},{"body":{"nativeSrc":"7255:285:13","nodeType":"YulBlock","src":"7255:285:13","statements":[{"nativeSrc":"7265:53:13","nodeType":"YulVariableDeclaration","src":"7265:53:13","value":{"arguments":[{"name":"value","nativeSrc":"7312:5:13","nodeType":"YulIdentifier","src":"7312:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7279:32:13","nodeType":"YulIdentifier","src":"7279:32:13"},"nativeSrc":"7279:39:13","nodeType":"YulFunctionCall","src":"7279:39:13"},"variables":[{"name":"length","nativeSrc":"7269:6:13","nodeType":"YulTypedName","src":"7269:6:13","type":""}]},{"nativeSrc":"7327:78:13","nodeType":"YulAssignment","src":"7327:78:13","value":{"arguments":[{"name":"pos","nativeSrc":"7393:3:13","nodeType":"YulIdentifier","src":"7393:3:13"},{"name":"length","nativeSrc":"7398:6:13","nodeType":"YulIdentifier","src":"7398:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7334:58:13","nodeType":"YulIdentifier","src":"7334:58:13"},"nativeSrc":"7334:71:13","nodeType":"YulFunctionCall","src":"7334:71:13"},"variableNames":[{"name":"pos","nativeSrc":"7327:3:13","nodeType":"YulIdentifier","src":"7327:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7453:5:13","nodeType":"YulIdentifier","src":"7453:5:13"},{"kind":"number","nativeSrc":"7460:4:13","nodeType":"YulLiteral","src":"7460:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7449:3:13","nodeType":"YulIdentifier","src":"7449:3:13"},"nativeSrc":"7449:16:13","nodeType":"YulFunctionCall","src":"7449:16:13"},{"name":"pos","nativeSrc":"7467:3:13","nodeType":"YulIdentifier","src":"7467:3:13"},{"name":"length","nativeSrc":"7472:6:13","nodeType":"YulIdentifier","src":"7472:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7414:34:13","nodeType":"YulIdentifier","src":"7414:34:13"},"nativeSrc":"7414:65:13","nodeType":"YulFunctionCall","src":"7414:65:13"},"nativeSrc":"7414:65:13","nodeType":"YulExpressionStatement","src":"7414:65:13"},{"nativeSrc":"7488:46:13","nodeType":"YulAssignment","src":"7488:46:13","value":{"arguments":[{"name":"pos","nativeSrc":"7499:3:13","nodeType":"YulIdentifier","src":"7499:3:13"},{"arguments":[{"name":"length","nativeSrc":"7526:6:13","nodeType":"YulIdentifier","src":"7526:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7504:21:13","nodeType":"YulIdentifier","src":"7504:21:13"},"nativeSrc":"7504:29:13","nodeType":"YulFunctionCall","src":"7504:29:13"}],"functionName":{"name":"add","nativeSrc":"7495:3:13","nodeType":"YulIdentifier","src":"7495:3:13"},"nativeSrc":"7495:39:13","nodeType":"YulFunctionCall","src":"7495:39:13"},"variableNames":[{"name":"end","nativeSrc":"7488:3:13","nodeType":"YulIdentifier","src":"7488:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7163:377:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7236:5:13","nodeType":"YulTypedName","src":"7236:5:13","type":""},{"name":"pos","nativeSrc":"7243:3:13","nodeType":"YulTypedName","src":"7243:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7251:3:13","nodeType":"YulTypedName","src":"7251:3:13","type":""}],"src":"7163:377:13"},{"body":{"nativeSrc":"7664:195:13","nodeType":"YulBlock","src":"7664:195:13","statements":[{"nativeSrc":"7674:26:13","nodeType":"YulAssignment","src":"7674:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"7686:9:13","nodeType":"YulIdentifier","src":"7686:9:13"},{"kind":"number","nativeSrc":"7697:2:13","nodeType":"YulLiteral","src":"7697:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7682:3:13","nodeType":"YulIdentifier","src":"7682:3:13"},"nativeSrc":"7682:18:13","nodeType":"YulFunctionCall","src":"7682:18:13"},"variableNames":[{"name":"tail","nativeSrc":"7674:4:13","nodeType":"YulIdentifier","src":"7674:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7721:9:13","nodeType":"YulIdentifier","src":"7721:9:13"},{"kind":"number","nativeSrc":"7732:1:13","nodeType":"YulLiteral","src":"7732:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7717:3:13","nodeType":"YulIdentifier","src":"7717:3:13"},"nativeSrc":"7717:17:13","nodeType":"YulFunctionCall","src":"7717:17:13"},{"arguments":[{"name":"tail","nativeSrc":"7740:4:13","nodeType":"YulIdentifier","src":"7740:4:13"},{"name":"headStart","nativeSrc":"7746:9:13","nodeType":"YulIdentifier","src":"7746:9:13"}],"functionName":{"name":"sub","nativeSrc":"7736:3:13","nodeType":"YulIdentifier","src":"7736:3:13"},"nativeSrc":"7736:20:13","nodeType":"YulFunctionCall","src":"7736:20:13"}],"functionName":{"name":"mstore","nativeSrc":"7710:6:13","nodeType":"YulIdentifier","src":"7710:6:13"},"nativeSrc":"7710:47:13","nodeType":"YulFunctionCall","src":"7710:47:13"},"nativeSrc":"7710:47:13","nodeType":"YulExpressionStatement","src":"7710:47:13"},{"nativeSrc":"7766:86:13","nodeType":"YulAssignment","src":"7766:86:13","value":{"arguments":[{"name":"value0","nativeSrc":"7838:6:13","nodeType":"YulIdentifier","src":"7838:6:13"},{"name":"tail","nativeSrc":"7847:4:13","nodeType":"YulIdentifier","src":"7847:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7774:63:13","nodeType":"YulIdentifier","src":"7774:63:13"},"nativeSrc":"7774:78:13","nodeType":"YulFunctionCall","src":"7774:78:13"},"variableNames":[{"name":"tail","nativeSrc":"7766:4:13","nodeType":"YulIdentifier","src":"7766:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7546:313:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7636:9:13","nodeType":"YulTypedName","src":"7636:9:13","type":""},{"name":"value0","nativeSrc":"7648:6:13","nodeType":"YulTypedName","src":"7648:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7659:4:13","nodeType":"YulTypedName","src":"7659:4:13","type":""}],"src":"7546:313:13"},{"body":{"nativeSrc":"7982:648:13","nodeType":"YulBlock","src":"7982:648:13","statements":[{"body":{"nativeSrc":"8029:83:13","nodeType":"YulBlock","src":"8029:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8031:77:13","nodeType":"YulIdentifier","src":"8031:77:13"},"nativeSrc":"8031:79:13","nodeType":"YulFunctionCall","src":"8031:79:13"},"nativeSrc":"8031:79:13","nodeType":"YulExpressionStatement","src":"8031:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8003:7:13","nodeType":"YulIdentifier","src":"8003:7:13"},{"name":"headStart","nativeSrc":"8012:9:13","nodeType":"YulIdentifier","src":"8012:9:13"}],"functionName":{"name":"sub","nativeSrc":"7999:3:13","nodeType":"YulIdentifier","src":"7999:3:13"},"nativeSrc":"7999:23:13","nodeType":"YulFunctionCall","src":"7999:23:13"},{"kind":"number","nativeSrc":"8024:3:13","nodeType":"YulLiteral","src":"8024:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7995:3:13","nodeType":"YulIdentifier","src":"7995:3:13"},"nativeSrc":"7995:33:13","nodeType":"YulFunctionCall","src":"7995:33:13"},"nativeSrc":"7992:120:13","nodeType":"YulIf","src":"7992:120:13"},{"nativeSrc":"8122:117:13","nodeType":"YulBlock","src":"8122:117:13","statements":[{"nativeSrc":"8137:15:13","nodeType":"YulVariableDeclaration","src":"8137:15:13","value":{"kind":"number","nativeSrc":"8151:1:13","nodeType":"YulLiteral","src":"8151:1:13","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8141:6:13","nodeType":"YulTypedName","src":"8141:6:13","type":""}]},{"nativeSrc":"8166:63:13","nodeType":"YulAssignment","src":"8166:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8201:9:13","nodeType":"YulIdentifier","src":"8201:9:13"},{"name":"offset","nativeSrc":"8212:6:13","nodeType":"YulIdentifier","src":"8212:6:13"}],"functionName":{"name":"add","nativeSrc":"8197:3:13","nodeType":"YulIdentifier","src":"8197:3:13"},"nativeSrc":"8197:22:13","nodeType":"YulFunctionCall","src":"8197:22:13"},{"name":"dataEnd","nativeSrc":"8221:7:13","nodeType":"YulIdentifier","src":"8221:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8176:20:13","nodeType":"YulIdentifier","src":"8176:20:13"},"nativeSrc":"8176:53:13","nodeType":"YulFunctionCall","src":"8176:53:13"},"variableNames":[{"name":"value0","nativeSrc":"8166:6:13","nodeType":"YulIdentifier","src":"8166:6:13"}]}]},{"nativeSrc":"8249:118:13","nodeType":"YulBlock","src":"8249:118:13","statements":[{"nativeSrc":"8264:16:13","nodeType":"YulVariableDeclaration","src":"8264:16:13","value":{"kind":"number","nativeSrc":"8278:2:13","nodeType":"YulLiteral","src":"8278:2:13","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8268:6:13","nodeType":"YulTypedName","src":"8268:6:13","type":""}]},{"nativeSrc":"8294:63:13","nodeType":"YulAssignment","src":"8294:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8329:9:13","nodeType":"YulIdentifier","src":"8329:9:13"},{"name":"offset","nativeSrc":"8340:6:13","nodeType":"YulIdentifier","src":"8340:6:13"}],"functionName":{"name":"add","nativeSrc":"8325:3:13","nodeType":"YulIdentifier","src":"8325:3:13"},"nativeSrc":"8325:22:13","nodeType":"YulFunctionCall","src":"8325:22:13"},{"name":"dataEnd","nativeSrc":"8349:7:13","nodeType":"YulIdentifier","src":"8349:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8304:20:13","nodeType":"YulIdentifier","src":"8304:20:13"},"nativeSrc":"8304:53:13","nodeType":"YulFunctionCall","src":"8304:53:13"},"variableNames":[{"name":"value1","nativeSrc":"8294:6:13","nodeType":"YulIdentifier","src":"8294:6:13"}]}]},{"nativeSrc":"8377:118:13","nodeType":"YulBlock","src":"8377:118:13","statements":[{"nativeSrc":"8392:16:13","nodeType":"YulVariableDeclaration","src":"8392:16:13","value":{"kind":"number","nativeSrc":"8406:2:13","nodeType":"YulLiteral","src":"8406:2:13","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8396:6:13","nodeType":"YulTypedName","src":"8396:6:13","type":""}]},{"nativeSrc":"8422:63:13","nodeType":"YulAssignment","src":"8422:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8457:9:13","nodeType":"YulIdentifier","src":"8457:9:13"},{"name":"offset","nativeSrc":"8468:6:13","nodeType":"YulIdentifier","src":"8468:6:13"}],"functionName":{"name":"add","nativeSrc":"8453:3:13","nodeType":"YulIdentifier","src":"8453:3:13"},"nativeSrc":"8453:22:13","nodeType":"YulFunctionCall","src":"8453:22:13"},{"name":"dataEnd","nativeSrc":"8477:7:13","nodeType":"YulIdentifier","src":"8477:7:13"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8432:20:13","nodeType":"YulIdentifier","src":"8432:20:13"},"nativeSrc":"8432:53:13","nodeType":"YulFunctionCall","src":"8432:53:13"},"variableNames":[{"name":"value2","nativeSrc":"8422:6:13","nodeType":"YulIdentifier","src":"8422:6:13"}]}]},{"nativeSrc":"8505:118:13","nodeType":"YulBlock","src":"8505:118:13","statements":[{"nativeSrc":"8520:16:13","nodeType":"YulVariableDeclaration","src":"8520:16:13","value":{"kind":"number","nativeSrc":"8534:2:13","nodeType":"YulLiteral","src":"8534:2:13","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"8524:6:13","nodeType":"YulTypedName","src":"8524:6:13","type":""}]},{"nativeSrc":"8550:63:13","nodeType":"YulAssignment","src":"8550:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8585:9:13","nodeType":"YulIdentifier","src":"8585:9:13"},{"name":"offset","nativeSrc":"8596:6:13","nodeType":"YulIdentifier","src":"8596:6:13"}],"functionName":{"name":"add","nativeSrc":"8581:3:13","nodeType":"YulIdentifier","src":"8581:3:13"},"nativeSrc":"8581:22:13","nodeType":"YulFunctionCall","src":"8581:22:13"},{"name":"dataEnd","nativeSrc":"8605:7:13","nodeType":"YulIdentifier","src":"8605:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8560:20:13","nodeType":"YulIdentifier","src":"8560:20:13"},"nativeSrc":"8560:53:13","nodeType":"YulFunctionCall","src":"8560:53:13"},"variableNames":[{"name":"value3","nativeSrc":"8550:6:13","nodeType":"YulIdentifier","src":"8550:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nativeSrc":"7865:765:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7928:9:13","nodeType":"YulTypedName","src":"7928:9:13","type":""},{"name":"dataEnd","nativeSrc":"7939:7:13","nodeType":"YulTypedName","src":"7939:7:13","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7951:6:13","nodeType":"YulTypedName","src":"7951:6:13","type":""},{"name":"value1","nativeSrc":"7959:6:13","nodeType":"YulTypedName","src":"7959:6:13","type":""},{"name":"value2","nativeSrc":"7967:6:13","nodeType":"YulTypedName","src":"7967:6:13","type":""},{"name":"value3","nativeSrc":"7975:6:13","nodeType":"YulTypedName","src":"7975:6:13","type":""}],"src":"7865:765:13"},{"body":{"nativeSrc":"8734:124:13","nodeType":"YulBlock","src":"8734:124:13","statements":[{"nativeSrc":"8744:26:13","nodeType":"YulAssignment","src":"8744:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"8756:9:13","nodeType":"YulIdentifier","src":"8756:9:13"},{"kind":"number","nativeSrc":"8767:2:13","nodeType":"YulLiteral","src":"8767:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8752:3:13","nodeType":"YulIdentifier","src":"8752:3:13"},"nativeSrc":"8752:18:13","nodeType":"YulFunctionCall","src":"8752:18:13"},"variableNames":[{"name":"tail","nativeSrc":"8744:4:13","nodeType":"YulIdentifier","src":"8744:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8824:6:13","nodeType":"YulIdentifier","src":"8824:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"8837:9:13","nodeType":"YulIdentifier","src":"8837:9:13"},{"kind":"number","nativeSrc":"8848:1:13","nodeType":"YulLiteral","src":"8848:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8833:3:13","nodeType":"YulIdentifier","src":"8833:3:13"},"nativeSrc":"8833:17:13","nodeType":"YulFunctionCall","src":"8833:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8780:43:13","nodeType":"YulIdentifier","src":"8780:43:13"},"nativeSrc":"8780:71:13","nodeType":"YulFunctionCall","src":"8780:71:13"},"nativeSrc":"8780:71:13","nodeType":"YulExpressionStatement","src":"8780:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8636:222:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8706:9:13","nodeType":"YulTypedName","src":"8706:9:13","type":""},{"name":"value0","nativeSrc":"8718:6:13","nodeType":"YulTypedName","src":"8718:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8729:4:13","nodeType":"YulTypedName","src":"8729:4:13","type":""}],"src":"8636:222:13"},{"body":{"nativeSrc":"8917:32:13","nodeType":"YulBlock","src":"8917:32:13","statements":[{"nativeSrc":"8927:16:13","nodeType":"YulAssignment","src":"8927:16:13","value":{"name":"value","nativeSrc":"8938:5:13","nodeType":"YulIdentifier","src":"8938:5:13"},"variableNames":[{"name":"cleaned","nativeSrc":"8927:7:13","nodeType":"YulIdentifier","src":"8927:7:13"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"8864:85:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8899:5:13","nodeType":"YulTypedName","src":"8899:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8909:7:13","nodeType":"YulTypedName","src":"8909:7:13","type":""}],"src":"8864:85:13"},{"body":{"nativeSrc":"8999:57:13","nodeType":"YulBlock","src":"8999:57:13","statements":[{"nativeSrc":"9009:41:13","nodeType":"YulAssignment","src":"9009:41:13","value":{"arguments":[{"name":"value","nativeSrc":"9024:5:13","nodeType":"YulIdentifier","src":"9024:5:13"},{"kind":"number","nativeSrc":"9031:18:13","nodeType":"YulLiteral","src":"9031:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9020:3:13","nodeType":"YulIdentifier","src":"9020:3:13"},"nativeSrc":"9020:30:13","nodeType":"YulFunctionCall","src":"9020:30:13"},"variableNames":[{"name":"cleaned","nativeSrc":"9009:7:13","nodeType":"YulIdentifier","src":"9009:7:13"}]}]},"name":"cleanup_t_uint64","nativeSrc":"8955:101:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8981:5:13","nodeType":"YulTypedName","src":"8981:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8991:7:13","nodeType":"YulTypedName","src":"8991:7:13","type":""}],"src":"8955:101:13"},{"body":{"nativeSrc":"9094:28:13","nodeType":"YulBlock","src":"9094:28:13","statements":[{"nativeSrc":"9104:12:13","nodeType":"YulAssignment","src":"9104:12:13","value":{"name":"value","nativeSrc":"9111:5:13","nodeType":"YulIdentifier","src":"9111:5:13"},"variableNames":[{"name":"ret","nativeSrc":"9104:3:13","nodeType":"YulIdentifier","src":"9104:3:13"}]}]},"name":"identity","nativeSrc":"9062:60:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9080:5:13","nodeType":"YulTypedName","src":"9080:5:13","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"9090:3:13","nodeType":"YulTypedName","src":"9090:3:13","type":""}],"src":"9062:60:13"},{"body":{"nativeSrc":"9195:89:13","nodeType":"YulBlock","src":"9195:89:13","statements":[{"nativeSrc":"9205:73:13","nodeType":"YulAssignment","src":"9205:73:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9270:5:13","nodeType":"YulIdentifier","src":"9270:5:13"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"9244:25:13","nodeType":"YulIdentifier","src":"9244:25:13"},"nativeSrc":"9244:32:13","nodeType":"YulFunctionCall","src":"9244:32:13"}],"functionName":{"name":"identity","nativeSrc":"9235:8:13","nodeType":"YulIdentifier","src":"9235:8:13"},"nativeSrc":"9235:42:13","nodeType":"YulFunctionCall","src":"9235:42:13"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"9218:16:13","nodeType":"YulIdentifier","src":"9218:16:13"},"nativeSrc":"9218:60:13","nodeType":"YulFunctionCall","src":"9218:60:13"},"variableNames":[{"name":"converted","nativeSrc":"9205:9:13","nodeType":"YulIdentifier","src":"9205:9:13"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"9128:156:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9175:5:13","nodeType":"YulTypedName","src":"9175:5:13","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"9185:9:13","nodeType":"YulTypedName","src":"9185:9:13","type":""}],"src":"9128:156:13"},{"body":{"nativeSrc":"9362:73:13","nodeType":"YulBlock","src":"9362:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9379:3:13","nodeType":"YulIdentifier","src":"9379:3:13"},{"arguments":[{"name":"value","nativeSrc":"9422:5:13","nodeType":"YulIdentifier","src":"9422:5:13"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"9384:37:13","nodeType":"YulIdentifier","src":"9384:37:13"},"nativeSrc":"9384:44:13","nodeType":"YulFunctionCall","src":"9384:44:13"}],"functionName":{"name":"mstore","nativeSrc":"9372:6:13","nodeType":"YulIdentifier","src":"9372:6:13"},"nativeSrc":"9372:57:13","nodeType":"YulFunctionCall","src":"9372:57:13"},"nativeSrc":"9372:57:13","nodeType":"YulExpressionStatement","src":"9372:57:13"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"9290:145:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9350:5:13","nodeType":"YulTypedName","src":"9350:5:13","type":""},{"name":"pos","nativeSrc":"9357:3:13","nodeType":"YulTypedName","src":"9357:3:13","type":""}],"src":"9290:145:13"},{"body":{"nativeSrc":"9546:131:13","nodeType":"YulBlock","src":"9546:131:13","statements":[{"nativeSrc":"9556:26:13","nodeType":"YulAssignment","src":"9556:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"9568:9:13","nodeType":"YulIdentifier","src":"9568:9:13"},{"kind":"number","nativeSrc":"9579:2:13","nodeType":"YulLiteral","src":"9579:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9564:3:13","nodeType":"YulIdentifier","src":"9564:3:13"},"nativeSrc":"9564:18:13","nodeType":"YulFunctionCall","src":"9564:18:13"},"variableNames":[{"name":"tail","nativeSrc":"9556:4:13","nodeType":"YulIdentifier","src":"9556:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9643:6:13","nodeType":"YulIdentifier","src":"9643:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"9656:9:13","nodeType":"YulIdentifier","src":"9656:9:13"},{"kind":"number","nativeSrc":"9667:1:13","nodeType":"YulLiteral","src":"9667:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9652:3:13","nodeType":"YulIdentifier","src":"9652:3:13"},"nativeSrc":"9652:17:13","nodeType":"YulFunctionCall","src":"9652:17:13"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"9592:50:13","nodeType":"YulIdentifier","src":"9592:50:13"},"nativeSrc":"9592:78:13","nodeType":"YulFunctionCall","src":"9592:78:13"},"nativeSrc":"9592:78:13","nodeType":"YulExpressionStatement","src":"9592:78:13"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"9441:236:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9518:9:13","nodeType":"YulTypedName","src":"9518:9:13","type":""},{"name":"value0","nativeSrc":"9530:6:13","nodeType":"YulTypedName","src":"9530:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9541:4:13","nodeType":"YulTypedName","src":"9541:4:13","type":""}],"src":"9441:236:13"},{"body":{"nativeSrc":"9711:152:13","nodeType":"YulBlock","src":"9711:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9728:1:13","nodeType":"YulLiteral","src":"9728:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"9731:77:13","nodeType":"YulLiteral","src":"9731:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9721:6:13","nodeType":"YulIdentifier","src":"9721:6:13"},"nativeSrc":"9721:88:13","nodeType":"YulFunctionCall","src":"9721:88:13"},"nativeSrc":"9721:88:13","nodeType":"YulExpressionStatement","src":"9721:88:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9825:1:13","nodeType":"YulLiteral","src":"9825:1:13","type":"","value":"4"},{"kind":"number","nativeSrc":"9828:4:13","nodeType":"YulLiteral","src":"9828:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9818:6:13","nodeType":"YulIdentifier","src":"9818:6:13"},"nativeSrc":"9818:15:13","nodeType":"YulFunctionCall","src":"9818:15:13"},"nativeSrc":"9818:15:13","nodeType":"YulExpressionStatement","src":"9818:15:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9849:1:13","nodeType":"YulLiteral","src":"9849:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"9852:4:13","nodeType":"YulLiteral","src":"9852:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9842:6:13","nodeType":"YulIdentifier","src":"9842:6:13"},"nativeSrc":"9842:15:13","nodeType":"YulFunctionCall","src":"9842:15:13"},"nativeSrc":"9842:15:13","nodeType":"YulExpressionStatement","src":"9842:15:13"}]},"name":"panic_error_0x11","nativeSrc":"9683:180:13","nodeType":"YulFunctionDefinition","src":"9683:180:13"},{"body":{"nativeSrc":"9913:147:13","nodeType":"YulBlock","src":"9913:147:13","statements":[{"nativeSrc":"9923:25:13","nodeType":"YulAssignment","src":"9923:25:13","value":{"arguments":[{"name":"x","nativeSrc":"9946:1:13","nodeType":"YulIdentifier","src":"9946:1:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9928:17:13","nodeType":"YulIdentifier","src":"9928:17:13"},"nativeSrc":"9928:20:13","nodeType":"YulFunctionCall","src":"9928:20:13"},"variableNames":[{"name":"x","nativeSrc":"9923:1:13","nodeType":"YulIdentifier","src":"9923:1:13"}]},{"nativeSrc":"9957:25:13","nodeType":"YulAssignment","src":"9957:25:13","value":{"arguments":[{"name":"y","nativeSrc":"9980:1:13","nodeType":"YulIdentifier","src":"9980:1:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9962:17:13","nodeType":"YulIdentifier","src":"9962:17:13"},"nativeSrc":"9962:20:13","nodeType":"YulFunctionCall","src":"9962:20:13"},"variableNames":[{"name":"y","nativeSrc":"9957:1:13","nodeType":"YulIdentifier","src":"9957:1:13"}]},{"nativeSrc":"9991:16:13","nodeType":"YulAssignment","src":"9991:16:13","value":{"arguments":[{"name":"x","nativeSrc":"10002:1:13","nodeType":"YulIdentifier","src":"10002:1:13"},{"name":"y","nativeSrc":"10005:1:13","nodeType":"YulIdentifier","src":"10005:1:13"}],"functionName":{"name":"add","nativeSrc":"9998:3:13","nodeType":"YulIdentifier","src":"9998:3:13"},"nativeSrc":"9998:9:13","nodeType":"YulFunctionCall","src":"9998:9:13"},"variableNames":[{"name":"sum","nativeSrc":"9991:3:13","nodeType":"YulIdentifier","src":"9991:3:13"}]},{"body":{"nativeSrc":"10031:22:13","nodeType":"YulBlock","src":"10031:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10033:16:13","nodeType":"YulIdentifier","src":"10033:16:13"},"nativeSrc":"10033:18:13","nodeType":"YulFunctionCall","src":"10033:18:13"},"nativeSrc":"10033:18:13","nodeType":"YulExpressionStatement","src":"10033:18:13"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10023:1:13","nodeType":"YulIdentifier","src":"10023:1:13"},{"name":"sum","nativeSrc":"10026:3:13","nodeType":"YulIdentifier","src":"10026:3:13"}],"functionName":{"name":"gt","nativeSrc":"10020:2:13","nodeType":"YulIdentifier","src":"10020:2:13"},"nativeSrc":"10020:10:13","nodeType":"YulFunctionCall","src":"10020:10:13"},"nativeSrc":"10017:36:13","nodeType":"YulIf","src":"10017:36:13"}]},"name":"checked_add_t_uint256","nativeSrc":"9869:191:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9900:1:13","nodeType":"YulTypedName","src":"9900:1:13","type":""},{"name":"y","nativeSrc":"9903:1:13","nodeType":"YulTypedName","src":"9903:1:13","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9909:3:13","nodeType":"YulTypedName","src":"9909:3:13","type":""}],"src":"9869:191:13"},{"body":{"nativeSrc":"10172:61:13","nodeType":"YulBlock","src":"10172:61:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10194:6:13","nodeType":"YulIdentifier","src":"10194:6:13"},{"kind":"number","nativeSrc":"10202:1:13","nodeType":"YulLiteral","src":"10202:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10190:3:13","nodeType":"YulIdentifier","src":"10190:3:13"},"nativeSrc":"10190:14:13","nodeType":"YulFunctionCall","src":"10190:14:13"},{"hexValue":"41756374696f6e2068617320656e646564","kind":"string","nativeSrc":"10206:19:13","nodeType":"YulLiteral","src":"10206:19:13","type":"","value":"Auction has ended"}],"functionName":{"name":"mstore","nativeSrc":"10183:6:13","nodeType":"YulIdentifier","src":"10183:6:13"},"nativeSrc":"10183:43:13","nodeType":"YulFunctionCall","src":"10183:43:13"},"nativeSrc":"10183:43:13","nodeType":"YulExpressionStatement","src":"10183:43:13"}]},"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nativeSrc":"10066:167:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10164:6:13","nodeType":"YulTypedName","src":"10164:6:13","type":""}],"src":"10066:167:13"},{"body":{"nativeSrc":"10385:220:13","nodeType":"YulBlock","src":"10385:220:13","statements":[{"nativeSrc":"10395:74:13","nodeType":"YulAssignment","src":"10395:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"10461:3:13","nodeType":"YulIdentifier","src":"10461:3:13"},{"kind":"number","nativeSrc":"10466:2:13","nodeType":"YulLiteral","src":"10466:2:13","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10402:58:13","nodeType":"YulIdentifier","src":"10402:58:13"},"nativeSrc":"10402:67:13","nodeType":"YulFunctionCall","src":"10402:67:13"},"variableNames":[{"name":"pos","nativeSrc":"10395:3:13","nodeType":"YulIdentifier","src":"10395:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10567:3:13","nodeType":"YulIdentifier","src":"10567:3:13"}],"functionName":{"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nativeSrc":"10478:88:13","nodeType":"YulIdentifier","src":"10478:88:13"},"nativeSrc":"10478:93:13","nodeType":"YulFunctionCall","src":"10478:93:13"},"nativeSrc":"10478:93:13","nodeType":"YulExpressionStatement","src":"10478:93:13"},{"nativeSrc":"10580:19:13","nodeType":"YulAssignment","src":"10580:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"10591:3:13","nodeType":"YulIdentifier","src":"10591:3:13"},{"kind":"number","nativeSrc":"10596:2:13","nodeType":"YulLiteral","src":"10596:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10587:3:13","nodeType":"YulIdentifier","src":"10587:3:13"},"nativeSrc":"10587:12:13","nodeType":"YulFunctionCall","src":"10587:12:13"},"variableNames":[{"name":"end","nativeSrc":"10580:3:13","nodeType":"YulIdentifier","src":"10580:3:13"}]}]},"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nativeSrc":"10239:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10373:3:13","nodeType":"YulTypedName","src":"10373:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10381:3:13","nodeType":"YulTypedName","src":"10381:3:13","type":""}],"src":"10239:366:13"},{"body":{"nativeSrc":"10782:248:13","nodeType":"YulBlock","src":"10782:248:13","statements":[{"nativeSrc":"10792:26:13","nodeType":"YulAssignment","src":"10792:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"10804:9:13","nodeType":"YulIdentifier","src":"10804:9:13"},{"kind":"number","nativeSrc":"10815:2:13","nodeType":"YulLiteral","src":"10815:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10800:3:13","nodeType":"YulIdentifier","src":"10800:3:13"},"nativeSrc":"10800:18:13","nodeType":"YulFunctionCall","src":"10800:18:13"},"variableNames":[{"name":"tail","nativeSrc":"10792:4:13","nodeType":"YulIdentifier","src":"10792:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10839:9:13","nodeType":"YulIdentifier","src":"10839:9:13"},{"kind":"number","nativeSrc":"10850:1:13","nodeType":"YulLiteral","src":"10850:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10835:3:13","nodeType":"YulIdentifier","src":"10835:3:13"},"nativeSrc":"10835:17:13","nodeType":"YulFunctionCall","src":"10835:17:13"},{"arguments":[{"name":"tail","nativeSrc":"10858:4:13","nodeType":"YulIdentifier","src":"10858:4:13"},{"name":"headStart","nativeSrc":"10864:9:13","nodeType":"YulIdentifier","src":"10864:9:13"}],"functionName":{"name":"sub","nativeSrc":"10854:3:13","nodeType":"YulIdentifier","src":"10854:3:13"},"nativeSrc":"10854:20:13","nodeType":"YulFunctionCall","src":"10854:20:13"}],"functionName":{"name":"mstore","nativeSrc":"10828:6:13","nodeType":"YulIdentifier","src":"10828:6:13"},"nativeSrc":"10828:47:13","nodeType":"YulFunctionCall","src":"10828:47:13"},"nativeSrc":"10828:47:13","nodeType":"YulExpressionStatement","src":"10828:47:13"},{"nativeSrc":"10884:139:13","nodeType":"YulAssignment","src":"10884:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"11018:4:13","nodeType":"YulIdentifier","src":"11018:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nativeSrc":"10892:124:13","nodeType":"YulIdentifier","src":"10892:124:13"},"nativeSrc":"10892:131:13","nodeType":"YulFunctionCall","src":"10892:131:13"},"variableNames":[{"name":"tail","nativeSrc":"10884:4:13","nodeType":"YulIdentifier","src":"10884:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10611:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10762:9:13","nodeType":"YulTypedName","src":"10762:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10777:4:13","nodeType":"YulTypedName","src":"10777:4:13","type":""}],"src":"10611:419:13"},{"body":{"nativeSrc":"11142:124:13","nodeType":"YulBlock","src":"11142:124:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11164:6:13","nodeType":"YulIdentifier","src":"11164:6:13"},{"kind":"number","nativeSrc":"11172:1:13","nodeType":"YulLiteral","src":"11172:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11160:3:13","nodeType":"YulIdentifier","src":"11160:3:13"},"nativeSrc":"11160:14:13","nodeType":"YulFunctionCall","src":"11160:14:13"},{"hexValue":"426964206d75737420626520686967686572207468616e2063757272656e7420","kind":"string","nativeSrc":"11176:34:13","nodeType":"YulLiteral","src":"11176:34:13","type":"","value":"Bid must be higher than current "}],"functionName":{"name":"mstore","nativeSrc":"11153:6:13","nodeType":"YulIdentifier","src":"11153:6:13"},"nativeSrc":"11153:58:13","nodeType":"YulFunctionCall","src":"11153:58:13"},"nativeSrc":"11153:58:13","nodeType":"YulExpressionStatement","src":"11153:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11232:6:13","nodeType":"YulIdentifier","src":"11232:6:13"},{"kind":"number","nativeSrc":"11240:2:13","nodeType":"YulLiteral","src":"11240:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11228:3:13","nodeType":"YulIdentifier","src":"11228:3:13"},"nativeSrc":"11228:15:13","nodeType":"YulFunctionCall","src":"11228:15:13"},{"hexValue":"6869676865737420626964","kind":"string","nativeSrc":"11245:13:13","nodeType":"YulLiteral","src":"11245:13:13","type":"","value":"highest bid"}],"functionName":{"name":"mstore","nativeSrc":"11221:6:13","nodeType":"YulIdentifier","src":"11221:6:13"},"nativeSrc":"11221:38:13","nodeType":"YulFunctionCall","src":"11221:38:13"},"nativeSrc":"11221:38:13","nodeType":"YulExpressionStatement","src":"11221:38:13"}]},"name":"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","nativeSrc":"11036:230:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11134:6:13","nodeType":"YulTypedName","src":"11134:6:13","type":""}],"src":"11036:230:13"},{"body":{"nativeSrc":"11418:220:13","nodeType":"YulBlock","src":"11418:220:13","statements":[{"nativeSrc":"11428:74:13","nodeType":"YulAssignment","src":"11428:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"11494:3:13","nodeType":"YulIdentifier","src":"11494:3:13"},{"kind":"number","nativeSrc":"11499:2:13","nodeType":"YulLiteral","src":"11499:2:13","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11435:58:13","nodeType":"YulIdentifier","src":"11435:58:13"},"nativeSrc":"11435:67:13","nodeType":"YulFunctionCall","src":"11435:67:13"},"variableNames":[{"name":"pos","nativeSrc":"11428:3:13","nodeType":"YulIdentifier","src":"11428:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11600:3:13","nodeType":"YulIdentifier","src":"11600:3:13"}],"functionName":{"name":"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","nativeSrc":"11511:88:13","nodeType":"YulIdentifier","src":"11511:88:13"},"nativeSrc":"11511:93:13","nodeType":"YulFunctionCall","src":"11511:93:13"},"nativeSrc":"11511:93:13","nodeType":"YulExpressionStatement","src":"11511:93:13"},{"nativeSrc":"11613:19:13","nodeType":"YulAssignment","src":"11613:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"11624:3:13","nodeType":"YulIdentifier","src":"11624:3:13"},{"kind":"number","nativeSrc":"11629:2:13","nodeType":"YulLiteral","src":"11629:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11620:3:13","nodeType":"YulIdentifier","src":"11620:3:13"},"nativeSrc":"11620:12:13","nodeType":"YulFunctionCall","src":"11620:12:13"},"variableNames":[{"name":"end","nativeSrc":"11613:3:13","nodeType":"YulIdentifier","src":"11613:3:13"}]}]},"name":"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack","nativeSrc":"11272:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11406:3:13","nodeType":"YulTypedName","src":"11406:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11414:3:13","nodeType":"YulTypedName","src":"11414:3:13","type":""}],"src":"11272:366:13"},{"body":{"nativeSrc":"11815:248:13","nodeType":"YulBlock","src":"11815:248:13","statements":[{"nativeSrc":"11825:26:13","nodeType":"YulAssignment","src":"11825:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"11837:9:13","nodeType":"YulIdentifier","src":"11837:9:13"},{"kind":"number","nativeSrc":"11848:2:13","nodeType":"YulLiteral","src":"11848:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11833:3:13","nodeType":"YulIdentifier","src":"11833:3:13"},"nativeSrc":"11833:18:13","nodeType":"YulFunctionCall","src":"11833:18:13"},"variableNames":[{"name":"tail","nativeSrc":"11825:4:13","nodeType":"YulIdentifier","src":"11825:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11872:9:13","nodeType":"YulIdentifier","src":"11872:9:13"},{"kind":"number","nativeSrc":"11883:1:13","nodeType":"YulLiteral","src":"11883:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11868:3:13","nodeType":"YulIdentifier","src":"11868:3:13"},"nativeSrc":"11868:17:13","nodeType":"YulFunctionCall","src":"11868:17:13"},{"arguments":[{"name":"tail","nativeSrc":"11891:4:13","nodeType":"YulIdentifier","src":"11891:4:13"},{"name":"headStart","nativeSrc":"11897:9:13","nodeType":"YulIdentifier","src":"11897:9:13"}],"functionName":{"name":"sub","nativeSrc":"11887:3:13","nodeType":"YulIdentifier","src":"11887:3:13"},"nativeSrc":"11887:20:13","nodeType":"YulFunctionCall","src":"11887:20:13"}],"functionName":{"name":"mstore","nativeSrc":"11861:6:13","nodeType":"YulIdentifier","src":"11861:6:13"},"nativeSrc":"11861:47:13","nodeType":"YulFunctionCall","src":"11861:47:13"},"nativeSrc":"11861:47:13","nodeType":"YulExpressionStatement","src":"11861:47:13"},{"nativeSrc":"11917:139:13","nodeType":"YulAssignment","src":"11917:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"12051:4:13","nodeType":"YulIdentifier","src":"12051:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack","nativeSrc":"11925:124:13","nodeType":"YulIdentifier","src":"11925:124:13"},"nativeSrc":"11925:131:13","nodeType":"YulFunctionCall","src":"11925:131:13"},"variableNames":[{"name":"tail","nativeSrc":"11917:4:13","nodeType":"YulIdentifier","src":"11917:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11644:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11795:9:13","nodeType":"YulTypedName","src":"11795:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11810:4:13","nodeType":"YulTypedName","src":"11810:4:13","type":""}],"src":"11644:419:13"},{"body":{"nativeSrc":"12175:115:13","nodeType":"YulBlock","src":"12175:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12197:6:13","nodeType":"YulIdentifier","src":"12197:6:13"},{"kind":"number","nativeSrc":"12205:1:13","nodeType":"YulLiteral","src":"12205:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12193:3:13","nodeType":"YulIdentifier","src":"12193:3:13"},"nativeSrc":"12193:14:13","nodeType":"YulFunctionCall","src":"12193:14:13"},{"hexValue":"4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469","kind":"string","nativeSrc":"12209:34:13","nodeType":"YulLiteral","src":"12209:34:13","type":"","value":"Only admin can perform this acti"}],"functionName":{"name":"mstore","nativeSrc":"12186:6:13","nodeType":"YulIdentifier","src":"12186:6:13"},"nativeSrc":"12186:58:13","nodeType":"YulFunctionCall","src":"12186:58:13"},"nativeSrc":"12186:58:13","nodeType":"YulExpressionStatement","src":"12186:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12265:6:13","nodeType":"YulIdentifier","src":"12265:6:13"},{"kind":"number","nativeSrc":"12273:2:13","nodeType":"YulLiteral","src":"12273:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12261:3:13","nodeType":"YulIdentifier","src":"12261:3:13"},"nativeSrc":"12261:15:13","nodeType":"YulFunctionCall","src":"12261:15:13"},{"hexValue":"6f6e","kind":"string","nativeSrc":"12278:4:13","nodeType":"YulLiteral","src":"12278:4:13","type":"","value":"on"}],"functionName":{"name":"mstore","nativeSrc":"12254:6:13","nodeType":"YulIdentifier","src":"12254:6:13"},"nativeSrc":"12254:29:13","nodeType":"YulFunctionCall","src":"12254:29:13"},"nativeSrc":"12254:29:13","nodeType":"YulExpressionStatement","src":"12254:29:13"}]},"name":"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","nativeSrc":"12069:221:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12167:6:13","nodeType":"YulTypedName","src":"12167:6:13","type":""}],"src":"12069:221:13"},{"body":{"nativeSrc":"12442:220:13","nodeType":"YulBlock","src":"12442:220:13","statements":[{"nativeSrc":"12452:74:13","nodeType":"YulAssignment","src":"12452:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"12518:3:13","nodeType":"YulIdentifier","src":"12518:3:13"},{"kind":"number","nativeSrc":"12523:2:13","nodeType":"YulLiteral","src":"12523:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12459:58:13","nodeType":"YulIdentifier","src":"12459:58:13"},"nativeSrc":"12459:67:13","nodeType":"YulFunctionCall","src":"12459:67:13"},"variableNames":[{"name":"pos","nativeSrc":"12452:3:13","nodeType":"YulIdentifier","src":"12452:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12624:3:13","nodeType":"YulIdentifier","src":"12624:3:13"}],"functionName":{"name":"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","nativeSrc":"12535:88:13","nodeType":"YulIdentifier","src":"12535:88:13"},"nativeSrc":"12535:93:13","nodeType":"YulFunctionCall","src":"12535:93:13"},"nativeSrc":"12535:93:13","nodeType":"YulExpressionStatement","src":"12535:93:13"},{"nativeSrc":"12637:19:13","nodeType":"YulAssignment","src":"12637:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"12648:3:13","nodeType":"YulIdentifier","src":"12648:3:13"},{"kind":"number","nativeSrc":"12653:2:13","nodeType":"YulLiteral","src":"12653:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12644:3:13","nodeType":"YulIdentifier","src":"12644:3:13"},"nativeSrc":"12644:12:13","nodeType":"YulFunctionCall","src":"12644:12:13"},"variableNames":[{"name":"end","nativeSrc":"12637:3:13","nodeType":"YulIdentifier","src":"12637:3:13"}]}]},"name":"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack","nativeSrc":"12296:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12430:3:13","nodeType":"YulTypedName","src":"12430:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12438:3:13","nodeType":"YulTypedName","src":"12438:3:13","type":""}],"src":"12296:366:13"},{"body":{"nativeSrc":"12839:248:13","nodeType":"YulBlock","src":"12839:248:13","statements":[{"nativeSrc":"12849:26:13","nodeType":"YulAssignment","src":"12849:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"12861:9:13","nodeType":"YulIdentifier","src":"12861:9:13"},{"kind":"number","nativeSrc":"12872:2:13","nodeType":"YulLiteral","src":"12872:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12857:3:13","nodeType":"YulIdentifier","src":"12857:3:13"},"nativeSrc":"12857:18:13","nodeType":"YulFunctionCall","src":"12857:18:13"},"variableNames":[{"name":"tail","nativeSrc":"12849:4:13","nodeType":"YulIdentifier","src":"12849:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12896:9:13","nodeType":"YulIdentifier","src":"12896:9:13"},{"kind":"number","nativeSrc":"12907:1:13","nodeType":"YulLiteral","src":"12907:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12892:3:13","nodeType":"YulIdentifier","src":"12892:3:13"},"nativeSrc":"12892:17:13","nodeType":"YulFunctionCall","src":"12892:17:13"},{"arguments":[{"name":"tail","nativeSrc":"12915:4:13","nodeType":"YulIdentifier","src":"12915:4:13"},{"name":"headStart","nativeSrc":"12921:9:13","nodeType":"YulIdentifier","src":"12921:9:13"}],"functionName":{"name":"sub","nativeSrc":"12911:3:13","nodeType":"YulIdentifier","src":"12911:3:13"},"nativeSrc":"12911:20:13","nodeType":"YulFunctionCall","src":"12911:20:13"}],"functionName":{"name":"mstore","nativeSrc":"12885:6:13","nodeType":"YulIdentifier","src":"12885:6:13"},"nativeSrc":"12885:47:13","nodeType":"YulFunctionCall","src":"12885:47:13"},"nativeSrc":"12885:47:13","nodeType":"YulExpressionStatement","src":"12885:47:13"},{"nativeSrc":"12941:139:13","nodeType":"YulAssignment","src":"12941:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"13075:4:13","nodeType":"YulIdentifier","src":"13075:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack","nativeSrc":"12949:124:13","nodeType":"YulIdentifier","src":"12949:124:13"},"nativeSrc":"12949:131:13","nodeType":"YulFunctionCall","src":"12949:131:13"},"variableNames":[{"name":"tail","nativeSrc":"12941:4:13","nodeType":"YulIdentifier","src":"12941:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12668:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12819:9:13","nodeType":"YulTypedName","src":"12819:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12834:4:13","nodeType":"YulTypedName","src":"12834:4:13","type":""}],"src":"12668:419:13"},{"body":{"nativeSrc":"13199:119:13","nodeType":"YulBlock","src":"13199:119:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13221:6:13","nodeType":"YulIdentifier","src":"13221:6:13"},{"kind":"number","nativeSrc":"13229:1:13","nodeType":"YulLiteral","src":"13229:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13217:3:13","nodeType":"YulIdentifier","src":"13217:3:13"},"nativeSrc":"13217:14:13","nodeType":"YulFunctionCall","src":"13217:14:13"},{"hexValue":"4475726174696f6e206d7573742062652067726561746572207468616e203120","kind":"string","nativeSrc":"13233:34:13","nodeType":"YulLiteral","src":"13233:34:13","type":"","value":"Duration must be greater than 1 "}],"functionName":{"name":"mstore","nativeSrc":"13210:6:13","nodeType":"YulIdentifier","src":"13210:6:13"},"nativeSrc":"13210:58:13","nodeType":"YulFunctionCall","src":"13210:58:13"},"nativeSrc":"13210:58:13","nodeType":"YulExpressionStatement","src":"13210:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13289:6:13","nodeType":"YulIdentifier","src":"13289:6:13"},{"kind":"number","nativeSrc":"13297:2:13","nodeType":"YulLiteral","src":"13297:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13285:3:13","nodeType":"YulIdentifier","src":"13285:3:13"},"nativeSrc":"13285:15:13","nodeType":"YulFunctionCall","src":"13285:15:13"},{"hexValue":"6d696e757465","kind":"string","nativeSrc":"13302:8:13","nodeType":"YulLiteral","src":"13302:8:13","type":"","value":"minute"}],"functionName":{"name":"mstore","nativeSrc":"13278:6:13","nodeType":"YulIdentifier","src":"13278:6:13"},"nativeSrc":"13278:33:13","nodeType":"YulFunctionCall","src":"13278:33:13"},"nativeSrc":"13278:33:13","nodeType":"YulExpressionStatement","src":"13278:33:13"}]},"name":"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","nativeSrc":"13093:225:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13191:6:13","nodeType":"YulTypedName","src":"13191:6:13","type":""}],"src":"13093:225:13"},{"body":{"nativeSrc":"13470:220:13","nodeType":"YulBlock","src":"13470:220:13","statements":[{"nativeSrc":"13480:74:13","nodeType":"YulAssignment","src":"13480:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"13546:3:13","nodeType":"YulIdentifier","src":"13546:3:13"},{"kind":"number","nativeSrc":"13551:2:13","nodeType":"YulLiteral","src":"13551:2:13","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13487:58:13","nodeType":"YulIdentifier","src":"13487:58:13"},"nativeSrc":"13487:67:13","nodeType":"YulFunctionCall","src":"13487:67:13"},"variableNames":[{"name":"pos","nativeSrc":"13480:3:13","nodeType":"YulIdentifier","src":"13480:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13652:3:13","nodeType":"YulIdentifier","src":"13652:3:13"}],"functionName":{"name":"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","nativeSrc":"13563:88:13","nodeType":"YulIdentifier","src":"13563:88:13"},"nativeSrc":"13563:93:13","nodeType":"YulFunctionCall","src":"13563:93:13"},"nativeSrc":"13563:93:13","nodeType":"YulExpressionStatement","src":"13563:93:13"},{"nativeSrc":"13665:19:13","nodeType":"YulAssignment","src":"13665:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"13676:3:13","nodeType":"YulIdentifier","src":"13676:3:13"},{"kind":"number","nativeSrc":"13681:2:13","nodeType":"YulLiteral","src":"13681:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13672:3:13","nodeType":"YulIdentifier","src":"13672:3:13"},"nativeSrc":"13672:12:13","nodeType":"YulFunctionCall","src":"13672:12:13"},"variableNames":[{"name":"end","nativeSrc":"13665:3:13","nodeType":"YulIdentifier","src":"13665:3:13"}]}]},"name":"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack","nativeSrc":"13324:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13458:3:13","nodeType":"YulTypedName","src":"13458:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13466:3:13","nodeType":"YulTypedName","src":"13466:3:13","type":""}],"src":"13324:366:13"},{"body":{"nativeSrc":"13867:248:13","nodeType":"YulBlock","src":"13867:248:13","statements":[{"nativeSrc":"13877:26:13","nodeType":"YulAssignment","src":"13877:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"13889:9:13","nodeType":"YulIdentifier","src":"13889:9:13"},{"kind":"number","nativeSrc":"13900:2:13","nodeType":"YulLiteral","src":"13900:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13885:3:13","nodeType":"YulIdentifier","src":"13885:3:13"},"nativeSrc":"13885:18:13","nodeType":"YulFunctionCall","src":"13885:18:13"},"variableNames":[{"name":"tail","nativeSrc":"13877:4:13","nodeType":"YulIdentifier","src":"13877:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13924:9:13","nodeType":"YulIdentifier","src":"13924:9:13"},{"kind":"number","nativeSrc":"13935:1:13","nodeType":"YulLiteral","src":"13935:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13920:3:13","nodeType":"YulIdentifier","src":"13920:3:13"},"nativeSrc":"13920:17:13","nodeType":"YulFunctionCall","src":"13920:17:13"},{"arguments":[{"name":"tail","nativeSrc":"13943:4:13","nodeType":"YulIdentifier","src":"13943:4:13"},{"name":"headStart","nativeSrc":"13949:9:13","nodeType":"YulIdentifier","src":"13949:9:13"}],"functionName":{"name":"sub","nativeSrc":"13939:3:13","nodeType":"YulIdentifier","src":"13939:3:13"},"nativeSrc":"13939:20:13","nodeType":"YulFunctionCall","src":"13939:20:13"}],"functionName":{"name":"mstore","nativeSrc":"13913:6:13","nodeType":"YulIdentifier","src":"13913:6:13"},"nativeSrc":"13913:47:13","nodeType":"YulFunctionCall","src":"13913:47:13"},"nativeSrc":"13913:47:13","nodeType":"YulExpressionStatement","src":"13913:47:13"},{"nativeSrc":"13969:139:13","nodeType":"YulAssignment","src":"13969:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"14103:4:13","nodeType":"YulIdentifier","src":"14103:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack","nativeSrc":"13977:124:13","nodeType":"YulIdentifier","src":"13977:124:13"},"nativeSrc":"13977:131:13","nodeType":"YulFunctionCall","src":"13977:131:13"},"variableNames":[{"name":"tail","nativeSrc":"13969:4:13","nodeType":"YulIdentifier","src":"13969:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13696:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13847:9:13","nodeType":"YulTypedName","src":"13847:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13862:4:13","nodeType":"YulTypedName","src":"13862:4:13","type":""}],"src":"13696:419:13"},{"body":{"nativeSrc":"14227:115:13","nodeType":"YulBlock","src":"14227:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14249:6:13","nodeType":"YulIdentifier","src":"14249:6:13"},{"kind":"number","nativeSrc":"14257:1:13","nodeType":"YulLiteral","src":"14257:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14245:3:13","nodeType":"YulIdentifier","src":"14245:3:13"},"nativeSrc":"14245:14:13","nodeType":"YulFunctionCall","src":"14245:14:13"},{"hexValue":"5374617274207072696365206d7573742062652067726561746572207468616e","kind":"string","nativeSrc":"14261:34:13","nodeType":"YulLiteral","src":"14261:34:13","type":"","value":"Start price must be greater than"}],"functionName":{"name":"mstore","nativeSrc":"14238:6:13","nodeType":"YulIdentifier","src":"14238:6:13"},"nativeSrc":"14238:58:13","nodeType":"YulFunctionCall","src":"14238:58:13"},"nativeSrc":"14238:58:13","nodeType":"YulExpressionStatement","src":"14238:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14317:6:13","nodeType":"YulIdentifier","src":"14317:6:13"},{"kind":"number","nativeSrc":"14325:2:13","nodeType":"YulLiteral","src":"14325:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14313:3:13","nodeType":"YulIdentifier","src":"14313:3:13"},"nativeSrc":"14313:15:13","nodeType":"YulFunctionCall","src":"14313:15:13"},{"hexValue":"2030","kind":"string","nativeSrc":"14330:4:13","nodeType":"YulLiteral","src":"14330:4:13","type":"","value":" 0"}],"functionName":{"name":"mstore","nativeSrc":"14306:6:13","nodeType":"YulIdentifier","src":"14306:6:13"},"nativeSrc":"14306:29:13","nodeType":"YulFunctionCall","src":"14306:29:13"},"nativeSrc":"14306:29:13","nodeType":"YulExpressionStatement","src":"14306:29:13"}]},"name":"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","nativeSrc":"14121:221:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14219:6:13","nodeType":"YulTypedName","src":"14219:6:13","type":""}],"src":"14121:221:13"},{"body":{"nativeSrc":"14494:220:13","nodeType":"YulBlock","src":"14494:220:13","statements":[{"nativeSrc":"14504:74:13","nodeType":"YulAssignment","src":"14504:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"14570:3:13","nodeType":"YulIdentifier","src":"14570:3:13"},{"kind":"number","nativeSrc":"14575:2:13","nodeType":"YulLiteral","src":"14575:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14511:58:13","nodeType":"YulIdentifier","src":"14511:58:13"},"nativeSrc":"14511:67:13","nodeType":"YulFunctionCall","src":"14511:67:13"},"variableNames":[{"name":"pos","nativeSrc":"14504:3:13","nodeType":"YulIdentifier","src":"14504:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14676:3:13","nodeType":"YulIdentifier","src":"14676:3:13"}],"functionName":{"name":"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","nativeSrc":"14587:88:13","nodeType":"YulIdentifier","src":"14587:88:13"},"nativeSrc":"14587:93:13","nodeType":"YulFunctionCall","src":"14587:93:13"},"nativeSrc":"14587:93:13","nodeType":"YulExpressionStatement","src":"14587:93:13"},{"nativeSrc":"14689:19:13","nodeType":"YulAssignment","src":"14689:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"14700:3:13","nodeType":"YulIdentifier","src":"14700:3:13"},{"kind":"number","nativeSrc":"14705:2:13","nodeType":"YulLiteral","src":"14705:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14696:3:13","nodeType":"YulIdentifier","src":"14696:3:13"},"nativeSrc":"14696:12:13","nodeType":"YulFunctionCall","src":"14696:12:13"},"variableNames":[{"name":"end","nativeSrc":"14689:3:13","nodeType":"YulIdentifier","src":"14689:3:13"}]}]},"name":"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack","nativeSrc":"14348:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14482:3:13","nodeType":"YulTypedName","src":"14482:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14490:3:13","nodeType":"YulTypedName","src":"14490:3:13","type":""}],"src":"14348:366:13"},{"body":{"nativeSrc":"14891:248:13","nodeType":"YulBlock","src":"14891:248:13","statements":[{"nativeSrc":"14901:26:13","nodeType":"YulAssignment","src":"14901:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"14913:9:13","nodeType":"YulIdentifier","src":"14913:9:13"},{"kind":"number","nativeSrc":"14924:2:13","nodeType":"YulLiteral","src":"14924:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14909:3:13","nodeType":"YulIdentifier","src":"14909:3:13"},"nativeSrc":"14909:18:13","nodeType":"YulFunctionCall","src":"14909:18:13"},"variableNames":[{"name":"tail","nativeSrc":"14901:4:13","nodeType":"YulIdentifier","src":"14901:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14948:9:13","nodeType":"YulIdentifier","src":"14948:9:13"},{"kind":"number","nativeSrc":"14959:1:13","nodeType":"YulLiteral","src":"14959:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14944:3:13","nodeType":"YulIdentifier","src":"14944:3:13"},"nativeSrc":"14944:17:13","nodeType":"YulFunctionCall","src":"14944:17:13"},{"arguments":[{"name":"tail","nativeSrc":"14967:4:13","nodeType":"YulIdentifier","src":"14967:4:13"},{"name":"headStart","nativeSrc":"14973:9:13","nodeType":"YulIdentifier","src":"14973:9:13"}],"functionName":{"name":"sub","nativeSrc":"14963:3:13","nodeType":"YulIdentifier","src":"14963:3:13"},"nativeSrc":"14963:20:13","nodeType":"YulFunctionCall","src":"14963:20:13"}],"functionName":{"name":"mstore","nativeSrc":"14937:6:13","nodeType":"YulIdentifier","src":"14937:6:13"},"nativeSrc":"14937:47:13","nodeType":"YulFunctionCall","src":"14937:47:13"},"nativeSrc":"14937:47:13","nodeType":"YulExpressionStatement","src":"14937:47:13"},{"nativeSrc":"14993:139:13","nodeType":"YulAssignment","src":"14993:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"15127:4:13","nodeType":"YulIdentifier","src":"15127:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack","nativeSrc":"15001:124:13","nodeType":"YulIdentifier","src":"15001:124:13"},"nativeSrc":"15001:131:13","nodeType":"YulFunctionCall","src":"15001:131:13"},"variableNames":[{"name":"tail","nativeSrc":"14993:4:13","nodeType":"YulIdentifier","src":"14993:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14720:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14871:9:13","nodeType":"YulTypedName","src":"14871:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14886:4:13","nodeType":"YulTypedName","src":"14886:4:13","type":""}],"src":"14720:419:13"},{"body":{"nativeSrc":"15188:190:13","nodeType":"YulBlock","src":"15188:190:13","statements":[{"nativeSrc":"15198:33:13","nodeType":"YulAssignment","src":"15198:33:13","value":{"arguments":[{"name":"value","nativeSrc":"15225:5:13","nodeType":"YulIdentifier","src":"15225:5:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"15207:17:13","nodeType":"YulIdentifier","src":"15207:17:13"},"nativeSrc":"15207:24:13","nodeType":"YulFunctionCall","src":"15207:24:13"},"variableNames":[{"name":"value","nativeSrc":"15198:5:13","nodeType":"YulIdentifier","src":"15198:5:13"}]},{"body":{"nativeSrc":"15321:22:13","nodeType":"YulBlock","src":"15321:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"15323:16:13","nodeType":"YulIdentifier","src":"15323:16:13"},"nativeSrc":"15323:18:13","nodeType":"YulFunctionCall","src":"15323:18:13"},"nativeSrc":"15323:18:13","nodeType":"YulExpressionStatement","src":"15323:18:13"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"15246:5:13","nodeType":"YulIdentifier","src":"15246:5:13"},{"kind":"number","nativeSrc":"15253:66:13","nodeType":"YulLiteral","src":"15253:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"15243:2:13","nodeType":"YulIdentifier","src":"15243:2:13"},"nativeSrc":"15243:77:13","nodeType":"YulFunctionCall","src":"15243:77:13"},"nativeSrc":"15240:103:13","nodeType":"YulIf","src":"15240:103:13"},{"nativeSrc":"15352:20:13","nodeType":"YulAssignment","src":"15352:20:13","value":{"arguments":[{"name":"value","nativeSrc":"15363:5:13","nodeType":"YulIdentifier","src":"15363:5:13"},{"kind":"number","nativeSrc":"15370:1:13","nodeType":"YulLiteral","src":"15370:1:13","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15359:3:13","nodeType":"YulIdentifier","src":"15359:3:13"},"nativeSrc":"15359:13:13","nodeType":"YulFunctionCall","src":"15359:13:13"},"variableNames":[{"name":"ret","nativeSrc":"15352:3:13","nodeType":"YulIdentifier","src":"15352:3:13"}]}]},"name":"increment_t_uint256","nativeSrc":"15145:233:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15174:5:13","nodeType":"YulTypedName","src":"15174:5:13","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"15184:3:13","nodeType":"YulTypedName","src":"15184:3:13","type":""}],"src":"15145:233:13"},{"body":{"nativeSrc":"15490:116:13","nodeType":"YulBlock","src":"15490:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15512:6:13","nodeType":"YulIdentifier","src":"15512:6:13"},{"kind":"number","nativeSrc":"15520:1:13","nodeType":"YulLiteral","src":"15520:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15508:3:13","nodeType":"YulIdentifier","src":"15508:3:13"},"nativeSrc":"15508:14:13","nodeType":"YulFunctionCall","src":"15508:14:13"},{"hexValue":"4f6e6c792061646d696e2063616e20757067726164652074686520636f6e7472","kind":"string","nativeSrc":"15524:34:13","nodeType":"YulLiteral","src":"15524:34:13","type":"","value":"Only admin can upgrade the contr"}],"functionName":{"name":"mstore","nativeSrc":"15501:6:13","nodeType":"YulIdentifier","src":"15501:6:13"},"nativeSrc":"15501:58:13","nodeType":"YulFunctionCall","src":"15501:58:13"},"nativeSrc":"15501:58:13","nodeType":"YulExpressionStatement","src":"15501:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15580:6:13","nodeType":"YulIdentifier","src":"15580:6:13"},{"kind":"number","nativeSrc":"15588:2:13","nodeType":"YulLiteral","src":"15588:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15576:3:13","nodeType":"YulIdentifier","src":"15576:3:13"},"nativeSrc":"15576:15:13","nodeType":"YulFunctionCall","src":"15576:15:13"},{"hexValue":"616374","kind":"string","nativeSrc":"15593:5:13","nodeType":"YulLiteral","src":"15593:5:13","type":"","value":"act"}],"functionName":{"name":"mstore","nativeSrc":"15569:6:13","nodeType":"YulIdentifier","src":"15569:6:13"},"nativeSrc":"15569:30:13","nodeType":"YulFunctionCall","src":"15569:30:13"},"nativeSrc":"15569:30:13","nodeType":"YulExpressionStatement","src":"15569:30:13"}]},"name":"store_literal_in_memory_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50","nativeSrc":"15384:222:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15482:6:13","nodeType":"YulTypedName","src":"15482:6:13","type":""}],"src":"15384:222:13"},{"body":{"nativeSrc":"15758:220:13","nodeType":"YulBlock","src":"15758:220:13","statements":[{"nativeSrc":"15768:74:13","nodeType":"YulAssignment","src":"15768:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"15834:3:13","nodeType":"YulIdentifier","src":"15834:3:13"},{"kind":"number","nativeSrc":"15839:2:13","nodeType":"YulLiteral","src":"15839:2:13","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15775:58:13","nodeType":"YulIdentifier","src":"15775:58:13"},"nativeSrc":"15775:67:13","nodeType":"YulFunctionCall","src":"15775:67:13"},"variableNames":[{"name":"pos","nativeSrc":"15768:3:13","nodeType":"YulIdentifier","src":"15768:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15940:3:13","nodeType":"YulIdentifier","src":"15940:3:13"}],"functionName":{"name":"store_literal_in_memory_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50","nativeSrc":"15851:88:13","nodeType":"YulIdentifier","src":"15851:88:13"},"nativeSrc":"15851:93:13","nodeType":"YulFunctionCall","src":"15851:93:13"},"nativeSrc":"15851:93:13","nodeType":"YulExpressionStatement","src":"15851:93:13"},{"nativeSrc":"15953:19:13","nodeType":"YulAssignment","src":"15953:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"15964:3:13","nodeType":"YulIdentifier","src":"15964:3:13"},{"kind":"number","nativeSrc":"15969:2:13","nodeType":"YulLiteral","src":"15969:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15960:3:13","nodeType":"YulIdentifier","src":"15960:3:13"},"nativeSrc":"15960:12:13","nodeType":"YulFunctionCall","src":"15960:12:13"},"variableNames":[{"name":"end","nativeSrc":"15953:3:13","nodeType":"YulIdentifier","src":"15953:3:13"}]}]},"name":"abi_encode_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50_to_t_string_memory_ptr_fromStack","nativeSrc":"15612:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15746:3:13","nodeType":"YulTypedName","src":"15746:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15754:3:13","nodeType":"YulTypedName","src":"15754:3:13","type":""}],"src":"15612:366:13"},{"body":{"nativeSrc":"16155:248:13","nodeType":"YulBlock","src":"16155:248:13","statements":[{"nativeSrc":"16165:26:13","nodeType":"YulAssignment","src":"16165:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"16177:9:13","nodeType":"YulIdentifier","src":"16177:9:13"},{"kind":"number","nativeSrc":"16188:2:13","nodeType":"YulLiteral","src":"16188:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16173:3:13","nodeType":"YulIdentifier","src":"16173:3:13"},"nativeSrc":"16173:18:13","nodeType":"YulFunctionCall","src":"16173:18:13"},"variableNames":[{"name":"tail","nativeSrc":"16165:4:13","nodeType":"YulIdentifier","src":"16165:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16212:9:13","nodeType":"YulIdentifier","src":"16212:9:13"},{"kind":"number","nativeSrc":"16223:1:13","nodeType":"YulLiteral","src":"16223:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16208:3:13","nodeType":"YulIdentifier","src":"16208:3:13"},"nativeSrc":"16208:17:13","nodeType":"YulFunctionCall","src":"16208:17:13"},{"arguments":[{"name":"tail","nativeSrc":"16231:4:13","nodeType":"YulIdentifier","src":"16231:4:13"},{"name":"headStart","nativeSrc":"16237:9:13","nodeType":"YulIdentifier","src":"16237:9:13"}],"functionName":{"name":"sub","nativeSrc":"16227:3:13","nodeType":"YulIdentifier","src":"16227:3:13"},"nativeSrc":"16227:20:13","nodeType":"YulFunctionCall","src":"16227:20:13"}],"functionName":{"name":"mstore","nativeSrc":"16201:6:13","nodeType":"YulIdentifier","src":"16201:6:13"},"nativeSrc":"16201:47:13","nodeType":"YulFunctionCall","src":"16201:47:13"},"nativeSrc":"16201:47:13","nodeType":"YulExpressionStatement","src":"16201:47:13"},{"nativeSrc":"16257:139:13","nodeType":"YulAssignment","src":"16257:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"16391:4:13","nodeType":"YulIdentifier","src":"16391:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50_to_t_string_memory_ptr_fromStack","nativeSrc":"16265:124:13","nodeType":"YulIdentifier","src":"16265:124:13"},"nativeSrc":"16265:131:13","nodeType":"YulFunctionCall","src":"16265:131:13"},"variableNames":[{"name":"tail","nativeSrc":"16257:4:13","nodeType":"YulIdentifier","src":"16257:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15984:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16135:9:13","nodeType":"YulTypedName","src":"16135:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16150:4:13","nodeType":"YulTypedName","src":"16150:4:13","type":""}],"src":"15984:419:13"},{"body":{"nativeSrc":"16452:79:13","nodeType":"YulBlock","src":"16452:79:13","statements":[{"body":{"nativeSrc":"16509:16:13","nodeType":"YulBlock","src":"16509:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16518:1:13","nodeType":"YulLiteral","src":"16518:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"16521:1:13","nodeType":"YulLiteral","src":"16521:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16511:6:13","nodeType":"YulIdentifier","src":"16511:6:13"},"nativeSrc":"16511:12:13","nodeType":"YulFunctionCall","src":"16511:12:13"},"nativeSrc":"16511:12:13","nodeType":"YulExpressionStatement","src":"16511:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16475:5:13","nodeType":"YulIdentifier","src":"16475:5:13"},{"arguments":[{"name":"value","nativeSrc":"16500:5:13","nodeType":"YulIdentifier","src":"16500:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"16482:17:13","nodeType":"YulIdentifier","src":"16482:17:13"},"nativeSrc":"16482:24:13","nodeType":"YulFunctionCall","src":"16482:24:13"}],"functionName":{"name":"eq","nativeSrc":"16472:2:13","nodeType":"YulIdentifier","src":"16472:2:13"},"nativeSrc":"16472:35:13","nodeType":"YulFunctionCall","src":"16472:35:13"}],"functionName":{"name":"iszero","nativeSrc":"16465:6:13","nodeType":"YulIdentifier","src":"16465:6:13"},"nativeSrc":"16465:43:13","nodeType":"YulFunctionCall","src":"16465:43:13"},"nativeSrc":"16462:63:13","nodeType":"YulIf","src":"16462:63:13"}]},"name":"validator_revert_t_bytes32","nativeSrc":"16409:122:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16445:5:13","nodeType":"YulTypedName","src":"16445:5:13","type":""}],"src":"16409:122:13"},{"body":{"nativeSrc":"16600:80:13","nodeType":"YulBlock","src":"16600:80:13","statements":[{"nativeSrc":"16610:22:13","nodeType":"YulAssignment","src":"16610:22:13","value":{"arguments":[{"name":"offset","nativeSrc":"16625:6:13","nodeType":"YulIdentifier","src":"16625:6:13"}],"functionName":{"name":"mload","nativeSrc":"16619:5:13","nodeType":"YulIdentifier","src":"16619:5:13"},"nativeSrc":"16619:13:13","nodeType":"YulFunctionCall","src":"16619:13:13"},"variableNames":[{"name":"value","nativeSrc":"16610:5:13","nodeType":"YulIdentifier","src":"16610:5:13"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16668:5:13","nodeType":"YulIdentifier","src":"16668:5:13"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"16641:26:13","nodeType":"YulIdentifier","src":"16641:26:13"},"nativeSrc":"16641:33:13","nodeType":"YulFunctionCall","src":"16641:33:13"},"nativeSrc":"16641:33:13","nodeType":"YulExpressionStatement","src":"16641:33:13"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"16537:143:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16578:6:13","nodeType":"YulTypedName","src":"16578:6:13","type":""},{"name":"end","nativeSrc":"16586:3:13","nodeType":"YulTypedName","src":"16586:3:13","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16594:5:13","nodeType":"YulTypedName","src":"16594:5:13","type":""}],"src":"16537:143:13"},{"body":{"nativeSrc":"16763:274:13","nodeType":"YulBlock","src":"16763:274:13","statements":[{"body":{"nativeSrc":"16809:83:13","nodeType":"YulBlock","src":"16809:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16811:77:13","nodeType":"YulIdentifier","src":"16811:77:13"},"nativeSrc":"16811:79:13","nodeType":"YulFunctionCall","src":"16811:79:13"},"nativeSrc":"16811:79:13","nodeType":"YulExpressionStatement","src":"16811:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16784:7:13","nodeType":"YulIdentifier","src":"16784:7:13"},{"name":"headStart","nativeSrc":"16793:9:13","nodeType":"YulIdentifier","src":"16793:9:13"}],"functionName":{"name":"sub","nativeSrc":"16780:3:13","nodeType":"YulIdentifier","src":"16780:3:13"},"nativeSrc":"16780:23:13","nodeType":"YulFunctionCall","src":"16780:23:13"},{"kind":"number","nativeSrc":"16805:2:13","nodeType":"YulLiteral","src":"16805:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16776:3:13","nodeType":"YulIdentifier","src":"16776:3:13"},"nativeSrc":"16776:32:13","nodeType":"YulFunctionCall","src":"16776:32:13"},"nativeSrc":"16773:119:13","nodeType":"YulIf","src":"16773:119:13"},{"nativeSrc":"16902:128:13","nodeType":"YulBlock","src":"16902:128:13","statements":[{"nativeSrc":"16917:15:13","nodeType":"YulVariableDeclaration","src":"16917:15:13","value":{"kind":"number","nativeSrc":"16931:1:13","nodeType":"YulLiteral","src":"16931:1:13","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16921:6:13","nodeType":"YulTypedName","src":"16921:6:13","type":""}]},{"nativeSrc":"16946:74:13","nodeType":"YulAssignment","src":"16946:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16992:9:13","nodeType":"YulIdentifier","src":"16992:9:13"},{"name":"offset","nativeSrc":"17003:6:13","nodeType":"YulIdentifier","src":"17003:6:13"}],"functionName":{"name":"add","nativeSrc":"16988:3:13","nodeType":"YulIdentifier","src":"16988:3:13"},"nativeSrc":"16988:22:13","nodeType":"YulFunctionCall","src":"16988:22:13"},{"name":"dataEnd","nativeSrc":"17012:7:13","nodeType":"YulIdentifier","src":"17012:7:13"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"16956:31:13","nodeType":"YulIdentifier","src":"16956:31:13"},"nativeSrc":"16956:64:13","nodeType":"YulFunctionCall","src":"16956:64:13"},"variableNames":[{"name":"value0","nativeSrc":"16946:6:13","nodeType":"YulIdentifier","src":"16946:6:13"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"16686:351:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16733:9:13","nodeType":"YulTypedName","src":"16733:9:13","type":""},{"name":"dataEnd","nativeSrc":"16744:7:13","nodeType":"YulTypedName","src":"16744:7:13","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16756:6:13","nodeType":"YulTypedName","src":"16756:6:13","type":""}],"src":"16686:351:13"},{"body":{"nativeSrc":"17101:40:13","nodeType":"YulBlock","src":"17101:40:13","statements":[{"nativeSrc":"17112:22:13","nodeType":"YulAssignment","src":"17112:22:13","value":{"arguments":[{"name":"value","nativeSrc":"17128:5:13","nodeType":"YulIdentifier","src":"17128:5:13"}],"functionName":{"name":"mload","nativeSrc":"17122:5:13","nodeType":"YulIdentifier","src":"17122:5:13"},"nativeSrc":"17122:12:13","nodeType":"YulFunctionCall","src":"17122:12:13"},"variableNames":[{"name":"length","nativeSrc":"17112:6:13","nodeType":"YulIdentifier","src":"17112:6:13"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17043:98:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17084:5:13","nodeType":"YulTypedName","src":"17084:5:13","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17094:6:13","nodeType":"YulTypedName","src":"17094:6:13","type":""}],"src":"17043:98:13"},{"body":{"nativeSrc":"17260:34:13","nodeType":"YulBlock","src":"17260:34:13","statements":[{"nativeSrc":"17270:18:13","nodeType":"YulAssignment","src":"17270:18:13","value":{"name":"pos","nativeSrc":"17285:3:13","nodeType":"YulIdentifier","src":"17285:3:13"},"variableNames":[{"name":"updated_pos","nativeSrc":"17270:11:13","nodeType":"YulIdentifier","src":"17270:11:13"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17147:147:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17232:3:13","nodeType":"YulTypedName","src":"17232:3:13","type":""},{"name":"length","nativeSrc":"17237:6:13","nodeType":"YulTypedName","src":"17237:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"17248:11:13","nodeType":"YulTypedName","src":"17248:11:13","type":""}],"src":"17147:147:13"},{"body":{"nativeSrc":"17408:278:13","nodeType":"YulBlock","src":"17408:278:13","statements":[{"nativeSrc":"17418:52:13","nodeType":"YulVariableDeclaration","src":"17418:52:13","value":{"arguments":[{"name":"value","nativeSrc":"17464:5:13","nodeType":"YulIdentifier","src":"17464:5:13"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17432:31:13","nodeType":"YulIdentifier","src":"17432:31:13"},"nativeSrc":"17432:38:13","nodeType":"YulFunctionCall","src":"17432:38:13"},"variables":[{"name":"length","nativeSrc":"17422:6:13","nodeType":"YulTypedName","src":"17422:6:13","type":""}]},{"nativeSrc":"17479:95:13","nodeType":"YulAssignment","src":"17479:95:13","value":{"arguments":[{"name":"pos","nativeSrc":"17562:3:13","nodeType":"YulIdentifier","src":"17562:3:13"},{"name":"length","nativeSrc":"17567:6:13","nodeType":"YulIdentifier","src":"17567:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17486:75:13","nodeType":"YulIdentifier","src":"17486:75:13"},"nativeSrc":"17486:88:13","nodeType":"YulFunctionCall","src":"17486:88:13"},"variableNames":[{"name":"pos","nativeSrc":"17479:3:13","nodeType":"YulIdentifier","src":"17479:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17622:5:13","nodeType":"YulIdentifier","src":"17622:5:13"},{"kind":"number","nativeSrc":"17629:4:13","nodeType":"YulLiteral","src":"17629:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17618:3:13","nodeType":"YulIdentifier","src":"17618:3:13"},"nativeSrc":"17618:16:13","nodeType":"YulFunctionCall","src":"17618:16:13"},{"name":"pos","nativeSrc":"17636:3:13","nodeType":"YulIdentifier","src":"17636:3:13"},{"name":"length","nativeSrc":"17641:6:13","nodeType":"YulIdentifier","src":"17641:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"17583:34:13","nodeType":"YulIdentifier","src":"17583:34:13"},"nativeSrc":"17583:65:13","nodeType":"YulFunctionCall","src":"17583:65:13"},"nativeSrc":"17583:65:13","nodeType":"YulExpressionStatement","src":"17583:65:13"},{"nativeSrc":"17657:23:13","nodeType":"YulAssignment","src":"17657:23:13","value":{"arguments":[{"name":"pos","nativeSrc":"17668:3:13","nodeType":"YulIdentifier","src":"17668:3:13"},{"name":"length","nativeSrc":"17673:6:13","nodeType":"YulIdentifier","src":"17673:6:13"}],"functionName":{"name":"add","nativeSrc":"17664:3:13","nodeType":"YulIdentifier","src":"17664:3:13"},"nativeSrc":"17664:16:13","nodeType":"YulFunctionCall","src":"17664:16:13"},"variableNames":[{"name":"end","nativeSrc":"17657:3:13","nodeType":"YulIdentifier","src":"17657:3:13"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17300:386:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17389:5:13","nodeType":"YulTypedName","src":"17389:5:13","type":""},{"name":"pos","nativeSrc":"17396:3:13","nodeType":"YulTypedName","src":"17396:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17404:3:13","nodeType":"YulTypedName","src":"17404:3:13","type":""}],"src":"17300:386:13"},{"body":{"nativeSrc":"17826:137:13","nodeType":"YulBlock","src":"17826:137:13","statements":[{"nativeSrc":"17837:100:13","nodeType":"YulAssignment","src":"17837:100:13","value":{"arguments":[{"name":"value0","nativeSrc":"17924:6:13","nodeType":"YulIdentifier","src":"17924:6:13"},{"name":"pos","nativeSrc":"17933:3:13","nodeType":"YulIdentifier","src":"17933:3:13"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17844:79:13","nodeType":"YulIdentifier","src":"17844:79:13"},"nativeSrc":"17844:93:13","nodeType":"YulFunctionCall","src":"17844:93:13"},"variableNames":[{"name":"pos","nativeSrc":"17837:3:13","nodeType":"YulIdentifier","src":"17837:3:13"}]},{"nativeSrc":"17947:10:13","nodeType":"YulAssignment","src":"17947:10:13","value":{"name":"pos","nativeSrc":"17954:3:13","nodeType":"YulIdentifier","src":"17954:3:13"},"variableNames":[{"name":"end","nativeSrc":"17947:3:13","nodeType":"YulIdentifier","src":"17947:3:13"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17692:271:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17805:3:13","nodeType":"YulTypedName","src":"17805:3:13","type":""},{"name":"value0","nativeSrc":"17811:6:13","nodeType":"YulTypedName","src":"17811:6:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17822:3:13","nodeType":"YulTypedName","src":"17822:3:13","type":""}],"src":"17692:271:13"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than current \")\n\n        mstore(add(memPtr, 32), \"highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can perform this acti\")\n\n        mstore(add(memPtr, 32), \"on\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than 1 \")\n\n        mstore(add(memPtr, 32), \"minute\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start price must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can upgrade the contr\")\n\n        mstore(add(memPtr, 32), \"act\")\n\n    }\n\n    function abi_encode_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1bd842a13195c52ed60ae7c3fe13500d8b0d553f6edb5ee6f05048c66f1fda50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"287":[{"length":32,"start":2660},{"length":32,"start":2745},{"length":32,"start":3468}]},"linkReferences":{},"object":"6080604052600436106100915760003560e01c80639979ef45116100595780639979ef4514610164578063ad3cb1cc14610180578063b1cb48ef146101ab578063f851a440146101d4578063fc528482146101ff57610091565b806326232a2e146100965780634f1ef286146100c157806352d1902d146100dd578063571a26a0146101085780638129fc1c1461014d575b600080fd5b3480156100a257600080fd5b506100ab61022a565b6040516100b8919061119e565b60405180910390f35b6100db60048036038101906100d69190611371565b610230565b005b3480156100e957600080fd5b506100f261024f565b6040516100ff91906113e6565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a919061142d565b610282565b60405161014499989796959493929190611484565b60405180910390f35b34801561015957600080fd5b5061016261033d565b005b61017e6004803603810190610179919061142d565b610503565b005b34801561018c57600080fd5b506101956106f7565b6040516101a29190611590565b60405180910390f35b3480156101b757600080fd5b506101d260048036038101906101cd91906115b2565b610730565b005b3480156101e057600080fd5b506101e9610a36565b6040516101f69190611619565b60405180910390f35b34801561020b57600080fd5b50610214610a5c565b604051610221919061119e565b60405180910390f35b60035481565b610238610a62565b61024182610b48565b61024b8282610c6b565b5050565b6000610259610d8a565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b6000610347610e11565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156103955750825b9050600060018367ffffffffffffffff161480156103ca575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156103d8575080155b1561040f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561045f5760018560000160086101000a81548160ff0219169083151502179055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156104fc5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104f3919061168d565b60405180910390a15b5050505050565b600080600083815260200190815260200160002090508060040160009054906101000a900460ff1615801561054a5750428160010154826002015461054891906116d7565b115b610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058090611757565b60405180910390fd5b8060050154341180156105a0575080600301543410155b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906117e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a7578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600501549081150290604051600060405180830381858888f193505050501580156106a5573d6000803e3d6000fd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b79061187b565b60405180910390fd5b61ea608411610804576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fb9061190d565b60405180910390fd5b60008311610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e9061199f565b60405180910390fd5b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001854261087b91906116d7565b8152602001428152602001848152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100820151816007015590505060016000815480929190610a2b906119bf565b919050555050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610b0f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610af6610e25565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610b46576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcf9061187b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5f90611a79565b60405180910390fd5b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cd357506040513d601f19601f82011682018060405250810190610cd09190611ac5565b60015b610d1457816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610d0b9190611619565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610d7b57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610d7291906113e6565b60405180910390fd5b610d858383610e7c565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610e0f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080610e1c610eef565b90508091505090565b6000610e537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f1a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e8582610f24565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ee257610edc8282610ff1565b50610eeb565b610eea611075565b5b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03610f8057806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610f779190611619565b60405180910390fd5b80610fad7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610f1a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161101b9190611b39565b600060405180830381855af49150503d8060008114611056576040519150601f19603f3d011682016040523d82523d6000602084013e61105b565b606091505b509150915061106b8583836110b2565b9250505092915050565b60003411156110b0576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826110c7576110c282611141565b611139565b600082511480156110ef575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561113157836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111289190611619565b60405180910390fd5b81905061113a565b5b9392505050565b60008151111561115357805160208201fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61119881611185565b82525050565b60006020820190506111b3600083018461118f565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f8826111cd565b9050919050565b611208816111ed565b811461121357600080fd5b50565b600081359050611225816111ff565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61127e82611235565b810181811067ffffffffffffffff8211171561129d5761129c611246565b5b80604052505050565b60006112b06111b9565b90506112bc8282611275565b919050565b600067ffffffffffffffff8211156112dc576112db611246565b5b6112e582611235565b9050602081019050919050565b82818337600083830152505050565b600061131461130f846112c1565b6112a6565b9050828152602081018484840111156113305761132f611230565b5b61133b8482856112f2565b509392505050565b600082601f8301126113585761135761122b565b5b8135611368848260208601611301565b91505092915050565b60008060408385031215611388576113876111c3565b5b600061139685828601611216565b925050602083013567ffffffffffffffff8111156113b7576113b66111c8565b5b6113c385828601611343565b9150509250929050565b6000819050919050565b6113e0816113cd565b82525050565b60006020820190506113fb60008301846113d7565b92915050565b61140a81611185565b811461141557600080fd5b50565b60008135905061142781611401565b92915050565b600060208284031215611443576114426111c3565b5b600061145184828501611418565b91505092915050565b611463816111ed565b82525050565b60008115159050919050565b61147e81611469565b82525050565b60006101208201905061149a600083018c61145a565b6114a7602083018b61118f565b6114b4604083018a61118f565b6114c1606083018961118f565b6114ce6080830188611475565b6114db60a083018761145a565b6114e860c083018661118f565b6114f560e083018561145a565b61150361010083018461118f565b9a9950505050505050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561154b578082015181840152602081019050611530565b60008484015250505050565b600061156282611511565b61156c818561151c565b935061157c81856020860161152d565b61158581611235565b840191505092915050565b600060208201905081810360008301526115aa8184611557565b905092915050565b600080600080608085870312156115cc576115cb6111c3565b5b60006115da87828801611418565b94505060206115eb87828801611418565b93505060406115fc87828801611216565b925050606061160d87828801611418565b91505092959194509250565b600060208201905061162e600083018461145a565b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061167761167261166d84611634565b611652565b61163e565b9050919050565b6116878161165c565b82525050565b60006020820190506116a2600083018461167e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116e282611185565b91506116ed83611185565b9250828201905080821115611705576117046116a8565b5b92915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b600061174160118361151c565b915061174c8261170b565b602082019050919050565b6000602082019050818103600083015261177081611734565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e742060008201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b60006117d3602b8361151c565b91506117de82611777565b604082019050919050565b60006020820190508181036000830152611802816117c6565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b600061186560228361151c565b915061187082611809565b604082019050919050565b6000602082019050818103600083015261189481611858565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e20312060008201527f6d696e7574650000000000000000000000000000000000000000000000000000602082015250565b60006118f760268361151c565b91506119028261189b565b604082019050919050565b60006020820190508181036000830152611926816118ea565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b600061198960228361151c565b91506119948261192d565b604082019050919050565b600060208201905081810360008301526119b88161197c565b9050919050565b60006119ca82611185565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119fc576119fb6116a8565b5b600182019050919050565b7f4f6e6c792061646d696e2063616e20757067726164652074686520636f6e747260008201527f6163740000000000000000000000000000000000000000000000000000000000602082015250565b6000611a6360238361151c565b9150611a6e82611a07565b604082019050919050565b60006020820190508181036000830152611a9281611a56565b9050919050565b611aa2816113cd565b8114611aad57600080fd5b50565b600081519050611abf81611a99565b92915050565b600060208284031215611adb57611ada6111c3565b5b6000611ae984828501611ab0565b91505092915050565b600081519050919050565b600081905092915050565b6000611b1382611af2565b611b1d8185611afd565b9350611b2d81856020860161152d565b80840191505092915050565b6000611b458284611b08565b91508190509291505056fea2646970667358221220167a128c397519117479a3fd535b6a5f603afe9b3ed7517dbce2d8d5dc36f62d64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9979EF45 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x1FF JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x33D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x214 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x238 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x241 DUP3 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0x24B DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 PUSH2 0xD8A JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x395 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3CA JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3D8 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x45F JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x54A JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST GT JUMPDEST PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x580 SWAP1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x5A0 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D6 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A7 JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FB SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x199F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA2B SWAP1 PUSH2 0x19BF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB0F JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF6 PUSH2 0xE25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCF SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5F SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD14 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0xD7B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD85 DUP4 DUP4 PUSH2 0xE7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE1C PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE85 DUP3 PUSH2 0xF24 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xEE2 JUMPI PUSH2 0xEDC DUP3 DUP3 PUSH2 0xFF1 JUMP JUMPDEST POP PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xEEA PUSH2 0x1075 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0xF80 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xFAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1056 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x105B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x106B DUP6 DUP4 DUP4 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x10C7 JUMPI PUSH2 0x10C2 DUP3 PUSH2 0x1141 JUMP JUMPDEST PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x10EF JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1131 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1128 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x113A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1153 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1198 DUP2 PUSH2 0x1185 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x118F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 DUP3 PUSH2 0x11CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1208 DUP2 PUSH2 0x11ED JUMP JUMPDEST DUP2 EQ PUSH2 0x1213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1225 DUP2 PUSH2 0x11FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x127E DUP3 PUSH2 0x1235 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x129D JUMPI PUSH2 0x129C PUSH2 0x1246 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 PUSH2 0x11B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x12BC DUP3 DUP3 PUSH2 0x1275 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12DC JUMPI PUSH2 0x12DB PUSH2 0x1246 JUMP JUMPDEST JUMPDEST PUSH2 0x12E5 DUP3 PUSH2 0x1235 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1314 PUSH2 0x130F DUP5 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x12A6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0x1230 JUMP JUMPDEST JUMPDEST PUSH2 0x133B DUP5 DUP3 DUP6 PUSH2 0x12F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1358 JUMPI PUSH2 0x1357 PUSH2 0x122B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1368 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1396 DUP6 DUP3 DUP7 ADD PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x13B6 PUSH2 0x11C8 JUMP JUMPDEST JUMPDEST PUSH2 0x13C3 DUP6 DUP3 DUP7 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E0 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140A DUP2 PUSH2 0x1185 JUMP JUMPDEST DUP2 EQ PUSH2 0x1415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1427 DUP2 PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1451 DUP5 DUP3 DUP6 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x11ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147E DUP2 PUSH2 0x1469 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x149A PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x14A7 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14B4 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14C1 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14CE PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1475 JUMP JUMPDEST PUSH2 0x14DB PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x14E8 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x14F5 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x145A JUMP JUMPDEST PUSH2 0x1503 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x118F JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x154B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1562 DUP3 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x156C DUP2 DUP6 PUSH2 0x151C JUMP JUMPDEST SWAP4 POP PUSH2 0x157C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x152D JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AA DUP2 DUP5 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH2 0x15CB PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15DA DUP8 DUP3 DUP9 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x15EB DUP8 DUP3 DUP9 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x15FC DUP8 DUP3 DUP9 ADD PUSH2 0x1216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x160D DUP8 DUP3 DUP9 ADD PUSH2 0x1418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x162E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1677 PUSH2 0x1672 PUSH2 0x166D DUP5 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x163E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1687 DUP2 PUSH2 0x165C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x167E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH2 0x16ED DUP4 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1704 PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1741 PUSH1 0x11 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x174C DUP3 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1770 DUP2 PUSH2 0x1734 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D3 PUSH1 0x2B DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x17DE DUP3 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1802 DUP2 PUSH2 0x17C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 PUSH1 0x22 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1870 DUP3 PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1894 DUP2 PUSH2 0x1858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D696E7574650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F7 PUSH1 0x26 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1902 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1926 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1989 PUSH1 0x22 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1994 DUP3 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19B8 DUP2 PUSH2 0x197C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CA DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19FC JUMPI PUSH2 0x19FB PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20757067726164652074686520636F6E7472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 PUSH1 0x23 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6E DUP3 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A92 DUP2 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA2 DUP2 PUSH2 0x13CD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1ABF DUP2 PUSH2 0x1A99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x11C3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE9 DUP5 DUP3 DUP6 ADD PUSH2 0x1AB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x1B1D DUP2 DUP6 PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x152D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B45 DUP3 DUP5 PUSH2 0x1B08 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH27 0x128C397519117479A3FD535B6A5F603AFE9B3ED7517DBCE2D8D5DC CALLDATASIZE 0xF6 0x2D PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"291:2540:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:214:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;854:43:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;395:76;;;;;;;;;;;;;:::i;:::-;;1980:677;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1266:682:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;937:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;903:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;963:26;;;;:::o;4161:214:1:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:4::1;3803:32:1;;3796:39;;3708:134:::0;:::o;854:43:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;395:76::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;454:10:11::1;446:5;;:18;;;;;;;;;;;;;;;;;;5068:14:0::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;395:76:11:o;1980:677::-;2045:23;2071:8;:20;2080:10;2071:20;;;;;;;;;;;2045:46;;2160:7;:13;;;;;;;;;;;;2159:14;:72;;;;;2216:15;2197:7;:16;;;2177:7;:17;;;:36;;;;:::i;:::-;:54;2159:72;2151:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2283:7;:18;;;2271:9;:30;:65;;;;;2318:7;:18;;;2305:9;:31;;2271:65;2263:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2478:1;2445:35;;:7;:21;;;;;;;;;;;;:35;;;2441:125;;2504:7;:21;;;;;;;;;;;;2496:39;;:59;2536:7;:18;;;2496:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:125;2600:10;2576:7;:21;;;:34;;;;;;;;;;;;;;;;;;2641:9;2620:7;:18;;:30;;;;2035:622;1980:677;:::o;1819:58:1:-;;;;;;;;;;;;;;;;;;;:::o;1266:682:11:-;1179:5;;;;;;;;;;;1165:19;;:10;:19;;;1157:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1415:9:::1;1403;:21;1395:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1499:1;1485:11;:15;1477:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1576:339;;;;;;;;1606:10;1576:339;;;;;;1658:9;1640:15;:27;;;;:::i;:::-;1576:339;;;;1692:15;1576:339;;;;1733:11;1576:339;;;;1765:5;1576:339;;;;;;1807:1;1576:339;;;;;;1835:1;1576:339;;;;1862:11;1576:339;;;;;;1896:8;1576:339;;::::0;1550:8:::1;:23:::0;1559:13:::1;;1550:23;;;;;;;;;;;:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:13;;:15;;;;;;;;;:::i;:::-;;;;;;1266:682:::0;;;;:::o;937:20::-;;;;;;;;;;;;;:::o;903:28::-;;;;:::o;4578:312:1:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;2662:166:11:-;1179:5;;;;;;;;;;;1165:19;;:10;:19;;;1157:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2776:5:::1;;;;;;;;;;;2762:19;;:10;:19;;;2754:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2662:166:::0;:::o;6032:538:1:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:4;6233:32:1;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;9071:205:0:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1441:138:4:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;8819:122:0:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;1899:163:9:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:4:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:7:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:4:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;4437:582:7:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:434::-;5710:1;5690:10;:17;:21;5686:301;;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;;;;;;;;;;;;;7:77:13;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:117::-;1385:1;1382;1375:12;1399:117;1508:1;1505;1498:12;1522:102;1563:6;1614:2;1610:7;1605:2;1598:5;1594:14;1590:28;1580:38;;1522:102;;;:::o;1630:180::-;1678:77;1675:1;1668:88;1775:4;1772:1;1765:15;1799:4;1796:1;1789:15;1816:281;1899:27;1921:4;1899:27;:::i;:::-;1891:6;1887:40;2029:6;2017:10;2014:22;1993:18;1981:10;1978:34;1975:62;1972:88;;;2040:18;;:::i;:::-;1972:88;2080:10;2076:2;2069:22;1859:238;1816:281;;:::o;2103:129::-;2137:6;2164:20;;:::i;:::-;2154:30;;2193:33;2221:4;2213:6;2193:33;:::i;:::-;2103:129;;;:::o;2238:307::-;2299:4;2389:18;2381:6;2378:30;2375:56;;;2411:18;;:::i;:::-;2375:56;2449:29;2471:6;2449:29;:::i;:::-;2441:37;;2533:4;2527;2523:15;2515:23;;2238:307;;;:::o;2551:148::-;2649:6;2644:3;2639;2626:30;2690:1;2681:6;2676:3;2672:16;2665:27;2551:148;;;:::o;2705:423::-;2782:5;2807:65;2823:48;2864:6;2823:48;:::i;:::-;2807:65;:::i;:::-;2798:74;;2895:6;2888:5;2881:21;2933:4;2926:5;2922:16;2971:3;2962:6;2957:3;2953:16;2950:25;2947:112;;;2978:79;;:::i;:::-;2947:112;3068:54;3115:6;3110:3;3105;3068:54;:::i;:::-;2788:340;2705:423;;;;;:::o;3147:338::-;3202:5;3251:3;3244:4;3236:6;3232:17;3228:27;3218:122;;3259:79;;:::i;:::-;3218:122;3376:6;3363:20;3401:78;3475:3;3467:6;3460:4;3452:6;3448:17;3401:78;:::i;:::-;3392:87;;3208:277;3147:338;;;;:::o;3491:652::-;3568:6;3576;3625:2;3613:9;3604:7;3600:23;3596:32;3593:119;;;3631:79;;:::i;:::-;3593:119;3751:1;3776:53;3821:7;3812:6;3801:9;3797:22;3776:53;:::i;:::-;3766:63;;3722:117;3906:2;3895:9;3891:18;3878:32;3937:18;3929:6;3926:30;3923:117;;;3959:79;;:::i;:::-;3923:117;4064:62;4118:7;4109:6;4098:9;4094:22;4064:62;:::i;:::-;4054:72;;3849:287;3491:652;;;;;:::o;4149:77::-;4186:7;4215:5;4204:16;;4149:77;;;:::o;4232:118::-;4319:24;4337:5;4319:24;:::i;:::-;4314:3;4307:37;4232:118;;:::o;4356:222::-;4449:4;4487:2;4476:9;4472:18;4464:26;;4500:71;4568:1;4557:9;4553:17;4544:6;4500:71;:::i;:::-;4356:222;;;;:::o;4584:122::-;4657:24;4675:5;4657:24;:::i;:::-;4650:5;4647:35;4637:63;;4696:1;4693;4686:12;4637:63;4584:122;:::o;4712:139::-;4758:5;4796:6;4783:20;4774:29;;4812:33;4839:5;4812:33;:::i;:::-;4712:139;;;;:::o;4857:329::-;4916:6;4965:2;4953:9;4944:7;4940:23;4936:32;4933:119;;;4971:79;;:::i;:::-;4933:119;5091:1;5116:53;5161:7;5152:6;5141:9;5137:22;5116:53;:::i;:::-;5106:63;;5062:117;4857:329;;;;:::o;5192:118::-;5279:24;5297:5;5279:24;:::i;:::-;5274:3;5267:37;5192:118;;:::o;5316:90::-;5350:7;5393:5;5386:13;5379:21;5368:32;;5316:90;;;:::o;5412:109::-;5493:21;5508:5;5493:21;:::i;:::-;5488:3;5481:34;5412:109;;:::o;5527:1096::-;5838:4;5876:3;5865:9;5861:19;5853:27;;5890:71;5958:1;5947:9;5943:17;5934:6;5890:71;:::i;:::-;5971:72;6039:2;6028:9;6024:18;6015:6;5971:72;:::i;:::-;6053;6121:2;6110:9;6106:18;6097:6;6053:72;:::i;:::-;6135;6203:2;6192:9;6188:18;6179:6;6135:72;:::i;:::-;6217:67;6279:3;6268:9;6264:19;6255:6;6217:67;:::i;:::-;6294:73;6362:3;6351:9;6347:19;6338:6;6294:73;:::i;:::-;6377;6445:3;6434:9;6430:19;6421:6;6377:73;:::i;:::-;6460;6528:3;6517:9;6513:19;6504:6;6460:73;:::i;:::-;6543;6611:3;6600:9;6596:19;6587:6;6543:73;:::i;:::-;5527:1096;;;;;;;;;;;;:::o;6629:99::-;6681:6;6715:5;6709:12;6699:22;;6629:99;;;:::o;6734:169::-;6818:11;6852:6;6847:3;6840:19;6892:4;6887:3;6883:14;6868:29;;6734:169;;;;:::o;6909:248::-;6991:1;7001:113;7015:6;7012:1;7009:13;7001:113;;;7100:1;7095:3;7091:11;7085:18;7081:1;7076:3;7072:11;7065:39;7037:2;7034:1;7030:10;7025:15;;7001:113;;;7148:1;7139:6;7134:3;7130:16;7123:27;6971:186;6909:248;;;:::o;7163:377::-;7251:3;7279:39;7312:5;7279:39;:::i;:::-;7334:71;7398:6;7393:3;7334:71;:::i;:::-;7327:78;;7414:65;7472:6;7467:3;7460:4;7453:5;7449:16;7414:65;:::i;:::-;7504:29;7526:6;7504:29;:::i;:::-;7499:3;7495:39;7488:46;;7255:285;7163:377;;;;:::o;7546:313::-;7659:4;7697:2;7686:9;7682:18;7674:26;;7746:9;7740:4;7736:20;7732:1;7721:9;7717:17;7710:47;7774:78;7847:4;7838:6;7774:78;:::i;:::-;7766:86;;7546:313;;;;:::o;7865:765::-;7951:6;7959;7967;7975;8024:3;8012:9;8003:7;7999:23;7995:33;7992:120;;;8031:79;;:::i;:::-;7992:120;8151:1;8176:53;8221:7;8212:6;8201:9;8197:22;8176:53;:::i;:::-;8166:63;;8122:117;8278:2;8304:53;8349:7;8340:6;8329:9;8325:22;8304:53;:::i;:::-;8294:63;;8249:118;8406:2;8432:53;8477:7;8468:6;8457:9;8453:22;8432:53;:::i;:::-;8422:63;;8377:118;8534:2;8560:53;8605:7;8596:6;8585:9;8581:22;8560:53;:::i;:::-;8550:63;;8505:118;7865:765;;;;;;;:::o;8636:222::-;8729:4;8767:2;8756:9;8752:18;8744:26;;8780:71;8848:1;8837:9;8833:17;8824:6;8780:71;:::i;:::-;8636:222;;;;:::o;8864:85::-;8909:7;8938:5;8927:16;;8864:85;;;:::o;8955:101::-;8991:7;9031:18;9024:5;9020:30;9009:41;;8955:101;;;:::o;9062:60::-;9090:3;9111:5;9104:12;;9062:60;;;:::o;9128:156::-;9185:9;9218:60;9235:42;9244:32;9270:5;9244:32;:::i;:::-;9235:42;:::i;:::-;9218:60;:::i;:::-;9205:73;;9128:156;;;:::o;9290:145::-;9384:44;9422:5;9384:44;:::i;:::-;9379:3;9372:57;9290:145;;:::o;9441:236::-;9541:4;9579:2;9568:9;9564:18;9556:26;;9592:78;9667:1;9656:9;9652:17;9643:6;9592:78;:::i;:::-;9441:236;;;;:::o;9683:180::-;9731:77;9728:1;9721:88;9828:4;9825:1;9818:15;9852:4;9849:1;9842:15;9869:191;9909:3;9928:20;9946:1;9928:20;:::i;:::-;9923:25;;9962:20;9980:1;9962:20;:::i;:::-;9957:25;;10005:1;10002;9998:9;9991:16;;10026:3;10023:1;10020:10;10017:36;;;10033:18;;:::i;:::-;10017:36;9869:191;;;;:::o;10066:167::-;10206:19;10202:1;10194:6;10190:14;10183:43;10066:167;:::o;10239:366::-;10381:3;10402:67;10466:2;10461:3;10402:67;:::i;:::-;10395:74;;10478:93;10567:3;10478:93;:::i;:::-;10596:2;10591:3;10587:12;10580:19;;10239:366;;;:::o;10611:419::-;10777:4;10815:2;10804:9;10800:18;10792:26;;10864:9;10858:4;10854:20;10850:1;10839:9;10835:17;10828:47;10892:131;11018:4;10892:131;:::i;:::-;10884:139;;10611:419;;;:::o;11036:230::-;11176:34;11172:1;11164:6;11160:14;11153:58;11245:13;11240:2;11232:6;11228:15;11221:38;11036:230;:::o;11272:366::-;11414:3;11435:67;11499:2;11494:3;11435:67;:::i;:::-;11428:74;;11511:93;11600:3;11511:93;:::i;:::-;11629:2;11624:3;11620:12;11613:19;;11272:366;;;:::o;11644:419::-;11810:4;11848:2;11837:9;11833:18;11825:26;;11897:9;11891:4;11887:20;11883:1;11872:9;11868:17;11861:47;11925:131;12051:4;11925:131;:::i;:::-;11917:139;;11644:419;;;:::o;12069:221::-;12209:34;12205:1;12197:6;12193:14;12186:58;12278:4;12273:2;12265:6;12261:15;12254:29;12069:221;:::o;12296:366::-;12438:3;12459:67;12523:2;12518:3;12459:67;:::i;:::-;12452:74;;12535:93;12624:3;12535:93;:::i;:::-;12653:2;12648:3;12644:12;12637:19;;12296:366;;;:::o;12668:419::-;12834:4;12872:2;12861:9;12857:18;12849:26;;12921:9;12915:4;12911:20;12907:1;12896:9;12892:17;12885:47;12949:131;13075:4;12949:131;:::i;:::-;12941:139;;12668:419;;;:::o;13093:225::-;13233:34;13229:1;13221:6;13217:14;13210:58;13302:8;13297:2;13289:6;13285:15;13278:33;13093:225;:::o;13324:366::-;13466:3;13487:67;13551:2;13546:3;13487:67;:::i;:::-;13480:74;;13563:93;13652:3;13563:93;:::i;:::-;13681:2;13676:3;13672:12;13665:19;;13324:366;;;:::o;13696:419::-;13862:4;13900:2;13889:9;13885:18;13877:26;;13949:9;13943:4;13939:20;13935:1;13924:9;13920:17;13913:47;13977:131;14103:4;13977:131;:::i;:::-;13969:139;;13696:419;;;:::o;14121:221::-;14261:34;14257:1;14249:6;14245:14;14238:58;14330:4;14325:2;14317:6;14313:15;14306:29;14121:221;:::o;14348:366::-;14490:3;14511:67;14575:2;14570:3;14511:67;:::i;:::-;14504:74;;14587:93;14676:3;14587:93;:::i;:::-;14705:2;14700:3;14696:12;14689:19;;14348:366;;;:::o;14720:419::-;14886:4;14924:2;14913:9;14909:18;14901:26;;14973:9;14967:4;14963:20;14959:1;14948:9;14944:17;14937:47;15001:131;15127:4;15001:131;:::i;:::-;14993:139;;14720:419;;;:::o;15145:233::-;15184:3;15207:24;15225:5;15207:24;:::i;:::-;15198:33;;15253:66;15246:5;15243:77;15240:103;;15323:18;;:::i;:::-;15240:103;15370:1;15363:5;15359:13;15352:20;;15145:233;;;:::o;15384:222::-;15524:34;15520:1;15512:6;15508:14;15501:58;15593:5;15588:2;15580:6;15576:15;15569:30;15384:222;:::o;15612:366::-;15754:3;15775:67;15839:2;15834:3;15775:67;:::i;:::-;15768:74;;15851:93;15940:3;15851:93;:::i;:::-;15969:2;15964:3;15960:12;15953:19;;15612:366;;;:::o;15984:419::-;16150:4;16188:2;16177:9;16173:18;16165:26;;16237:9;16231:4;16227:20;16223:1;16212:9;16208:17;16201:47;16265:131;16391:4;16265:131;:::i;:::-;16257:139;;15984:419;;;:::o;16409:122::-;16482:24;16500:5;16482:24;:::i;:::-;16475:5;16472:35;16462:63;;16521:1;16518;16511:12;16462:63;16409:122;:::o;16537:143::-;16594:5;16625:6;16619:13;16610:22;;16641:33;16668:5;16641:33;:::i;:::-;16537:143;;;;:::o;16686:351::-;16756:6;16805:2;16793:9;16784:7;16780:23;16776:32;16773:119;;;16811:79;;:::i;:::-;16773:119;16931:1;16956:64;17012:7;17003:6;16992:9;16988:22;16956:64;:::i;:::-;16946:74;;16902:128;16686:351;;;;:::o;17043:98::-;17094:6;17128:5;17122:12;17112:22;;17043:98;;;:::o;17147:147::-;17248:11;17285:3;17270:18;;17147:147;;;;:::o;17300:386::-;17404:3;17432:38;17464:5;17432:38;:::i;:::-;17486:88;17567:6;17562:3;17486:88;:::i;:::-;17479:95;;17583:65;17641:6;17636:3;17629:4;17622:5;17618:16;17583:65;:::i;:::-;17673:6;17668:3;17664:16;17657:23;;17408:278;17300:386;;;;:::o;17692:271::-;17822:3;17844:93;17933:3;17924:6;17844:93;:::i;:::-;17837:100;;17954:3;17947:10;;17692:271;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1409200","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","admin()":"2580","auctions(uint256)":"infinite","createAuction(uint256,uint256,address,uint256)":"infinite","initialize()":"106011","nextAuctionId()":"2517","placeBid(uint256)":"infinite","platformFee()":"2430","proxiableUUID()":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","admin()":"f851a440","auctions(uint256)":"571a26a0","createAuction(uint256,uint256,address,uint256)":"b1cb48ef","initialize()":"8129fc1c","nextAuctionId()":"fc528482","placeBid(uint256)":"9979ef45","platformFee()":"26232a2e","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAuctionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTAuction.sol\":\"NFTAuction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.22;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC-1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\\n\\npragma solidity >=0.4.11;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.21;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {IERC1967} from \\\"../../interfaces/IERC1967.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This library provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the ERC-1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit IERC1967.Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the ERC-1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit IERC1967.BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n\\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            _revert(returndata);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {Errors.FailedCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\\n     * of an unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {Errors.FailedCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            assembly (\\\"memory-safe\\\") {\\n                revert(add(returndata, 0x20), mload(returndata))\\n            }\\n        } else {\\n            revert Errors.FailedCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC-1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * TIP: Consider using this library along with {SlotDerivation}.\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct Int256Slot {\\n        int256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\\n     */\\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        assembly (\\\"memory-safe\\\") {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/NFTAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n// upgrade contract\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract NFTAuction is Initializable, UUPSUpgradeable {\\n    // \\u521d\\u59cb\\u5316\\u51fd\\u6570\\uff0c\\u66ff\\u4ee3\\u6784\\u9020\\u51fd\\u6570\\n    function initialize() public initializer {\\n        admin = msg.sender;\\n    }\\n\\n    // Auction contract code goes here\\n    struct Auction {\\n        address seller;\\n        uint256 duration;\\n        uint256 startTime;\\n        uint256 startPrice;\\n        bool ended;\\n        address highestBidder;\\n        uint256 highestBid;\\n\\n        // NFT \\u5408\\u7ea6\\u5730\\u5740\\n        address nftAddress;\\n        // NFT \\u4ee3\\u5e01ID\\n        uint256 tokenId;\\n    }\\n\\n    // \\u72b6\\u6001\\u53d8\\u91cf\\n    mapping(uint256 => Auction) public auctions;\\n    uint256 public nextAuctionId;\\n    address public admin;\\n    uint256 public platformFee; // \\u5e73\\u53f0\\u624b\\u7eed\\u8d39\\uff0c\\u5355\\u4f4d\\u4e3a\\u767e\\u5206\\u6bd4\\uff08\\u4f8b\\u5982\\uff1a2 \\u8868\\u793a 2%\\uff09\\n    // constructor () {\\n    //     admin = msg.sender;\\n    // }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Only admin can perform this action\\\");\\n        _;\\n    }\\n    // \\u521b\\u5efa\\u62cd\\u5356\\n    function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {\\n        require(_duration > 1000 * 60, \\\"Duration must be greater than 1 minute\\\");\\n        require(_startPrice > 0, \\\"Start price must be greater than 0\\\");\\n\\n        auctions[nextAuctionId] = Auction({\\n            seller: msg.sender,\\n            duration: block.timestamp + _duration,\\n            startTime: block.timestamp,\\n            startPrice: _startPrice,\\n            ended: false,\\n            highestBidder: address(0),\\n            highestBid: 0,\\n            nftAddress: _nftAddress,\\n            tokenId: _tokenId\\n        });\\n\\n        nextAuctionId++;\\n    }\\n\\n    // \\u4e70\\u5bb6\\u53c2\\u4e0e\\u62cd\\u5356\\n    function placeBid(uint256 _auctionId) external payable {\\n        Auction storage auction = auctions[_auctionId];\\n        // \\u62cd\\u5356\\u7ed3\\u675fflag && \\u62cd\\u5356\\u65f6\\u95f4\\u672a\\u5230\\n        require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \\\"Auction has ended\\\");\\n        require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \\\"Bid must be higher than current highest bid\\\");\\n\\n        // Refund the previous highest bidder\\n        if (auction.highestBidder != address(0)) {\\n            payable(auction.highestBidder).transfer(auction.highestBid);\\n        }\\n\\n        auction.highestBidder = msg.sender;\\n        auction.highestBid = msg.value;\\n    }\\n    function _authorizeUpgrade(address newImplementation) internal override onlyAdmin {\\n        require(msg.sender == admin, \\\"Only admin can upgrade the contract\\\");\\n    }\\n\\n}\",\"keccak256\":\"0x0106a509d392adc15fed485fefd734cf4ad496f8a6481bf1a89422b37c04179c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1363,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"auctions","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_struct(Auction)1358_storage)"},{"astId":1365,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"nextAuctionId","offset":0,"slot":"1","type":"t_uint256"},{"astId":1367,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"admin","offset":0,"slot":"2","type":"t_address"},{"astId":1369,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"platformFee","offset":0,"slot":"3","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_struct(Auction)1358_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NFTAuction.Auction)","numberOfBytes":"32","value":"t_struct(Auction)1358_storage"},"t_struct(Auction)1358_storage":{"encoding":"inplace","label":"struct NFTAuction.Auction","members":[{"astId":1341,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"seller","offset":0,"slot":"0","type":"t_address"},{"astId":1343,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"duration","offset":0,"slot":"1","type":"t_uint256"},{"astId":1345,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"startTime","offset":0,"slot":"2","type":"t_uint256"},{"astId":1347,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"startPrice","offset":0,"slot":"3","type":"t_uint256"},{"astId":1349,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"ended","offset":0,"slot":"4","type":"t_bool"},{"astId":1351,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"highestBidder","offset":1,"slot":"4","type":"t_address"},{"astId":1353,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"highestBid","offset":0,"slot":"5","type":"t_uint256"},{"astId":1355,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"nftAddress","offset":0,"slot":"6","type":"t_address"},{"astId":1357,"contract":"contracts/NFTAuction.sol:NFTAuction","label":"tokenId","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTAuction_v2.sol":{"NFTAuctionV2":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"auctions","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"startPrice","type":"uint256"},{"internalType":"bool","name":"ended","type":"bool"},{"internalType":"address","name":"highestBidder","type":"address"},{"internalType":"uint256","name":"highestBid","type":"uint256"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_duration","type":"uint256"},{"internalType":"uint256","name":"_startPrice","type":"uint256"},{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"createAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextAuctionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_auctionId","type":"uint256"}],"name":"placeBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"platformFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"testHello","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b506110da8061001f6000396000f3fe60806040526004361061007b5760003560e01c8063b1cb48ef1161004e578063b1cb48ef14610123578063c97c63531461014c578063f851a44014610177578063fc528482146101a25761007b565b806326232a2e14610080578063571a26a0146100ab5780638129fc1c146100f05780639979ef4514610107575b600080fd5b34801561008c57600080fd5b506100956101cd565b6040516100a29190610a0f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610a5b565b6101d3565b6040516100e799989796959493929190610ae4565b60405180910390f35b3480156100fc57600080fd5b5061010561028e565b005b610121600480360381019061011c9190610a5b565b610454565b005b34801561012f57600080fd5b5061014a60048036038101906101459190610b9d565b610648565b005b34801561015857600080fd5b5061016161094e565b60405161016e9190610c94565b60405180910390f35b34801561018357600080fd5b5061018c61098b565b6040516101999190610cb6565b60405180910390f35b3480156101ae57600080fd5b506101b76109b1565b6040516101c49190610a0f565b60405180910390f35b60035481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b60006102986109b7565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156102e65750825b9050600060018367ffffffffffffffff1614801561031b575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610329575080155b15610360576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156103b05760018560000160086101000a81548160ff0219169083151502179055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550831561044d5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104449190610d2a565b60405180910390a15b5050505050565b600080600083815260200190815260200160002090508060040160009054906101000a900460ff1615801561049b575042816001015482600201546104999190610d74565b115b6104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610df4565b60405180910390fd5b8060050154341180156104f1575080600301543410155b610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790610e86565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f8578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600501549081150290604051600060405180830381858888f193505050501580156105f6573d6000803e3d6000fd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf90610f18565b60405180910390fd5b61ea60841161071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390610faa565b60405180910390fd5b6000831161075f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107569061103c565b60405180910390fd5b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185426107939190610d74565b8152602001428152602001848152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160070155905050600160008154809291906109439061105c565b919050555050505050565b60606040518060400160405280600d81526020017f48656c6c6f2c20576f726c642100000000000000000000000000000000000000815250905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806109c26109cb565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6000819050919050565b610a09816109f6565b82525050565b6000602082019050610a246000830184610a00565b92915050565b600080fd5b610a38816109f6565b8114610a4357600080fd5b50565b600081359050610a5581610a2f565b92915050565b600060208284031215610a7157610a70610a2a565b5b6000610a7f84828501610a46565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab382610a88565b9050919050565b610ac381610aa8565b82525050565b60008115159050919050565b610ade81610ac9565b82525050565b600061012082019050610afa600083018c610aba565b610b07602083018b610a00565b610b14604083018a610a00565b610b216060830189610a00565b610b2e6080830188610ad5565b610b3b60a0830187610aba565b610b4860c0830186610a00565b610b5560e0830185610aba565b610b63610100830184610a00565b9a9950505050505050505050565b610b7a81610aa8565b8114610b8557600080fd5b50565b600081359050610b9781610b71565b92915050565b60008060008060808587031215610bb757610bb6610a2a565b5b6000610bc587828801610a46565b9450506020610bd687828801610a46565b9350506040610be787828801610b88565b9250506060610bf887828801610a46565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c3e578082015181840152602081019050610c23565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c6682610c04565b610c708185610c0f565b9350610c80818560208601610c20565b610c8981610c4a565b840191505092915050565b60006020820190508181036000830152610cae8184610c5b565b905092915050565b6000602082019050610ccb6000830184610aba565b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000610d14610d0f610d0a84610cd1565b610cef565b610cdb565b9050919050565b610d2481610cf9565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7f826109f6565b9150610d8a836109f6565b9250828201905080821115610da257610da1610d45565b5b92915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000610dde601183610c0f565b9150610de982610da8565b602082019050919050565b60006020820190508181036000830152610e0d81610dd1565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e742060008201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b6000610e70602b83610c0f565b9150610e7b82610e14565b604082019050919050565b60006020820190508181036000830152610e9f81610e63565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f02602283610c0f565b9150610f0d82610ea6565b604082019050919050565b60006020820190508181036000830152610f3181610ef5565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e20312060008201527f6d696e7574650000000000000000000000000000000000000000000000000000602082015250565b6000610f94602683610c0f565b9150610f9f82610f38565b604082019050919050565b60006020820190508181036000830152610fc381610f87565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000611026602283610c0f565b915061103182610fca565b604082019050919050565b6000602082019050818103600083015261105581611019565b9050919050565b6000611067826109f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361109957611098610d45565b5b60018201905091905056fea26469706673582212205319dfe45f8487875f227633752d312cda6d718f6ef703bb1da10744c680416264736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10DA DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CB48EF GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC97C6353 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x1A2 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298 PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2E6 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x31B JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x329 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST GT JUMPDEST PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x4F1 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F8 JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CF SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x793 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x943 SWAP1 PUSH2 0x105C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F2C20576F726C642100000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9C2 PUSH2 0x9CB JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA09 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA38 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP2 EQ PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA55 DUP2 PUSH2 0xA2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xA2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA7F DUP5 DUP3 DUP6 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP3 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC3 DUP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0xAC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0xAFA PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB07 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB14 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB21 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB2E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xB3B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB48 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB55 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB63 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0xA00 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB7A DUP2 PUSH2 0xAA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB97 DUP2 PUSH2 0xB71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0xA2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBC5 DUP8 DUP3 DUP9 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xBD6 DUP8 DUP3 DUP9 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xBE7 DUP8 DUP3 DUP9 ADD PUSH2 0xB88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xBF8 DUP8 DUP3 DUP9 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC3E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP3 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0xC70 DUP2 DUP6 PUSH2 0xC0F JUMP JUMPDEST SWAP4 POP PUSH2 0xC80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCAE DUP2 DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH2 0xD0F PUSH2 0xD0A DUP5 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xCF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD7F DUP3 PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8A DUP4 PUSH2 0x9F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA2 JUMPI PUSH2 0xDA1 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDE PUSH1 0x11 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 DUP3 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0D DUP2 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE70 PUSH1 0x2B DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP3 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9F DUP2 PUSH2 0xE63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF02 PUSH1 0x22 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D DUP3 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF31 DUP2 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D696E7574650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 PUSH1 0x26 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xF9F DUP3 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC3 DUP2 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1026 PUSH1 0x22 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1031 DUP3 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1055 DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1067 DUP3 PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1099 JUMPI PUSH2 0x1098 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 NOT 0xDF 0xE4 PUSH0 DUP5 DUP8 DUP8 PUSH0 0x22 PUSH23 0x33752D312CDA6D718F6EF703BB1DA10744C68041626473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"213:2455:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_getInitializableStorage_266":{"entryPoint":2487,"id":266,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_252":{"entryPoint":2507,"id":252,"parameterSlots":0,"returnSlots":1},"@admin_1578":{"entryPoint":2443,"id":1578,"parameterSlots":0,"returnSlots":0},"@auctions_1574":{"entryPoint":467,"id":1574,"parameterSlots":0,"returnSlots":0},"@createAuction_1649":{"entryPoint":1608,"id":1649,"parameterSlots":4,"returnSlots":0},"@initialize_1550":{"entryPoint":654,"id":1550,"parameterSlots":0,"returnSlots":0},"@nextAuctionId_1576":{"entryPoint":2481,"id":1576,"parameterSlots":0,"returnSlots":0},"@placeBid_1726":{"entryPoint":1108,"id":1726,"parameterSlots":1,"returnSlots":0},"@platformFee_1580":{"entryPoint":461,"id":1580,"parameterSlots":0,"returnSlots":0},"@testHello_1734":{"entryPoint":2382,"id":1734,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256":{"entryPoint":2973,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2746,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2773,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":3355,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack":{"entryPoint":3975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack":{"entryPoint":3683,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack":{"entryPoint":3537,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack":{"entryPoint":4121,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack":{"entryPoint":3829,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2560,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":2788,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":3370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3718,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3572,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3864,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2575,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3076,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3087,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3444,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2761,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":3281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2696,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2550,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3291,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":3321,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3104,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":3311,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4188,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3397,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2602,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3146,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd":{"entryPoint":3896,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9":{"entryPoint":3604,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5":{"entryPoint":3496,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb":{"entryPoint":4042,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b":{"entryPoint":3750,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2929,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2607,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12181:13","nodeType":"YulBlock","src":"0:12181:13","statements":[{"body":{"nativeSrc":"52:32:13","nodeType":"YulBlock","src":"52:32:13","statements":[{"nativeSrc":"62:16:13","nodeType":"YulAssignment","src":"62:16:13","value":{"name":"value","nativeSrc":"73:5:13","nodeType":"YulIdentifier","src":"73:5:13"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:13","nodeType":"YulIdentifier","src":"62:7:13"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:13","nodeType":"YulTypedName","src":"34:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:13","nodeType":"YulTypedName","src":"44:7:13","type":""}],"src":"7:77:13"},{"body":{"nativeSrc":"155:53:13","nodeType":"YulBlock","src":"155:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:13","nodeType":"YulIdentifier","src":"172:3:13"},{"arguments":[{"name":"value","nativeSrc":"195:5:13","nodeType":"YulIdentifier","src":"195:5:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:13","nodeType":"YulIdentifier","src":"177:17:13"},"nativeSrc":"177:24:13","nodeType":"YulFunctionCall","src":"177:24:13"}],"functionName":{"name":"mstore","nativeSrc":"165:6:13","nodeType":"YulIdentifier","src":"165:6:13"},"nativeSrc":"165:37:13","nodeType":"YulFunctionCall","src":"165:37:13"},"nativeSrc":"165:37:13","nodeType":"YulExpressionStatement","src":"165:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:13","nodeType":"YulTypedName","src":"143:5:13","type":""},{"name":"pos","nativeSrc":"150:3:13","nodeType":"YulTypedName","src":"150:3:13","type":""}],"src":"90:118:13"},{"body":{"nativeSrc":"312:124:13","nodeType":"YulBlock","src":"312:124:13","statements":[{"nativeSrc":"322:26:13","nodeType":"YulAssignment","src":"322:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:13","nodeType":"YulIdentifier","src":"334:9:13"},{"kind":"number","nativeSrc":"345:2:13","nodeType":"YulLiteral","src":"345:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:13","nodeType":"YulIdentifier","src":"330:3:13"},"nativeSrc":"330:18:13","nodeType":"YulFunctionCall","src":"330:18:13"},"variableNames":[{"name":"tail","nativeSrc":"322:4:13","nodeType":"YulIdentifier","src":"322:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:13","nodeType":"YulIdentifier","src":"402:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:13","nodeType":"YulIdentifier","src":"415:9:13"},{"kind":"number","nativeSrc":"426:1:13","nodeType":"YulLiteral","src":"426:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:13","nodeType":"YulIdentifier","src":"411:3:13"},"nativeSrc":"411:17:13","nodeType":"YulFunctionCall","src":"411:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:13","nodeType":"YulIdentifier","src":"358:43:13"},"nativeSrc":"358:71:13","nodeType":"YulFunctionCall","src":"358:71:13"},"nativeSrc":"358:71:13","nodeType":"YulExpressionStatement","src":"358:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:13","nodeType":"YulTypedName","src":"284:9:13","type":""},{"name":"value0","nativeSrc":"296:6:13","nodeType":"YulTypedName","src":"296:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:13","nodeType":"YulTypedName","src":"307:4:13","type":""}],"src":"214:222:13"},{"body":{"nativeSrc":"482:35:13","nodeType":"YulBlock","src":"482:35:13","statements":[{"nativeSrc":"492:19:13","nodeType":"YulAssignment","src":"492:19:13","value":{"arguments":[{"kind":"number","nativeSrc":"508:2:13","nodeType":"YulLiteral","src":"508:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"502:5:13","nodeType":"YulIdentifier","src":"502:5:13"},"nativeSrc":"502:9:13","nodeType":"YulFunctionCall","src":"502:9:13"},"variableNames":[{"name":"memPtr","nativeSrc":"492:6:13","nodeType":"YulIdentifier","src":"492:6:13"}]}]},"name":"allocate_unbounded","nativeSrc":"442:75:13","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"475:6:13","nodeType":"YulTypedName","src":"475:6:13","type":""}],"src":"442:75:13"},{"body":{"nativeSrc":"612:28:13","nodeType":"YulBlock","src":"612:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"629:1:13","nodeType":"YulLiteral","src":"629:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"632:1:13","nodeType":"YulLiteral","src":"632:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"622:6:13","nodeType":"YulIdentifier","src":"622:6:13"},"nativeSrc":"622:12:13","nodeType":"YulFunctionCall","src":"622:12:13"},"nativeSrc":"622:12:13","nodeType":"YulExpressionStatement","src":"622:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"523:117:13","nodeType":"YulFunctionDefinition","src":"523:117:13"},{"body":{"nativeSrc":"735:28:13","nodeType":"YulBlock","src":"735:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"752:1:13","nodeType":"YulLiteral","src":"752:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"755:1:13","nodeType":"YulLiteral","src":"755:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"745:6:13","nodeType":"YulIdentifier","src":"745:6:13"},"nativeSrc":"745:12:13","nodeType":"YulFunctionCall","src":"745:12:13"},"nativeSrc":"745:12:13","nodeType":"YulExpressionStatement","src":"745:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"646:117:13","nodeType":"YulFunctionDefinition","src":"646:117:13"},{"body":{"nativeSrc":"812:79:13","nodeType":"YulBlock","src":"812:79:13","statements":[{"body":{"nativeSrc":"869:16:13","nodeType":"YulBlock","src":"869:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"878:1:13","nodeType":"YulLiteral","src":"878:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"881:1:13","nodeType":"YulLiteral","src":"881:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"871:6:13","nodeType":"YulIdentifier","src":"871:6:13"},"nativeSrc":"871:12:13","nodeType":"YulFunctionCall","src":"871:12:13"},"nativeSrc":"871:12:13","nodeType":"YulExpressionStatement","src":"871:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"835:5:13","nodeType":"YulIdentifier","src":"835:5:13"},{"arguments":[{"name":"value","nativeSrc":"860:5:13","nodeType":"YulIdentifier","src":"860:5:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"842:17:13","nodeType":"YulIdentifier","src":"842:17:13"},"nativeSrc":"842:24:13","nodeType":"YulFunctionCall","src":"842:24:13"}],"functionName":{"name":"eq","nativeSrc":"832:2:13","nodeType":"YulIdentifier","src":"832:2:13"},"nativeSrc":"832:35:13","nodeType":"YulFunctionCall","src":"832:35:13"}],"functionName":{"name":"iszero","nativeSrc":"825:6:13","nodeType":"YulIdentifier","src":"825:6:13"},"nativeSrc":"825:43:13","nodeType":"YulFunctionCall","src":"825:43:13"},"nativeSrc":"822:63:13","nodeType":"YulIf","src":"822:63:13"}]},"name":"validator_revert_t_uint256","nativeSrc":"769:122:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"805:5:13","nodeType":"YulTypedName","src":"805:5:13","type":""}],"src":"769:122:13"},{"body":{"nativeSrc":"949:87:13","nodeType":"YulBlock","src":"949:87:13","statements":[{"nativeSrc":"959:29:13","nodeType":"YulAssignment","src":"959:29:13","value":{"arguments":[{"name":"offset","nativeSrc":"981:6:13","nodeType":"YulIdentifier","src":"981:6:13"}],"functionName":{"name":"calldataload","nativeSrc":"968:12:13","nodeType":"YulIdentifier","src":"968:12:13"},"nativeSrc":"968:20:13","nodeType":"YulFunctionCall","src":"968:20:13"},"variableNames":[{"name":"value","nativeSrc":"959:5:13","nodeType":"YulIdentifier","src":"959:5:13"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1024:5:13","nodeType":"YulIdentifier","src":"1024:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"997:26:13","nodeType":"YulIdentifier","src":"997:26:13"},"nativeSrc":"997:33:13","nodeType":"YulFunctionCall","src":"997:33:13"},"nativeSrc":"997:33:13","nodeType":"YulExpressionStatement","src":"997:33:13"}]},"name":"abi_decode_t_uint256","nativeSrc":"897:139:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"927:6:13","nodeType":"YulTypedName","src":"927:6:13","type":""},{"name":"end","nativeSrc":"935:3:13","nodeType":"YulTypedName","src":"935:3:13","type":""}],"returnVariables":[{"name":"value","nativeSrc":"943:5:13","nodeType":"YulTypedName","src":"943:5:13","type":""}],"src":"897:139:13"},{"body":{"nativeSrc":"1108:263:13","nodeType":"YulBlock","src":"1108:263:13","statements":[{"body":{"nativeSrc":"1154:83:13","nodeType":"YulBlock","src":"1154:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1156:77:13","nodeType":"YulIdentifier","src":"1156:77:13"},"nativeSrc":"1156:79:13","nodeType":"YulFunctionCall","src":"1156:79:13"},"nativeSrc":"1156:79:13","nodeType":"YulExpressionStatement","src":"1156:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1129:7:13","nodeType":"YulIdentifier","src":"1129:7:13"},{"name":"headStart","nativeSrc":"1138:9:13","nodeType":"YulIdentifier","src":"1138:9:13"}],"functionName":{"name":"sub","nativeSrc":"1125:3:13","nodeType":"YulIdentifier","src":"1125:3:13"},"nativeSrc":"1125:23:13","nodeType":"YulFunctionCall","src":"1125:23:13"},{"kind":"number","nativeSrc":"1150:2:13","nodeType":"YulLiteral","src":"1150:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1121:3:13","nodeType":"YulIdentifier","src":"1121:3:13"},"nativeSrc":"1121:32:13","nodeType":"YulFunctionCall","src":"1121:32:13"},"nativeSrc":"1118:119:13","nodeType":"YulIf","src":"1118:119:13"},{"nativeSrc":"1247:117:13","nodeType":"YulBlock","src":"1247:117:13","statements":[{"nativeSrc":"1262:15:13","nodeType":"YulVariableDeclaration","src":"1262:15:13","value":{"kind":"number","nativeSrc":"1276:1:13","nodeType":"YulLiteral","src":"1276:1:13","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1266:6:13","nodeType":"YulTypedName","src":"1266:6:13","type":""}]},{"nativeSrc":"1291:63:13","nodeType":"YulAssignment","src":"1291:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1326:9:13","nodeType":"YulIdentifier","src":"1326:9:13"},{"name":"offset","nativeSrc":"1337:6:13","nodeType":"YulIdentifier","src":"1337:6:13"}],"functionName":{"name":"add","nativeSrc":"1322:3:13","nodeType":"YulIdentifier","src":"1322:3:13"},"nativeSrc":"1322:22:13","nodeType":"YulFunctionCall","src":"1322:22:13"},{"name":"dataEnd","nativeSrc":"1346:7:13","nodeType":"YulIdentifier","src":"1346:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1301:20:13","nodeType":"YulIdentifier","src":"1301:20:13"},"nativeSrc":"1301:53:13","nodeType":"YulFunctionCall","src":"1301:53:13"},"variableNames":[{"name":"value0","nativeSrc":"1291:6:13","nodeType":"YulIdentifier","src":"1291:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1042:329:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1078:9:13","nodeType":"YulTypedName","src":"1078:9:13","type":""},{"name":"dataEnd","nativeSrc":"1089:7:13","nodeType":"YulTypedName","src":"1089:7:13","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1101:6:13","nodeType":"YulTypedName","src":"1101:6:13","type":""}],"src":"1042:329:13"},{"body":{"nativeSrc":"1422:81:13","nodeType":"YulBlock","src":"1422:81:13","statements":[{"nativeSrc":"1432:65:13","nodeType":"YulAssignment","src":"1432:65:13","value":{"arguments":[{"name":"value","nativeSrc":"1447:5:13","nodeType":"YulIdentifier","src":"1447:5:13"},{"kind":"number","nativeSrc":"1454:42:13","nodeType":"YulLiteral","src":"1454:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1443:3:13","nodeType":"YulIdentifier","src":"1443:3:13"},"nativeSrc":"1443:54:13","nodeType":"YulFunctionCall","src":"1443:54:13"},"variableNames":[{"name":"cleaned","nativeSrc":"1432:7:13","nodeType":"YulIdentifier","src":"1432:7:13"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1377:126:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1404:5:13","nodeType":"YulTypedName","src":"1404:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1414:7:13","nodeType":"YulTypedName","src":"1414:7:13","type":""}],"src":"1377:126:13"},{"body":{"nativeSrc":"1554:51:13","nodeType":"YulBlock","src":"1554:51:13","statements":[{"nativeSrc":"1564:35:13","nodeType":"YulAssignment","src":"1564:35:13","value":{"arguments":[{"name":"value","nativeSrc":"1593:5:13","nodeType":"YulIdentifier","src":"1593:5:13"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1575:17:13","nodeType":"YulIdentifier","src":"1575:17:13"},"nativeSrc":"1575:24:13","nodeType":"YulFunctionCall","src":"1575:24:13"},"variableNames":[{"name":"cleaned","nativeSrc":"1564:7:13","nodeType":"YulIdentifier","src":"1564:7:13"}]}]},"name":"cleanup_t_address","nativeSrc":"1509:96:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1536:5:13","nodeType":"YulTypedName","src":"1536:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1546:7:13","nodeType":"YulTypedName","src":"1546:7:13","type":""}],"src":"1509:96:13"},{"body":{"nativeSrc":"1676:53:13","nodeType":"YulBlock","src":"1676:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1693:3:13","nodeType":"YulIdentifier","src":"1693:3:13"},{"arguments":[{"name":"value","nativeSrc":"1716:5:13","nodeType":"YulIdentifier","src":"1716:5:13"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1698:17:13","nodeType":"YulIdentifier","src":"1698:17:13"},"nativeSrc":"1698:24:13","nodeType":"YulFunctionCall","src":"1698:24:13"}],"functionName":{"name":"mstore","nativeSrc":"1686:6:13","nodeType":"YulIdentifier","src":"1686:6:13"},"nativeSrc":"1686:37:13","nodeType":"YulFunctionCall","src":"1686:37:13"},"nativeSrc":"1686:37:13","nodeType":"YulExpressionStatement","src":"1686:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1611:118:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1664:5:13","nodeType":"YulTypedName","src":"1664:5:13","type":""},{"name":"pos","nativeSrc":"1671:3:13","nodeType":"YulTypedName","src":"1671:3:13","type":""}],"src":"1611:118:13"},{"body":{"nativeSrc":"1777:48:13","nodeType":"YulBlock","src":"1777:48:13","statements":[{"nativeSrc":"1787:32:13","nodeType":"YulAssignment","src":"1787:32:13","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1812:5:13","nodeType":"YulIdentifier","src":"1812:5:13"}],"functionName":{"name":"iszero","nativeSrc":"1805:6:13","nodeType":"YulIdentifier","src":"1805:6:13"},"nativeSrc":"1805:13:13","nodeType":"YulFunctionCall","src":"1805:13:13"}],"functionName":{"name":"iszero","nativeSrc":"1798:6:13","nodeType":"YulIdentifier","src":"1798:6:13"},"nativeSrc":"1798:21:13","nodeType":"YulFunctionCall","src":"1798:21:13"},"variableNames":[{"name":"cleaned","nativeSrc":"1787:7:13","nodeType":"YulIdentifier","src":"1787:7:13"}]}]},"name":"cleanup_t_bool","nativeSrc":"1735:90:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1759:5:13","nodeType":"YulTypedName","src":"1759:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1769:7:13","nodeType":"YulTypedName","src":"1769:7:13","type":""}],"src":"1735:90:13"},{"body":{"nativeSrc":"1890:50:13","nodeType":"YulBlock","src":"1890:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1907:3:13","nodeType":"YulIdentifier","src":"1907:3:13"},{"arguments":[{"name":"value","nativeSrc":"1927:5:13","nodeType":"YulIdentifier","src":"1927:5:13"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1912:14:13","nodeType":"YulIdentifier","src":"1912:14:13"},"nativeSrc":"1912:21:13","nodeType":"YulFunctionCall","src":"1912:21:13"}],"functionName":{"name":"mstore","nativeSrc":"1900:6:13","nodeType":"YulIdentifier","src":"1900:6:13"},"nativeSrc":"1900:34:13","nodeType":"YulFunctionCall","src":"1900:34:13"},"nativeSrc":"1900:34:13","nodeType":"YulExpressionStatement","src":"1900:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1831:109:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1878:5:13","nodeType":"YulTypedName","src":"1878:5:13","type":""},{"name":"pos","nativeSrc":"1885:3:13","nodeType":"YulTypedName","src":"1885:3:13","type":""}],"src":"1831:109:13"},{"body":{"nativeSrc":"2262:780:13","nodeType":"YulBlock","src":"2262:780:13","statements":[{"nativeSrc":"2272:27:13","nodeType":"YulAssignment","src":"2272:27:13","value":{"arguments":[{"name":"headStart","nativeSrc":"2284:9:13","nodeType":"YulIdentifier","src":"2284:9:13"},{"kind":"number","nativeSrc":"2295:3:13","nodeType":"YulLiteral","src":"2295:3:13","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"2280:3:13","nodeType":"YulIdentifier","src":"2280:3:13"},"nativeSrc":"2280:19:13","nodeType":"YulFunctionCall","src":"2280:19:13"},"variableNames":[{"name":"tail","nativeSrc":"2272:4:13","nodeType":"YulIdentifier","src":"2272:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2353:6:13","nodeType":"YulIdentifier","src":"2353:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2366:9:13","nodeType":"YulIdentifier","src":"2366:9:13"},{"kind":"number","nativeSrc":"2377:1:13","nodeType":"YulLiteral","src":"2377:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2362:3:13","nodeType":"YulIdentifier","src":"2362:3:13"},"nativeSrc":"2362:17:13","nodeType":"YulFunctionCall","src":"2362:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2309:43:13","nodeType":"YulIdentifier","src":"2309:43:13"},"nativeSrc":"2309:71:13","nodeType":"YulFunctionCall","src":"2309:71:13"},"nativeSrc":"2309:71:13","nodeType":"YulExpressionStatement","src":"2309:71:13"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2434:6:13","nodeType":"YulIdentifier","src":"2434:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2447:9:13","nodeType":"YulIdentifier","src":"2447:9:13"},{"kind":"number","nativeSrc":"2458:2:13","nodeType":"YulLiteral","src":"2458:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2443:3:13","nodeType":"YulIdentifier","src":"2443:3:13"},"nativeSrc":"2443:18:13","nodeType":"YulFunctionCall","src":"2443:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2390:43:13","nodeType":"YulIdentifier","src":"2390:43:13"},"nativeSrc":"2390:72:13","nodeType":"YulFunctionCall","src":"2390:72:13"},"nativeSrc":"2390:72:13","nodeType":"YulExpressionStatement","src":"2390:72:13"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"2516:6:13","nodeType":"YulIdentifier","src":"2516:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2529:9:13","nodeType":"YulIdentifier","src":"2529:9:13"},{"kind":"number","nativeSrc":"2540:2:13","nodeType":"YulLiteral","src":"2540:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2525:3:13","nodeType":"YulIdentifier","src":"2525:3:13"},"nativeSrc":"2525:18:13","nodeType":"YulFunctionCall","src":"2525:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2472:43:13","nodeType":"YulIdentifier","src":"2472:43:13"},"nativeSrc":"2472:72:13","nodeType":"YulFunctionCall","src":"2472:72:13"},"nativeSrc":"2472:72:13","nodeType":"YulExpressionStatement","src":"2472:72:13"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"2598:6:13","nodeType":"YulIdentifier","src":"2598:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2611:9:13","nodeType":"YulIdentifier","src":"2611:9:13"},{"kind":"number","nativeSrc":"2622:2:13","nodeType":"YulLiteral","src":"2622:2:13","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2607:3:13","nodeType":"YulIdentifier","src":"2607:3:13"},"nativeSrc":"2607:18:13","nodeType":"YulFunctionCall","src":"2607:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2554:43:13","nodeType":"YulIdentifier","src":"2554:43:13"},"nativeSrc":"2554:72:13","nodeType":"YulFunctionCall","src":"2554:72:13"},"nativeSrc":"2554:72:13","nodeType":"YulExpressionStatement","src":"2554:72:13"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"2674:6:13","nodeType":"YulIdentifier","src":"2674:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2687:9:13","nodeType":"YulIdentifier","src":"2687:9:13"},{"kind":"number","nativeSrc":"2698:3:13","nodeType":"YulLiteral","src":"2698:3:13","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2683:3:13","nodeType":"YulIdentifier","src":"2683:3:13"},"nativeSrc":"2683:19:13","nodeType":"YulFunctionCall","src":"2683:19:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2636:37:13","nodeType":"YulIdentifier","src":"2636:37:13"},"nativeSrc":"2636:67:13","nodeType":"YulFunctionCall","src":"2636:67:13"},"nativeSrc":"2636:67:13","nodeType":"YulExpressionStatement","src":"2636:67:13"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"2757:6:13","nodeType":"YulIdentifier","src":"2757:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2770:9:13","nodeType":"YulIdentifier","src":"2770:9:13"},{"kind":"number","nativeSrc":"2781:3:13","nodeType":"YulLiteral","src":"2781:3:13","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"2766:3:13","nodeType":"YulIdentifier","src":"2766:3:13"},"nativeSrc":"2766:19:13","nodeType":"YulFunctionCall","src":"2766:19:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2713:43:13","nodeType":"YulIdentifier","src":"2713:43:13"},"nativeSrc":"2713:73:13","nodeType":"YulFunctionCall","src":"2713:73:13"},"nativeSrc":"2713:73:13","nodeType":"YulExpressionStatement","src":"2713:73:13"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"2840:6:13","nodeType":"YulIdentifier","src":"2840:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2853:9:13","nodeType":"YulIdentifier","src":"2853:9:13"},{"kind":"number","nativeSrc":"2864:3:13","nodeType":"YulLiteral","src":"2864:3:13","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"2849:3:13","nodeType":"YulIdentifier","src":"2849:3:13"},"nativeSrc":"2849:19:13","nodeType":"YulFunctionCall","src":"2849:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2796:43:13","nodeType":"YulIdentifier","src":"2796:43:13"},"nativeSrc":"2796:73:13","nodeType":"YulFunctionCall","src":"2796:73:13"},"nativeSrc":"2796:73:13","nodeType":"YulExpressionStatement","src":"2796:73:13"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"2923:6:13","nodeType":"YulIdentifier","src":"2923:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"2936:9:13","nodeType":"YulIdentifier","src":"2936:9:13"},{"kind":"number","nativeSrc":"2947:3:13","nodeType":"YulLiteral","src":"2947:3:13","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"2932:3:13","nodeType":"YulIdentifier","src":"2932:3:13"},"nativeSrc":"2932:19:13","nodeType":"YulFunctionCall","src":"2932:19:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2879:43:13","nodeType":"YulIdentifier","src":"2879:43:13"},"nativeSrc":"2879:73:13","nodeType":"YulFunctionCall","src":"2879:73:13"},"nativeSrc":"2879:73:13","nodeType":"YulExpressionStatement","src":"2879:73:13"},{"expression":{"arguments":[{"name":"value8","nativeSrc":"3006:6:13","nodeType":"YulIdentifier","src":"3006:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"3019:9:13","nodeType":"YulIdentifier","src":"3019:9:13"},{"kind":"number","nativeSrc":"3030:3:13","nodeType":"YulLiteral","src":"3030:3:13","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"3015:3:13","nodeType":"YulIdentifier","src":"3015:3:13"},"nativeSrc":"3015:19:13","nodeType":"YulFunctionCall","src":"3015:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2962:43:13","nodeType":"YulIdentifier","src":"2962:43:13"},"nativeSrc":"2962:73:13","nodeType":"YulFunctionCall","src":"2962:73:13"},"nativeSrc":"2962:73:13","nodeType":"YulExpressionStatement","src":"2962:73:13"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed","nativeSrc":"1946:1096:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2170:9:13","nodeType":"YulTypedName","src":"2170:9:13","type":""},{"name":"value8","nativeSrc":"2182:6:13","nodeType":"YulTypedName","src":"2182:6:13","type":""},{"name":"value7","nativeSrc":"2190:6:13","nodeType":"YulTypedName","src":"2190:6:13","type":""},{"name":"value6","nativeSrc":"2198:6:13","nodeType":"YulTypedName","src":"2198:6:13","type":""},{"name":"value5","nativeSrc":"2206:6:13","nodeType":"YulTypedName","src":"2206:6:13","type":""},{"name":"value4","nativeSrc":"2214:6:13","nodeType":"YulTypedName","src":"2214:6:13","type":""},{"name":"value3","nativeSrc":"2222:6:13","nodeType":"YulTypedName","src":"2222:6:13","type":""},{"name":"value2","nativeSrc":"2230:6:13","nodeType":"YulTypedName","src":"2230:6:13","type":""},{"name":"value1","nativeSrc":"2238:6:13","nodeType":"YulTypedName","src":"2238:6:13","type":""},{"name":"value0","nativeSrc":"2246:6:13","nodeType":"YulTypedName","src":"2246:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2257:4:13","nodeType":"YulTypedName","src":"2257:4:13","type":""}],"src":"1946:1096:13"},{"body":{"nativeSrc":"3091:79:13","nodeType":"YulBlock","src":"3091:79:13","statements":[{"body":{"nativeSrc":"3148:16:13","nodeType":"YulBlock","src":"3148:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3157:1:13","nodeType":"YulLiteral","src":"3157:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"3160:1:13","nodeType":"YulLiteral","src":"3160:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3150:6:13","nodeType":"YulIdentifier","src":"3150:6:13"},"nativeSrc":"3150:12:13","nodeType":"YulFunctionCall","src":"3150:12:13"},"nativeSrc":"3150:12:13","nodeType":"YulExpressionStatement","src":"3150:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3114:5:13","nodeType":"YulIdentifier","src":"3114:5:13"},{"arguments":[{"name":"value","nativeSrc":"3139:5:13","nodeType":"YulIdentifier","src":"3139:5:13"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3121:17:13","nodeType":"YulIdentifier","src":"3121:17:13"},"nativeSrc":"3121:24:13","nodeType":"YulFunctionCall","src":"3121:24:13"}],"functionName":{"name":"eq","nativeSrc":"3111:2:13","nodeType":"YulIdentifier","src":"3111:2:13"},"nativeSrc":"3111:35:13","nodeType":"YulFunctionCall","src":"3111:35:13"}],"functionName":{"name":"iszero","nativeSrc":"3104:6:13","nodeType":"YulIdentifier","src":"3104:6:13"},"nativeSrc":"3104:43:13","nodeType":"YulFunctionCall","src":"3104:43:13"},"nativeSrc":"3101:63:13","nodeType":"YulIf","src":"3101:63:13"}]},"name":"validator_revert_t_address","nativeSrc":"3048:122:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3084:5:13","nodeType":"YulTypedName","src":"3084:5:13","type":""}],"src":"3048:122:13"},{"body":{"nativeSrc":"3228:87:13","nodeType":"YulBlock","src":"3228:87:13","statements":[{"nativeSrc":"3238:29:13","nodeType":"YulAssignment","src":"3238:29:13","value":{"arguments":[{"name":"offset","nativeSrc":"3260:6:13","nodeType":"YulIdentifier","src":"3260:6:13"}],"functionName":{"name":"calldataload","nativeSrc":"3247:12:13","nodeType":"YulIdentifier","src":"3247:12:13"},"nativeSrc":"3247:20:13","nodeType":"YulFunctionCall","src":"3247:20:13"},"variableNames":[{"name":"value","nativeSrc":"3238:5:13","nodeType":"YulIdentifier","src":"3238:5:13"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3303:5:13","nodeType":"YulIdentifier","src":"3303:5:13"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3276:26:13","nodeType":"YulIdentifier","src":"3276:26:13"},"nativeSrc":"3276:33:13","nodeType":"YulFunctionCall","src":"3276:33:13"},"nativeSrc":"3276:33:13","nodeType":"YulExpressionStatement","src":"3276:33:13"}]},"name":"abi_decode_t_address","nativeSrc":"3176:139:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3206:6:13","nodeType":"YulTypedName","src":"3206:6:13","type":""},{"name":"end","nativeSrc":"3214:3:13","nodeType":"YulTypedName","src":"3214:3:13","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3222:5:13","nodeType":"YulTypedName","src":"3222:5:13","type":""}],"src":"3176:139:13"},{"body":{"nativeSrc":"3438:648:13","nodeType":"YulBlock","src":"3438:648:13","statements":[{"body":{"nativeSrc":"3485:83:13","nodeType":"YulBlock","src":"3485:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3487:77:13","nodeType":"YulIdentifier","src":"3487:77:13"},"nativeSrc":"3487:79:13","nodeType":"YulFunctionCall","src":"3487:79:13"},"nativeSrc":"3487:79:13","nodeType":"YulExpressionStatement","src":"3487:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3459:7:13","nodeType":"YulIdentifier","src":"3459:7:13"},{"name":"headStart","nativeSrc":"3468:9:13","nodeType":"YulIdentifier","src":"3468:9:13"}],"functionName":{"name":"sub","nativeSrc":"3455:3:13","nodeType":"YulIdentifier","src":"3455:3:13"},"nativeSrc":"3455:23:13","nodeType":"YulFunctionCall","src":"3455:23:13"},{"kind":"number","nativeSrc":"3480:3:13","nodeType":"YulLiteral","src":"3480:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"3451:3:13","nodeType":"YulIdentifier","src":"3451:3:13"},"nativeSrc":"3451:33:13","nodeType":"YulFunctionCall","src":"3451:33:13"},"nativeSrc":"3448:120:13","nodeType":"YulIf","src":"3448:120:13"},{"nativeSrc":"3578:117:13","nodeType":"YulBlock","src":"3578:117:13","statements":[{"nativeSrc":"3593:15:13","nodeType":"YulVariableDeclaration","src":"3593:15:13","value":{"kind":"number","nativeSrc":"3607:1:13","nodeType":"YulLiteral","src":"3607:1:13","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3597:6:13","nodeType":"YulTypedName","src":"3597:6:13","type":""}]},{"nativeSrc":"3622:63:13","nodeType":"YulAssignment","src":"3622:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3657:9:13","nodeType":"YulIdentifier","src":"3657:9:13"},{"name":"offset","nativeSrc":"3668:6:13","nodeType":"YulIdentifier","src":"3668:6:13"}],"functionName":{"name":"add","nativeSrc":"3653:3:13","nodeType":"YulIdentifier","src":"3653:3:13"},"nativeSrc":"3653:22:13","nodeType":"YulFunctionCall","src":"3653:22:13"},{"name":"dataEnd","nativeSrc":"3677:7:13","nodeType":"YulIdentifier","src":"3677:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3632:20:13","nodeType":"YulIdentifier","src":"3632:20:13"},"nativeSrc":"3632:53:13","nodeType":"YulFunctionCall","src":"3632:53:13"},"variableNames":[{"name":"value0","nativeSrc":"3622:6:13","nodeType":"YulIdentifier","src":"3622:6:13"}]}]},{"nativeSrc":"3705:118:13","nodeType":"YulBlock","src":"3705:118:13","statements":[{"nativeSrc":"3720:16:13","nodeType":"YulVariableDeclaration","src":"3720:16:13","value":{"kind":"number","nativeSrc":"3734:2:13","nodeType":"YulLiteral","src":"3734:2:13","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3724:6:13","nodeType":"YulTypedName","src":"3724:6:13","type":""}]},{"nativeSrc":"3750:63:13","nodeType":"YulAssignment","src":"3750:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3785:9:13","nodeType":"YulIdentifier","src":"3785:9:13"},{"name":"offset","nativeSrc":"3796:6:13","nodeType":"YulIdentifier","src":"3796:6:13"}],"functionName":{"name":"add","nativeSrc":"3781:3:13","nodeType":"YulIdentifier","src":"3781:3:13"},"nativeSrc":"3781:22:13","nodeType":"YulFunctionCall","src":"3781:22:13"},{"name":"dataEnd","nativeSrc":"3805:7:13","nodeType":"YulIdentifier","src":"3805:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3760:20:13","nodeType":"YulIdentifier","src":"3760:20:13"},"nativeSrc":"3760:53:13","nodeType":"YulFunctionCall","src":"3760:53:13"},"variableNames":[{"name":"value1","nativeSrc":"3750:6:13","nodeType":"YulIdentifier","src":"3750:6:13"}]}]},{"nativeSrc":"3833:118:13","nodeType":"YulBlock","src":"3833:118:13","statements":[{"nativeSrc":"3848:16:13","nodeType":"YulVariableDeclaration","src":"3848:16:13","value":{"kind":"number","nativeSrc":"3862:2:13","nodeType":"YulLiteral","src":"3862:2:13","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"3852:6:13","nodeType":"YulTypedName","src":"3852:6:13","type":""}]},{"nativeSrc":"3878:63:13","nodeType":"YulAssignment","src":"3878:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3913:9:13","nodeType":"YulIdentifier","src":"3913:9:13"},{"name":"offset","nativeSrc":"3924:6:13","nodeType":"YulIdentifier","src":"3924:6:13"}],"functionName":{"name":"add","nativeSrc":"3909:3:13","nodeType":"YulIdentifier","src":"3909:3:13"},"nativeSrc":"3909:22:13","nodeType":"YulFunctionCall","src":"3909:22:13"},{"name":"dataEnd","nativeSrc":"3933:7:13","nodeType":"YulIdentifier","src":"3933:7:13"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3888:20:13","nodeType":"YulIdentifier","src":"3888:20:13"},"nativeSrc":"3888:53:13","nodeType":"YulFunctionCall","src":"3888:53:13"},"variableNames":[{"name":"value2","nativeSrc":"3878:6:13","nodeType":"YulIdentifier","src":"3878:6:13"}]}]},{"nativeSrc":"3961:118:13","nodeType":"YulBlock","src":"3961:118:13","statements":[{"nativeSrc":"3976:16:13","nodeType":"YulVariableDeclaration","src":"3976:16:13","value":{"kind":"number","nativeSrc":"3990:2:13","nodeType":"YulLiteral","src":"3990:2:13","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"3980:6:13","nodeType":"YulTypedName","src":"3980:6:13","type":""}]},{"nativeSrc":"4006:63:13","nodeType":"YulAssignment","src":"4006:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4041:9:13","nodeType":"YulIdentifier","src":"4041:9:13"},{"name":"offset","nativeSrc":"4052:6:13","nodeType":"YulIdentifier","src":"4052:6:13"}],"functionName":{"name":"add","nativeSrc":"4037:3:13","nodeType":"YulIdentifier","src":"4037:3:13"},"nativeSrc":"4037:22:13","nodeType":"YulFunctionCall","src":"4037:22:13"},{"name":"dataEnd","nativeSrc":"4061:7:13","nodeType":"YulIdentifier","src":"4061:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4016:20:13","nodeType":"YulIdentifier","src":"4016:20:13"},"nativeSrc":"4016:53:13","nodeType":"YulFunctionCall","src":"4016:53:13"},"variableNames":[{"name":"value3","nativeSrc":"4006:6:13","nodeType":"YulIdentifier","src":"4006:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nativeSrc":"3321:765:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3384:9:13","nodeType":"YulTypedName","src":"3384:9:13","type":""},{"name":"dataEnd","nativeSrc":"3395:7:13","nodeType":"YulTypedName","src":"3395:7:13","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3407:6:13","nodeType":"YulTypedName","src":"3407:6:13","type":""},{"name":"value1","nativeSrc":"3415:6:13","nodeType":"YulTypedName","src":"3415:6:13","type":""},{"name":"value2","nativeSrc":"3423:6:13","nodeType":"YulTypedName","src":"3423:6:13","type":""},{"name":"value3","nativeSrc":"3431:6:13","nodeType":"YulTypedName","src":"3431:6:13","type":""}],"src":"3321:765:13"},{"body":{"nativeSrc":"4151:40:13","nodeType":"YulBlock","src":"4151:40:13","statements":[{"nativeSrc":"4162:22:13","nodeType":"YulAssignment","src":"4162:22:13","value":{"arguments":[{"name":"value","nativeSrc":"4178:5:13","nodeType":"YulIdentifier","src":"4178:5:13"}],"functionName":{"name":"mload","nativeSrc":"4172:5:13","nodeType":"YulIdentifier","src":"4172:5:13"},"nativeSrc":"4172:12:13","nodeType":"YulFunctionCall","src":"4172:12:13"},"variableNames":[{"name":"length","nativeSrc":"4162:6:13","nodeType":"YulIdentifier","src":"4162:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"4092:99:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4134:5:13","nodeType":"YulTypedName","src":"4134:5:13","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4144:6:13","nodeType":"YulTypedName","src":"4144:6:13","type":""}],"src":"4092:99:13"},{"body":{"nativeSrc":"4293:73:13","nodeType":"YulBlock","src":"4293:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4310:3:13","nodeType":"YulIdentifier","src":"4310:3:13"},{"name":"length","nativeSrc":"4315:6:13","nodeType":"YulIdentifier","src":"4315:6:13"}],"functionName":{"name":"mstore","nativeSrc":"4303:6:13","nodeType":"YulIdentifier","src":"4303:6:13"},"nativeSrc":"4303:19:13","nodeType":"YulFunctionCall","src":"4303:19:13"},"nativeSrc":"4303:19:13","nodeType":"YulExpressionStatement","src":"4303:19:13"},{"nativeSrc":"4331:29:13","nodeType":"YulAssignment","src":"4331:29:13","value":{"arguments":[{"name":"pos","nativeSrc":"4350:3:13","nodeType":"YulIdentifier","src":"4350:3:13"},{"kind":"number","nativeSrc":"4355:4:13","nodeType":"YulLiteral","src":"4355:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4346:3:13","nodeType":"YulIdentifier","src":"4346:3:13"},"nativeSrc":"4346:14:13","nodeType":"YulFunctionCall","src":"4346:14:13"},"variableNames":[{"name":"updated_pos","nativeSrc":"4331:11:13","nodeType":"YulIdentifier","src":"4331:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4197:169:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4265:3:13","nodeType":"YulTypedName","src":"4265:3:13","type":""},{"name":"length","nativeSrc":"4270:6:13","nodeType":"YulTypedName","src":"4270:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4281:11:13","nodeType":"YulTypedName","src":"4281:11:13","type":""}],"src":"4197:169:13"},{"body":{"nativeSrc":"4434:186:13","nodeType":"YulBlock","src":"4434:186:13","statements":[{"nativeSrc":"4445:10:13","nodeType":"YulVariableDeclaration","src":"4445:10:13","value":{"kind":"number","nativeSrc":"4454:1:13","nodeType":"YulLiteral","src":"4454:1:13","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4449:1:13","nodeType":"YulTypedName","src":"4449:1:13","type":""}]},{"body":{"nativeSrc":"4514:63:13","nodeType":"YulBlock","src":"4514:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4539:3:13","nodeType":"YulIdentifier","src":"4539:3:13"},{"name":"i","nativeSrc":"4544:1:13","nodeType":"YulIdentifier","src":"4544:1:13"}],"functionName":{"name":"add","nativeSrc":"4535:3:13","nodeType":"YulIdentifier","src":"4535:3:13"},"nativeSrc":"4535:11:13","nodeType":"YulFunctionCall","src":"4535:11:13"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4558:3:13","nodeType":"YulIdentifier","src":"4558:3:13"},{"name":"i","nativeSrc":"4563:1:13","nodeType":"YulIdentifier","src":"4563:1:13"}],"functionName":{"name":"add","nativeSrc":"4554:3:13","nodeType":"YulIdentifier","src":"4554:3:13"},"nativeSrc":"4554:11:13","nodeType":"YulFunctionCall","src":"4554:11:13"}],"functionName":{"name":"mload","nativeSrc":"4548:5:13","nodeType":"YulIdentifier","src":"4548:5:13"},"nativeSrc":"4548:18:13","nodeType":"YulFunctionCall","src":"4548:18:13"}],"functionName":{"name":"mstore","nativeSrc":"4528:6:13","nodeType":"YulIdentifier","src":"4528:6:13"},"nativeSrc":"4528:39:13","nodeType":"YulFunctionCall","src":"4528:39:13"},"nativeSrc":"4528:39:13","nodeType":"YulExpressionStatement","src":"4528:39:13"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4475:1:13","nodeType":"YulIdentifier","src":"4475:1:13"},{"name":"length","nativeSrc":"4478:6:13","nodeType":"YulIdentifier","src":"4478:6:13"}],"functionName":{"name":"lt","nativeSrc":"4472:2:13","nodeType":"YulIdentifier","src":"4472:2:13"},"nativeSrc":"4472:13:13","nodeType":"YulFunctionCall","src":"4472:13:13"},"nativeSrc":"4464:113:13","nodeType":"YulForLoop","post":{"nativeSrc":"4486:19:13","nodeType":"YulBlock","src":"4486:19:13","statements":[{"nativeSrc":"4488:15:13","nodeType":"YulAssignment","src":"4488:15:13","value":{"arguments":[{"name":"i","nativeSrc":"4497:1:13","nodeType":"YulIdentifier","src":"4497:1:13"},{"kind":"number","nativeSrc":"4500:2:13","nodeType":"YulLiteral","src":"4500:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4493:3:13","nodeType":"YulIdentifier","src":"4493:3:13"},"nativeSrc":"4493:10:13","nodeType":"YulFunctionCall","src":"4493:10:13"},"variableNames":[{"name":"i","nativeSrc":"4488:1:13","nodeType":"YulIdentifier","src":"4488:1:13"}]}]},"pre":{"nativeSrc":"4468:3:13","nodeType":"YulBlock","src":"4468:3:13","statements":[]},"src":"4464:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4597:3:13","nodeType":"YulIdentifier","src":"4597:3:13"},{"name":"length","nativeSrc":"4602:6:13","nodeType":"YulIdentifier","src":"4602:6:13"}],"functionName":{"name":"add","nativeSrc":"4593:3:13","nodeType":"YulIdentifier","src":"4593:3:13"},"nativeSrc":"4593:16:13","nodeType":"YulFunctionCall","src":"4593:16:13"},{"kind":"number","nativeSrc":"4611:1:13","nodeType":"YulLiteral","src":"4611:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:13","nodeType":"YulIdentifier","src":"4586:6:13"},"nativeSrc":"4586:27:13","nodeType":"YulFunctionCall","src":"4586:27:13"},"nativeSrc":"4586:27:13","nodeType":"YulExpressionStatement","src":"4586:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4372:248:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4416:3:13","nodeType":"YulTypedName","src":"4416:3:13","type":""},{"name":"dst","nativeSrc":"4421:3:13","nodeType":"YulTypedName","src":"4421:3:13","type":""},{"name":"length","nativeSrc":"4426:6:13","nodeType":"YulTypedName","src":"4426:6:13","type":""}],"src":"4372:248:13"},{"body":{"nativeSrc":"4674:54:13","nodeType":"YulBlock","src":"4674:54:13","statements":[{"nativeSrc":"4684:38:13","nodeType":"YulAssignment","src":"4684:38:13","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4702:5:13","nodeType":"YulIdentifier","src":"4702:5:13"},{"kind":"number","nativeSrc":"4709:2:13","nodeType":"YulLiteral","src":"4709:2:13","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4698:3:13","nodeType":"YulIdentifier","src":"4698:3:13"},"nativeSrc":"4698:14:13","nodeType":"YulFunctionCall","src":"4698:14:13"},{"arguments":[{"kind":"number","nativeSrc":"4718:2:13","nodeType":"YulLiteral","src":"4718:2:13","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4714:3:13","nodeType":"YulIdentifier","src":"4714:3:13"},"nativeSrc":"4714:7:13","nodeType":"YulFunctionCall","src":"4714:7:13"}],"functionName":{"name":"and","nativeSrc":"4694:3:13","nodeType":"YulIdentifier","src":"4694:3:13"},"nativeSrc":"4694:28:13","nodeType":"YulFunctionCall","src":"4694:28:13"},"variableNames":[{"name":"result","nativeSrc":"4684:6:13","nodeType":"YulIdentifier","src":"4684:6:13"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"4626:102:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4657:5:13","nodeType":"YulTypedName","src":"4657:5:13","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4667:6:13","nodeType":"YulTypedName","src":"4667:6:13","type":""}],"src":"4626:102:13"},{"body":{"nativeSrc":"4826:285:13","nodeType":"YulBlock","src":"4826:285:13","statements":[{"nativeSrc":"4836:53:13","nodeType":"YulVariableDeclaration","src":"4836:53:13","value":{"arguments":[{"name":"value","nativeSrc":"4883:5:13","nodeType":"YulIdentifier","src":"4883:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4850:32:13","nodeType":"YulIdentifier","src":"4850:32:13"},"nativeSrc":"4850:39:13","nodeType":"YulFunctionCall","src":"4850:39:13"},"variables":[{"name":"length","nativeSrc":"4840:6:13","nodeType":"YulTypedName","src":"4840:6:13","type":""}]},{"nativeSrc":"4898:78:13","nodeType":"YulAssignment","src":"4898:78:13","value":{"arguments":[{"name":"pos","nativeSrc":"4964:3:13","nodeType":"YulIdentifier","src":"4964:3:13"},{"name":"length","nativeSrc":"4969:6:13","nodeType":"YulIdentifier","src":"4969:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4905:58:13","nodeType":"YulIdentifier","src":"4905:58:13"},"nativeSrc":"4905:71:13","nodeType":"YulFunctionCall","src":"4905:71:13"},"variableNames":[{"name":"pos","nativeSrc":"4898:3:13","nodeType":"YulIdentifier","src":"4898:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5024:5:13","nodeType":"YulIdentifier","src":"5024:5:13"},{"kind":"number","nativeSrc":"5031:4:13","nodeType":"YulLiteral","src":"5031:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5020:3:13","nodeType":"YulIdentifier","src":"5020:3:13"},"nativeSrc":"5020:16:13","nodeType":"YulFunctionCall","src":"5020:16:13"},{"name":"pos","nativeSrc":"5038:3:13","nodeType":"YulIdentifier","src":"5038:3:13"},{"name":"length","nativeSrc":"5043:6:13","nodeType":"YulIdentifier","src":"5043:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4985:34:13","nodeType":"YulIdentifier","src":"4985:34:13"},"nativeSrc":"4985:65:13","nodeType":"YulFunctionCall","src":"4985:65:13"},"nativeSrc":"4985:65:13","nodeType":"YulExpressionStatement","src":"4985:65:13"},{"nativeSrc":"5059:46:13","nodeType":"YulAssignment","src":"5059:46:13","value":{"arguments":[{"name":"pos","nativeSrc":"5070:3:13","nodeType":"YulIdentifier","src":"5070:3:13"},{"arguments":[{"name":"length","nativeSrc":"5097:6:13","nodeType":"YulIdentifier","src":"5097:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"5075:21:13","nodeType":"YulIdentifier","src":"5075:21:13"},"nativeSrc":"5075:29:13","nodeType":"YulFunctionCall","src":"5075:29:13"}],"functionName":{"name":"add","nativeSrc":"5066:3:13","nodeType":"YulIdentifier","src":"5066:3:13"},"nativeSrc":"5066:39:13","nodeType":"YulFunctionCall","src":"5066:39:13"},"variableNames":[{"name":"end","nativeSrc":"5059:3:13","nodeType":"YulIdentifier","src":"5059:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"4734:377:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4807:5:13","nodeType":"YulTypedName","src":"4807:5:13","type":""},{"name":"pos","nativeSrc":"4814:3:13","nodeType":"YulTypedName","src":"4814:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4822:3:13","nodeType":"YulTypedName","src":"4822:3:13","type":""}],"src":"4734:377:13"},{"body":{"nativeSrc":"5235:195:13","nodeType":"YulBlock","src":"5235:195:13","statements":[{"nativeSrc":"5245:26:13","nodeType":"YulAssignment","src":"5245:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"5257:9:13","nodeType":"YulIdentifier","src":"5257:9:13"},{"kind":"number","nativeSrc":"5268:2:13","nodeType":"YulLiteral","src":"5268:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5253:3:13","nodeType":"YulIdentifier","src":"5253:3:13"},"nativeSrc":"5253:18:13","nodeType":"YulFunctionCall","src":"5253:18:13"},"variableNames":[{"name":"tail","nativeSrc":"5245:4:13","nodeType":"YulIdentifier","src":"5245:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5292:9:13","nodeType":"YulIdentifier","src":"5292:9:13"},{"kind":"number","nativeSrc":"5303:1:13","nodeType":"YulLiteral","src":"5303:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5288:3:13","nodeType":"YulIdentifier","src":"5288:3:13"},"nativeSrc":"5288:17:13","nodeType":"YulFunctionCall","src":"5288:17:13"},{"arguments":[{"name":"tail","nativeSrc":"5311:4:13","nodeType":"YulIdentifier","src":"5311:4:13"},{"name":"headStart","nativeSrc":"5317:9:13","nodeType":"YulIdentifier","src":"5317:9:13"}],"functionName":{"name":"sub","nativeSrc":"5307:3:13","nodeType":"YulIdentifier","src":"5307:3:13"},"nativeSrc":"5307:20:13","nodeType":"YulFunctionCall","src":"5307:20:13"}],"functionName":{"name":"mstore","nativeSrc":"5281:6:13","nodeType":"YulIdentifier","src":"5281:6:13"},"nativeSrc":"5281:47:13","nodeType":"YulFunctionCall","src":"5281:47:13"},"nativeSrc":"5281:47:13","nodeType":"YulExpressionStatement","src":"5281:47:13"},{"nativeSrc":"5337:86:13","nodeType":"YulAssignment","src":"5337:86:13","value":{"arguments":[{"name":"value0","nativeSrc":"5409:6:13","nodeType":"YulIdentifier","src":"5409:6:13"},{"name":"tail","nativeSrc":"5418:4:13","nodeType":"YulIdentifier","src":"5418:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"5345:63:13","nodeType":"YulIdentifier","src":"5345:63:13"},"nativeSrc":"5345:78:13","nodeType":"YulFunctionCall","src":"5345:78:13"},"variableNames":[{"name":"tail","nativeSrc":"5337:4:13","nodeType":"YulIdentifier","src":"5337:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5117:313:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5207:9:13","nodeType":"YulTypedName","src":"5207:9:13","type":""},{"name":"value0","nativeSrc":"5219:6:13","nodeType":"YulTypedName","src":"5219:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5230:4:13","nodeType":"YulTypedName","src":"5230:4:13","type":""}],"src":"5117:313:13"},{"body":{"nativeSrc":"5534:124:13","nodeType":"YulBlock","src":"5534:124:13","statements":[{"nativeSrc":"5544:26:13","nodeType":"YulAssignment","src":"5544:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"5556:9:13","nodeType":"YulIdentifier","src":"5556:9:13"},{"kind":"number","nativeSrc":"5567:2:13","nodeType":"YulLiteral","src":"5567:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5552:3:13","nodeType":"YulIdentifier","src":"5552:3:13"},"nativeSrc":"5552:18:13","nodeType":"YulFunctionCall","src":"5552:18:13"},"variableNames":[{"name":"tail","nativeSrc":"5544:4:13","nodeType":"YulIdentifier","src":"5544:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5624:6:13","nodeType":"YulIdentifier","src":"5624:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"5637:9:13","nodeType":"YulIdentifier","src":"5637:9:13"},{"kind":"number","nativeSrc":"5648:1:13","nodeType":"YulLiteral","src":"5648:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5633:3:13","nodeType":"YulIdentifier","src":"5633:3:13"},"nativeSrc":"5633:17:13","nodeType":"YulFunctionCall","src":"5633:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5580:43:13","nodeType":"YulIdentifier","src":"5580:43:13"},"nativeSrc":"5580:71:13","nodeType":"YulFunctionCall","src":"5580:71:13"},"nativeSrc":"5580:71:13","nodeType":"YulExpressionStatement","src":"5580:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5436:222:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5506:9:13","nodeType":"YulTypedName","src":"5506:9:13","type":""},{"name":"value0","nativeSrc":"5518:6:13","nodeType":"YulTypedName","src":"5518:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5529:4:13","nodeType":"YulTypedName","src":"5529:4:13","type":""}],"src":"5436:222:13"},{"body":{"nativeSrc":"5717:32:13","nodeType":"YulBlock","src":"5717:32:13","statements":[{"nativeSrc":"5727:16:13","nodeType":"YulAssignment","src":"5727:16:13","value":{"name":"value","nativeSrc":"5738:5:13","nodeType":"YulIdentifier","src":"5738:5:13"},"variableNames":[{"name":"cleaned","nativeSrc":"5727:7:13","nodeType":"YulIdentifier","src":"5727:7:13"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"5664:85:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5699:5:13","nodeType":"YulTypedName","src":"5699:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5709:7:13","nodeType":"YulTypedName","src":"5709:7:13","type":""}],"src":"5664:85:13"},{"body":{"nativeSrc":"5799:57:13","nodeType":"YulBlock","src":"5799:57:13","statements":[{"nativeSrc":"5809:41:13","nodeType":"YulAssignment","src":"5809:41:13","value":{"arguments":[{"name":"value","nativeSrc":"5824:5:13","nodeType":"YulIdentifier","src":"5824:5:13"},{"kind":"number","nativeSrc":"5831:18:13","nodeType":"YulLiteral","src":"5831:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5820:3:13","nodeType":"YulIdentifier","src":"5820:3:13"},"nativeSrc":"5820:30:13","nodeType":"YulFunctionCall","src":"5820:30:13"},"variableNames":[{"name":"cleaned","nativeSrc":"5809:7:13","nodeType":"YulIdentifier","src":"5809:7:13"}]}]},"name":"cleanup_t_uint64","nativeSrc":"5755:101:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5781:5:13","nodeType":"YulTypedName","src":"5781:5:13","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5791:7:13","nodeType":"YulTypedName","src":"5791:7:13","type":""}],"src":"5755:101:13"},{"body":{"nativeSrc":"5894:28:13","nodeType":"YulBlock","src":"5894:28:13","statements":[{"nativeSrc":"5904:12:13","nodeType":"YulAssignment","src":"5904:12:13","value":{"name":"value","nativeSrc":"5911:5:13","nodeType":"YulIdentifier","src":"5911:5:13"},"variableNames":[{"name":"ret","nativeSrc":"5904:3:13","nodeType":"YulIdentifier","src":"5904:3:13"}]}]},"name":"identity","nativeSrc":"5862:60:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5880:5:13","nodeType":"YulTypedName","src":"5880:5:13","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5890:3:13","nodeType":"YulTypedName","src":"5890:3:13","type":""}],"src":"5862:60:13"},{"body":{"nativeSrc":"5995:89:13","nodeType":"YulBlock","src":"5995:89:13","statements":[{"nativeSrc":"6005:73:13","nodeType":"YulAssignment","src":"6005:73:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6070:5:13","nodeType":"YulIdentifier","src":"6070:5:13"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"6044:25:13","nodeType":"YulIdentifier","src":"6044:25:13"},"nativeSrc":"6044:32:13","nodeType":"YulFunctionCall","src":"6044:32:13"}],"functionName":{"name":"identity","nativeSrc":"6035:8:13","nodeType":"YulIdentifier","src":"6035:8:13"},"nativeSrc":"6035:42:13","nodeType":"YulFunctionCall","src":"6035:42:13"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"6018:16:13","nodeType":"YulIdentifier","src":"6018:16:13"},"nativeSrc":"6018:60:13","nodeType":"YulFunctionCall","src":"6018:60:13"},"variableNames":[{"name":"converted","nativeSrc":"6005:9:13","nodeType":"YulIdentifier","src":"6005:9:13"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"5928:156:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5975:5:13","nodeType":"YulTypedName","src":"5975:5:13","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5985:9:13","nodeType":"YulTypedName","src":"5985:9:13","type":""}],"src":"5928:156:13"},{"body":{"nativeSrc":"6162:73:13","nodeType":"YulBlock","src":"6162:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6179:3:13","nodeType":"YulIdentifier","src":"6179:3:13"},{"arguments":[{"name":"value","nativeSrc":"6222:5:13","nodeType":"YulIdentifier","src":"6222:5:13"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"6184:37:13","nodeType":"YulIdentifier","src":"6184:37:13"},"nativeSrc":"6184:44:13","nodeType":"YulFunctionCall","src":"6184:44:13"}],"functionName":{"name":"mstore","nativeSrc":"6172:6:13","nodeType":"YulIdentifier","src":"6172:6:13"},"nativeSrc":"6172:57:13","nodeType":"YulFunctionCall","src":"6172:57:13"},"nativeSrc":"6172:57:13","nodeType":"YulExpressionStatement","src":"6172:57:13"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"6090:145:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6150:5:13","nodeType":"YulTypedName","src":"6150:5:13","type":""},{"name":"pos","nativeSrc":"6157:3:13","nodeType":"YulTypedName","src":"6157:3:13","type":""}],"src":"6090:145:13"},{"body":{"nativeSrc":"6346:131:13","nodeType":"YulBlock","src":"6346:131:13","statements":[{"nativeSrc":"6356:26:13","nodeType":"YulAssignment","src":"6356:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"6368:9:13","nodeType":"YulIdentifier","src":"6368:9:13"},{"kind":"number","nativeSrc":"6379:2:13","nodeType":"YulLiteral","src":"6379:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6364:3:13","nodeType":"YulIdentifier","src":"6364:3:13"},"nativeSrc":"6364:18:13","nodeType":"YulFunctionCall","src":"6364:18:13"},"variableNames":[{"name":"tail","nativeSrc":"6356:4:13","nodeType":"YulIdentifier","src":"6356:4:13"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6443:6:13","nodeType":"YulIdentifier","src":"6443:6:13"},{"arguments":[{"name":"headStart","nativeSrc":"6456:9:13","nodeType":"YulIdentifier","src":"6456:9:13"},{"kind":"number","nativeSrc":"6467:1:13","nodeType":"YulLiteral","src":"6467:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6452:3:13","nodeType":"YulIdentifier","src":"6452:3:13"},"nativeSrc":"6452:17:13","nodeType":"YulFunctionCall","src":"6452:17:13"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"6392:50:13","nodeType":"YulIdentifier","src":"6392:50:13"},"nativeSrc":"6392:78:13","nodeType":"YulFunctionCall","src":"6392:78:13"},"nativeSrc":"6392:78:13","nodeType":"YulExpressionStatement","src":"6392:78:13"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"6241:236:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6318:9:13","nodeType":"YulTypedName","src":"6318:9:13","type":""},{"name":"value0","nativeSrc":"6330:6:13","nodeType":"YulTypedName","src":"6330:6:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6341:4:13","nodeType":"YulTypedName","src":"6341:4:13","type":""}],"src":"6241:236:13"},{"body":{"nativeSrc":"6511:152:13","nodeType":"YulBlock","src":"6511:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6528:1:13","nodeType":"YulLiteral","src":"6528:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"6531:77:13","nodeType":"YulLiteral","src":"6531:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6521:6:13","nodeType":"YulIdentifier","src":"6521:6:13"},"nativeSrc":"6521:88:13","nodeType":"YulFunctionCall","src":"6521:88:13"},"nativeSrc":"6521:88:13","nodeType":"YulExpressionStatement","src":"6521:88:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6625:1:13","nodeType":"YulLiteral","src":"6625:1:13","type":"","value":"4"},{"kind":"number","nativeSrc":"6628:4:13","nodeType":"YulLiteral","src":"6628:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6618:6:13","nodeType":"YulIdentifier","src":"6618:6:13"},"nativeSrc":"6618:15:13","nodeType":"YulFunctionCall","src":"6618:15:13"},"nativeSrc":"6618:15:13","nodeType":"YulExpressionStatement","src":"6618:15:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6649:1:13","nodeType":"YulLiteral","src":"6649:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"6652:4:13","nodeType":"YulLiteral","src":"6652:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6642:6:13","nodeType":"YulIdentifier","src":"6642:6:13"},"nativeSrc":"6642:15:13","nodeType":"YulFunctionCall","src":"6642:15:13"},"nativeSrc":"6642:15:13","nodeType":"YulExpressionStatement","src":"6642:15:13"}]},"name":"panic_error_0x11","nativeSrc":"6483:180:13","nodeType":"YulFunctionDefinition","src":"6483:180:13"},{"body":{"nativeSrc":"6713:147:13","nodeType":"YulBlock","src":"6713:147:13","statements":[{"nativeSrc":"6723:25:13","nodeType":"YulAssignment","src":"6723:25:13","value":{"arguments":[{"name":"x","nativeSrc":"6746:1:13","nodeType":"YulIdentifier","src":"6746:1:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6728:17:13","nodeType":"YulIdentifier","src":"6728:17:13"},"nativeSrc":"6728:20:13","nodeType":"YulFunctionCall","src":"6728:20:13"},"variableNames":[{"name":"x","nativeSrc":"6723:1:13","nodeType":"YulIdentifier","src":"6723:1:13"}]},{"nativeSrc":"6757:25:13","nodeType":"YulAssignment","src":"6757:25:13","value":{"arguments":[{"name":"y","nativeSrc":"6780:1:13","nodeType":"YulIdentifier","src":"6780:1:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6762:17:13","nodeType":"YulIdentifier","src":"6762:17:13"},"nativeSrc":"6762:20:13","nodeType":"YulFunctionCall","src":"6762:20:13"},"variableNames":[{"name":"y","nativeSrc":"6757:1:13","nodeType":"YulIdentifier","src":"6757:1:13"}]},{"nativeSrc":"6791:16:13","nodeType":"YulAssignment","src":"6791:16:13","value":{"arguments":[{"name":"x","nativeSrc":"6802:1:13","nodeType":"YulIdentifier","src":"6802:1:13"},{"name":"y","nativeSrc":"6805:1:13","nodeType":"YulIdentifier","src":"6805:1:13"}],"functionName":{"name":"add","nativeSrc":"6798:3:13","nodeType":"YulIdentifier","src":"6798:3:13"},"nativeSrc":"6798:9:13","nodeType":"YulFunctionCall","src":"6798:9:13"},"variableNames":[{"name":"sum","nativeSrc":"6791:3:13","nodeType":"YulIdentifier","src":"6791:3:13"}]},{"body":{"nativeSrc":"6831:22:13","nodeType":"YulBlock","src":"6831:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6833:16:13","nodeType":"YulIdentifier","src":"6833:16:13"},"nativeSrc":"6833:18:13","nodeType":"YulFunctionCall","src":"6833:18:13"},"nativeSrc":"6833:18:13","nodeType":"YulExpressionStatement","src":"6833:18:13"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6823:1:13","nodeType":"YulIdentifier","src":"6823:1:13"},{"name":"sum","nativeSrc":"6826:3:13","nodeType":"YulIdentifier","src":"6826:3:13"}],"functionName":{"name":"gt","nativeSrc":"6820:2:13","nodeType":"YulIdentifier","src":"6820:2:13"},"nativeSrc":"6820:10:13","nodeType":"YulFunctionCall","src":"6820:10:13"},"nativeSrc":"6817:36:13","nodeType":"YulIf","src":"6817:36:13"}]},"name":"checked_add_t_uint256","nativeSrc":"6669:191:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6700:1:13","nodeType":"YulTypedName","src":"6700:1:13","type":""},{"name":"y","nativeSrc":"6703:1:13","nodeType":"YulTypedName","src":"6703:1:13","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6709:3:13","nodeType":"YulTypedName","src":"6709:3:13","type":""}],"src":"6669:191:13"},{"body":{"nativeSrc":"6972:61:13","nodeType":"YulBlock","src":"6972:61:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6994:6:13","nodeType":"YulIdentifier","src":"6994:6:13"},{"kind":"number","nativeSrc":"7002:1:13","nodeType":"YulLiteral","src":"7002:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6990:3:13","nodeType":"YulIdentifier","src":"6990:3:13"},"nativeSrc":"6990:14:13","nodeType":"YulFunctionCall","src":"6990:14:13"},{"hexValue":"41756374696f6e2068617320656e646564","kind":"string","nativeSrc":"7006:19:13","nodeType":"YulLiteral","src":"7006:19:13","type":"","value":"Auction has ended"}],"functionName":{"name":"mstore","nativeSrc":"6983:6:13","nodeType":"YulIdentifier","src":"6983:6:13"},"nativeSrc":"6983:43:13","nodeType":"YulFunctionCall","src":"6983:43:13"},"nativeSrc":"6983:43:13","nodeType":"YulExpressionStatement","src":"6983:43:13"}]},"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nativeSrc":"6866:167:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6964:6:13","nodeType":"YulTypedName","src":"6964:6:13","type":""}],"src":"6866:167:13"},{"body":{"nativeSrc":"7185:220:13","nodeType":"YulBlock","src":"7185:220:13","statements":[{"nativeSrc":"7195:74:13","nodeType":"YulAssignment","src":"7195:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"7261:3:13","nodeType":"YulIdentifier","src":"7261:3:13"},{"kind":"number","nativeSrc":"7266:2:13","nodeType":"YulLiteral","src":"7266:2:13","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7202:58:13","nodeType":"YulIdentifier","src":"7202:58:13"},"nativeSrc":"7202:67:13","nodeType":"YulFunctionCall","src":"7202:67:13"},"variableNames":[{"name":"pos","nativeSrc":"7195:3:13","nodeType":"YulIdentifier","src":"7195:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7367:3:13","nodeType":"YulIdentifier","src":"7367:3:13"}],"functionName":{"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nativeSrc":"7278:88:13","nodeType":"YulIdentifier","src":"7278:88:13"},"nativeSrc":"7278:93:13","nodeType":"YulFunctionCall","src":"7278:93:13"},"nativeSrc":"7278:93:13","nodeType":"YulExpressionStatement","src":"7278:93:13"},{"nativeSrc":"7380:19:13","nodeType":"YulAssignment","src":"7380:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"7391:3:13","nodeType":"YulIdentifier","src":"7391:3:13"},{"kind":"number","nativeSrc":"7396:2:13","nodeType":"YulLiteral","src":"7396:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7387:3:13","nodeType":"YulIdentifier","src":"7387:3:13"},"nativeSrc":"7387:12:13","nodeType":"YulFunctionCall","src":"7387:12:13"},"variableNames":[{"name":"end","nativeSrc":"7380:3:13","nodeType":"YulIdentifier","src":"7380:3:13"}]}]},"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nativeSrc":"7039:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7173:3:13","nodeType":"YulTypedName","src":"7173:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7181:3:13","nodeType":"YulTypedName","src":"7181:3:13","type":""}],"src":"7039:366:13"},{"body":{"nativeSrc":"7582:248:13","nodeType":"YulBlock","src":"7582:248:13","statements":[{"nativeSrc":"7592:26:13","nodeType":"YulAssignment","src":"7592:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"7604:9:13","nodeType":"YulIdentifier","src":"7604:9:13"},{"kind":"number","nativeSrc":"7615:2:13","nodeType":"YulLiteral","src":"7615:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7600:3:13","nodeType":"YulIdentifier","src":"7600:3:13"},"nativeSrc":"7600:18:13","nodeType":"YulFunctionCall","src":"7600:18:13"},"variableNames":[{"name":"tail","nativeSrc":"7592:4:13","nodeType":"YulIdentifier","src":"7592:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7639:9:13","nodeType":"YulIdentifier","src":"7639:9:13"},{"kind":"number","nativeSrc":"7650:1:13","nodeType":"YulLiteral","src":"7650:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7635:3:13","nodeType":"YulIdentifier","src":"7635:3:13"},"nativeSrc":"7635:17:13","nodeType":"YulFunctionCall","src":"7635:17:13"},{"arguments":[{"name":"tail","nativeSrc":"7658:4:13","nodeType":"YulIdentifier","src":"7658:4:13"},{"name":"headStart","nativeSrc":"7664:9:13","nodeType":"YulIdentifier","src":"7664:9:13"}],"functionName":{"name":"sub","nativeSrc":"7654:3:13","nodeType":"YulIdentifier","src":"7654:3:13"},"nativeSrc":"7654:20:13","nodeType":"YulFunctionCall","src":"7654:20:13"}],"functionName":{"name":"mstore","nativeSrc":"7628:6:13","nodeType":"YulIdentifier","src":"7628:6:13"},"nativeSrc":"7628:47:13","nodeType":"YulFunctionCall","src":"7628:47:13"},"nativeSrc":"7628:47:13","nodeType":"YulExpressionStatement","src":"7628:47:13"},{"nativeSrc":"7684:139:13","nodeType":"YulAssignment","src":"7684:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"7818:4:13","nodeType":"YulIdentifier","src":"7818:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nativeSrc":"7692:124:13","nodeType":"YulIdentifier","src":"7692:124:13"},"nativeSrc":"7692:131:13","nodeType":"YulFunctionCall","src":"7692:131:13"},"variableNames":[{"name":"tail","nativeSrc":"7684:4:13","nodeType":"YulIdentifier","src":"7684:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7411:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7562:9:13","nodeType":"YulTypedName","src":"7562:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7577:4:13","nodeType":"YulTypedName","src":"7577:4:13","type":""}],"src":"7411:419:13"},{"body":{"nativeSrc":"7942:124:13","nodeType":"YulBlock","src":"7942:124:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7964:6:13","nodeType":"YulIdentifier","src":"7964:6:13"},{"kind":"number","nativeSrc":"7972:1:13","nodeType":"YulLiteral","src":"7972:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7960:3:13","nodeType":"YulIdentifier","src":"7960:3:13"},"nativeSrc":"7960:14:13","nodeType":"YulFunctionCall","src":"7960:14:13"},{"hexValue":"426964206d75737420626520686967686572207468616e2063757272656e7420","kind":"string","nativeSrc":"7976:34:13","nodeType":"YulLiteral","src":"7976:34:13","type":"","value":"Bid must be higher than current "}],"functionName":{"name":"mstore","nativeSrc":"7953:6:13","nodeType":"YulIdentifier","src":"7953:6:13"},"nativeSrc":"7953:58:13","nodeType":"YulFunctionCall","src":"7953:58:13"},"nativeSrc":"7953:58:13","nodeType":"YulExpressionStatement","src":"7953:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8032:6:13","nodeType":"YulIdentifier","src":"8032:6:13"},{"kind":"number","nativeSrc":"8040:2:13","nodeType":"YulLiteral","src":"8040:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8028:3:13","nodeType":"YulIdentifier","src":"8028:3:13"},"nativeSrc":"8028:15:13","nodeType":"YulFunctionCall","src":"8028:15:13"},{"hexValue":"6869676865737420626964","kind":"string","nativeSrc":"8045:13:13","nodeType":"YulLiteral","src":"8045:13:13","type":"","value":"highest bid"}],"functionName":{"name":"mstore","nativeSrc":"8021:6:13","nodeType":"YulIdentifier","src":"8021:6:13"},"nativeSrc":"8021:38:13","nodeType":"YulFunctionCall","src":"8021:38:13"},"nativeSrc":"8021:38:13","nodeType":"YulExpressionStatement","src":"8021:38:13"}]},"name":"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","nativeSrc":"7836:230:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7934:6:13","nodeType":"YulTypedName","src":"7934:6:13","type":""}],"src":"7836:230:13"},{"body":{"nativeSrc":"8218:220:13","nodeType":"YulBlock","src":"8218:220:13","statements":[{"nativeSrc":"8228:74:13","nodeType":"YulAssignment","src":"8228:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"8294:3:13","nodeType":"YulIdentifier","src":"8294:3:13"},{"kind":"number","nativeSrc":"8299:2:13","nodeType":"YulLiteral","src":"8299:2:13","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8235:58:13","nodeType":"YulIdentifier","src":"8235:58:13"},"nativeSrc":"8235:67:13","nodeType":"YulFunctionCall","src":"8235:67:13"},"variableNames":[{"name":"pos","nativeSrc":"8228:3:13","nodeType":"YulIdentifier","src":"8228:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8400:3:13","nodeType":"YulIdentifier","src":"8400:3:13"}],"functionName":{"name":"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","nativeSrc":"8311:88:13","nodeType":"YulIdentifier","src":"8311:88:13"},"nativeSrc":"8311:93:13","nodeType":"YulFunctionCall","src":"8311:93:13"},"nativeSrc":"8311:93:13","nodeType":"YulExpressionStatement","src":"8311:93:13"},{"nativeSrc":"8413:19:13","nodeType":"YulAssignment","src":"8413:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"8424:3:13","nodeType":"YulIdentifier","src":"8424:3:13"},{"kind":"number","nativeSrc":"8429:2:13","nodeType":"YulLiteral","src":"8429:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8420:3:13","nodeType":"YulIdentifier","src":"8420:3:13"},"nativeSrc":"8420:12:13","nodeType":"YulFunctionCall","src":"8420:12:13"},"variableNames":[{"name":"end","nativeSrc":"8413:3:13","nodeType":"YulIdentifier","src":"8413:3:13"}]}]},"name":"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack","nativeSrc":"8072:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8206:3:13","nodeType":"YulTypedName","src":"8206:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8214:3:13","nodeType":"YulTypedName","src":"8214:3:13","type":""}],"src":"8072:366:13"},{"body":{"nativeSrc":"8615:248:13","nodeType":"YulBlock","src":"8615:248:13","statements":[{"nativeSrc":"8625:26:13","nodeType":"YulAssignment","src":"8625:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"8637:9:13","nodeType":"YulIdentifier","src":"8637:9:13"},{"kind":"number","nativeSrc":"8648:2:13","nodeType":"YulLiteral","src":"8648:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8633:3:13","nodeType":"YulIdentifier","src":"8633:3:13"},"nativeSrc":"8633:18:13","nodeType":"YulFunctionCall","src":"8633:18:13"},"variableNames":[{"name":"tail","nativeSrc":"8625:4:13","nodeType":"YulIdentifier","src":"8625:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8672:9:13","nodeType":"YulIdentifier","src":"8672:9:13"},{"kind":"number","nativeSrc":"8683:1:13","nodeType":"YulLiteral","src":"8683:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8668:3:13","nodeType":"YulIdentifier","src":"8668:3:13"},"nativeSrc":"8668:17:13","nodeType":"YulFunctionCall","src":"8668:17:13"},{"arguments":[{"name":"tail","nativeSrc":"8691:4:13","nodeType":"YulIdentifier","src":"8691:4:13"},{"name":"headStart","nativeSrc":"8697:9:13","nodeType":"YulIdentifier","src":"8697:9:13"}],"functionName":{"name":"sub","nativeSrc":"8687:3:13","nodeType":"YulIdentifier","src":"8687:3:13"},"nativeSrc":"8687:20:13","nodeType":"YulFunctionCall","src":"8687:20:13"}],"functionName":{"name":"mstore","nativeSrc":"8661:6:13","nodeType":"YulIdentifier","src":"8661:6:13"},"nativeSrc":"8661:47:13","nodeType":"YulFunctionCall","src":"8661:47:13"},"nativeSrc":"8661:47:13","nodeType":"YulExpressionStatement","src":"8661:47:13"},{"nativeSrc":"8717:139:13","nodeType":"YulAssignment","src":"8717:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"8851:4:13","nodeType":"YulIdentifier","src":"8851:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack","nativeSrc":"8725:124:13","nodeType":"YulIdentifier","src":"8725:124:13"},"nativeSrc":"8725:131:13","nodeType":"YulFunctionCall","src":"8725:131:13"},"variableNames":[{"name":"tail","nativeSrc":"8717:4:13","nodeType":"YulIdentifier","src":"8717:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8444:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8595:9:13","nodeType":"YulTypedName","src":"8595:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8610:4:13","nodeType":"YulTypedName","src":"8610:4:13","type":""}],"src":"8444:419:13"},{"body":{"nativeSrc":"8975:115:13","nodeType":"YulBlock","src":"8975:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8997:6:13","nodeType":"YulIdentifier","src":"8997:6:13"},{"kind":"number","nativeSrc":"9005:1:13","nodeType":"YulLiteral","src":"9005:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8993:3:13","nodeType":"YulIdentifier","src":"8993:3:13"},"nativeSrc":"8993:14:13","nodeType":"YulFunctionCall","src":"8993:14:13"},{"hexValue":"4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469","kind":"string","nativeSrc":"9009:34:13","nodeType":"YulLiteral","src":"9009:34:13","type":"","value":"Only admin can perform this acti"}],"functionName":{"name":"mstore","nativeSrc":"8986:6:13","nodeType":"YulIdentifier","src":"8986:6:13"},"nativeSrc":"8986:58:13","nodeType":"YulFunctionCall","src":"8986:58:13"},"nativeSrc":"8986:58:13","nodeType":"YulExpressionStatement","src":"8986:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9065:6:13","nodeType":"YulIdentifier","src":"9065:6:13"},{"kind":"number","nativeSrc":"9073:2:13","nodeType":"YulLiteral","src":"9073:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9061:3:13","nodeType":"YulIdentifier","src":"9061:3:13"},"nativeSrc":"9061:15:13","nodeType":"YulFunctionCall","src":"9061:15:13"},{"hexValue":"6f6e","kind":"string","nativeSrc":"9078:4:13","nodeType":"YulLiteral","src":"9078:4:13","type":"","value":"on"}],"functionName":{"name":"mstore","nativeSrc":"9054:6:13","nodeType":"YulIdentifier","src":"9054:6:13"},"nativeSrc":"9054:29:13","nodeType":"YulFunctionCall","src":"9054:29:13"},"nativeSrc":"9054:29:13","nodeType":"YulExpressionStatement","src":"9054:29:13"}]},"name":"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","nativeSrc":"8869:221:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8967:6:13","nodeType":"YulTypedName","src":"8967:6:13","type":""}],"src":"8869:221:13"},{"body":{"nativeSrc":"9242:220:13","nodeType":"YulBlock","src":"9242:220:13","statements":[{"nativeSrc":"9252:74:13","nodeType":"YulAssignment","src":"9252:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"9318:3:13","nodeType":"YulIdentifier","src":"9318:3:13"},{"kind":"number","nativeSrc":"9323:2:13","nodeType":"YulLiteral","src":"9323:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9259:58:13","nodeType":"YulIdentifier","src":"9259:58:13"},"nativeSrc":"9259:67:13","nodeType":"YulFunctionCall","src":"9259:67:13"},"variableNames":[{"name":"pos","nativeSrc":"9252:3:13","nodeType":"YulIdentifier","src":"9252:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9424:3:13","nodeType":"YulIdentifier","src":"9424:3:13"}],"functionName":{"name":"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","nativeSrc":"9335:88:13","nodeType":"YulIdentifier","src":"9335:88:13"},"nativeSrc":"9335:93:13","nodeType":"YulFunctionCall","src":"9335:93:13"},"nativeSrc":"9335:93:13","nodeType":"YulExpressionStatement","src":"9335:93:13"},{"nativeSrc":"9437:19:13","nodeType":"YulAssignment","src":"9437:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"9448:3:13","nodeType":"YulIdentifier","src":"9448:3:13"},{"kind":"number","nativeSrc":"9453:2:13","nodeType":"YulLiteral","src":"9453:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9444:3:13","nodeType":"YulIdentifier","src":"9444:3:13"},"nativeSrc":"9444:12:13","nodeType":"YulFunctionCall","src":"9444:12:13"},"variableNames":[{"name":"end","nativeSrc":"9437:3:13","nodeType":"YulIdentifier","src":"9437:3:13"}]}]},"name":"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack","nativeSrc":"9096:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9230:3:13","nodeType":"YulTypedName","src":"9230:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9238:3:13","nodeType":"YulTypedName","src":"9238:3:13","type":""}],"src":"9096:366:13"},{"body":{"nativeSrc":"9639:248:13","nodeType":"YulBlock","src":"9639:248:13","statements":[{"nativeSrc":"9649:26:13","nodeType":"YulAssignment","src":"9649:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"9661:9:13","nodeType":"YulIdentifier","src":"9661:9:13"},{"kind":"number","nativeSrc":"9672:2:13","nodeType":"YulLiteral","src":"9672:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9657:3:13","nodeType":"YulIdentifier","src":"9657:3:13"},"nativeSrc":"9657:18:13","nodeType":"YulFunctionCall","src":"9657:18:13"},"variableNames":[{"name":"tail","nativeSrc":"9649:4:13","nodeType":"YulIdentifier","src":"9649:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9696:9:13","nodeType":"YulIdentifier","src":"9696:9:13"},{"kind":"number","nativeSrc":"9707:1:13","nodeType":"YulLiteral","src":"9707:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9692:3:13","nodeType":"YulIdentifier","src":"9692:3:13"},"nativeSrc":"9692:17:13","nodeType":"YulFunctionCall","src":"9692:17:13"},{"arguments":[{"name":"tail","nativeSrc":"9715:4:13","nodeType":"YulIdentifier","src":"9715:4:13"},{"name":"headStart","nativeSrc":"9721:9:13","nodeType":"YulIdentifier","src":"9721:9:13"}],"functionName":{"name":"sub","nativeSrc":"9711:3:13","nodeType":"YulIdentifier","src":"9711:3:13"},"nativeSrc":"9711:20:13","nodeType":"YulFunctionCall","src":"9711:20:13"}],"functionName":{"name":"mstore","nativeSrc":"9685:6:13","nodeType":"YulIdentifier","src":"9685:6:13"},"nativeSrc":"9685:47:13","nodeType":"YulFunctionCall","src":"9685:47:13"},"nativeSrc":"9685:47:13","nodeType":"YulExpressionStatement","src":"9685:47:13"},{"nativeSrc":"9741:139:13","nodeType":"YulAssignment","src":"9741:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"9875:4:13","nodeType":"YulIdentifier","src":"9875:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack","nativeSrc":"9749:124:13","nodeType":"YulIdentifier","src":"9749:124:13"},"nativeSrc":"9749:131:13","nodeType":"YulFunctionCall","src":"9749:131:13"},"variableNames":[{"name":"tail","nativeSrc":"9741:4:13","nodeType":"YulIdentifier","src":"9741:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9468:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9619:9:13","nodeType":"YulTypedName","src":"9619:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9634:4:13","nodeType":"YulTypedName","src":"9634:4:13","type":""}],"src":"9468:419:13"},{"body":{"nativeSrc":"9999:119:13","nodeType":"YulBlock","src":"9999:119:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10021:6:13","nodeType":"YulIdentifier","src":"10021:6:13"},{"kind":"number","nativeSrc":"10029:1:13","nodeType":"YulLiteral","src":"10029:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10017:3:13","nodeType":"YulIdentifier","src":"10017:3:13"},"nativeSrc":"10017:14:13","nodeType":"YulFunctionCall","src":"10017:14:13"},{"hexValue":"4475726174696f6e206d7573742062652067726561746572207468616e203120","kind":"string","nativeSrc":"10033:34:13","nodeType":"YulLiteral","src":"10033:34:13","type":"","value":"Duration must be greater than 1 "}],"functionName":{"name":"mstore","nativeSrc":"10010:6:13","nodeType":"YulIdentifier","src":"10010:6:13"},"nativeSrc":"10010:58:13","nodeType":"YulFunctionCall","src":"10010:58:13"},"nativeSrc":"10010:58:13","nodeType":"YulExpressionStatement","src":"10010:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10089:6:13","nodeType":"YulIdentifier","src":"10089:6:13"},{"kind":"number","nativeSrc":"10097:2:13","nodeType":"YulLiteral","src":"10097:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10085:3:13","nodeType":"YulIdentifier","src":"10085:3:13"},"nativeSrc":"10085:15:13","nodeType":"YulFunctionCall","src":"10085:15:13"},{"hexValue":"6d696e757465","kind":"string","nativeSrc":"10102:8:13","nodeType":"YulLiteral","src":"10102:8:13","type":"","value":"minute"}],"functionName":{"name":"mstore","nativeSrc":"10078:6:13","nodeType":"YulIdentifier","src":"10078:6:13"},"nativeSrc":"10078:33:13","nodeType":"YulFunctionCall","src":"10078:33:13"},"nativeSrc":"10078:33:13","nodeType":"YulExpressionStatement","src":"10078:33:13"}]},"name":"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","nativeSrc":"9893:225:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9991:6:13","nodeType":"YulTypedName","src":"9991:6:13","type":""}],"src":"9893:225:13"},{"body":{"nativeSrc":"10270:220:13","nodeType":"YulBlock","src":"10270:220:13","statements":[{"nativeSrc":"10280:74:13","nodeType":"YulAssignment","src":"10280:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"10346:3:13","nodeType":"YulIdentifier","src":"10346:3:13"},{"kind":"number","nativeSrc":"10351:2:13","nodeType":"YulLiteral","src":"10351:2:13","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10287:58:13","nodeType":"YulIdentifier","src":"10287:58:13"},"nativeSrc":"10287:67:13","nodeType":"YulFunctionCall","src":"10287:67:13"},"variableNames":[{"name":"pos","nativeSrc":"10280:3:13","nodeType":"YulIdentifier","src":"10280:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10452:3:13","nodeType":"YulIdentifier","src":"10452:3:13"}],"functionName":{"name":"store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd","nativeSrc":"10363:88:13","nodeType":"YulIdentifier","src":"10363:88:13"},"nativeSrc":"10363:93:13","nodeType":"YulFunctionCall","src":"10363:93:13"},"nativeSrc":"10363:93:13","nodeType":"YulExpressionStatement","src":"10363:93:13"},{"nativeSrc":"10465:19:13","nodeType":"YulAssignment","src":"10465:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"10476:3:13","nodeType":"YulIdentifier","src":"10476:3:13"},{"kind":"number","nativeSrc":"10481:2:13","nodeType":"YulLiteral","src":"10481:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10472:3:13","nodeType":"YulIdentifier","src":"10472:3:13"},"nativeSrc":"10472:12:13","nodeType":"YulFunctionCall","src":"10472:12:13"},"variableNames":[{"name":"end","nativeSrc":"10465:3:13","nodeType":"YulIdentifier","src":"10465:3:13"}]}]},"name":"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack","nativeSrc":"10124:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10258:3:13","nodeType":"YulTypedName","src":"10258:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10266:3:13","nodeType":"YulTypedName","src":"10266:3:13","type":""}],"src":"10124:366:13"},{"body":{"nativeSrc":"10667:248:13","nodeType":"YulBlock","src":"10667:248:13","statements":[{"nativeSrc":"10677:26:13","nodeType":"YulAssignment","src":"10677:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"10689:9:13","nodeType":"YulIdentifier","src":"10689:9:13"},{"kind":"number","nativeSrc":"10700:2:13","nodeType":"YulLiteral","src":"10700:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10685:3:13","nodeType":"YulIdentifier","src":"10685:3:13"},"nativeSrc":"10685:18:13","nodeType":"YulFunctionCall","src":"10685:18:13"},"variableNames":[{"name":"tail","nativeSrc":"10677:4:13","nodeType":"YulIdentifier","src":"10677:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10724:9:13","nodeType":"YulIdentifier","src":"10724:9:13"},{"kind":"number","nativeSrc":"10735:1:13","nodeType":"YulLiteral","src":"10735:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10720:3:13","nodeType":"YulIdentifier","src":"10720:3:13"},"nativeSrc":"10720:17:13","nodeType":"YulFunctionCall","src":"10720:17:13"},{"arguments":[{"name":"tail","nativeSrc":"10743:4:13","nodeType":"YulIdentifier","src":"10743:4:13"},{"name":"headStart","nativeSrc":"10749:9:13","nodeType":"YulIdentifier","src":"10749:9:13"}],"functionName":{"name":"sub","nativeSrc":"10739:3:13","nodeType":"YulIdentifier","src":"10739:3:13"},"nativeSrc":"10739:20:13","nodeType":"YulFunctionCall","src":"10739:20:13"}],"functionName":{"name":"mstore","nativeSrc":"10713:6:13","nodeType":"YulIdentifier","src":"10713:6:13"},"nativeSrc":"10713:47:13","nodeType":"YulFunctionCall","src":"10713:47:13"},"nativeSrc":"10713:47:13","nodeType":"YulExpressionStatement","src":"10713:47:13"},{"nativeSrc":"10769:139:13","nodeType":"YulAssignment","src":"10769:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"10903:4:13","nodeType":"YulIdentifier","src":"10903:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack","nativeSrc":"10777:124:13","nodeType":"YulIdentifier","src":"10777:124:13"},"nativeSrc":"10777:131:13","nodeType":"YulFunctionCall","src":"10777:131:13"},"variableNames":[{"name":"tail","nativeSrc":"10769:4:13","nodeType":"YulIdentifier","src":"10769:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10496:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10647:9:13","nodeType":"YulTypedName","src":"10647:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10662:4:13","nodeType":"YulTypedName","src":"10662:4:13","type":""}],"src":"10496:419:13"},{"body":{"nativeSrc":"11027:115:13","nodeType":"YulBlock","src":"11027:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11049:6:13","nodeType":"YulIdentifier","src":"11049:6:13"},{"kind":"number","nativeSrc":"11057:1:13","nodeType":"YulLiteral","src":"11057:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11045:3:13","nodeType":"YulIdentifier","src":"11045:3:13"},"nativeSrc":"11045:14:13","nodeType":"YulFunctionCall","src":"11045:14:13"},{"hexValue":"5374617274207072696365206d7573742062652067726561746572207468616e","kind":"string","nativeSrc":"11061:34:13","nodeType":"YulLiteral","src":"11061:34:13","type":"","value":"Start price must be greater than"}],"functionName":{"name":"mstore","nativeSrc":"11038:6:13","nodeType":"YulIdentifier","src":"11038:6:13"},"nativeSrc":"11038:58:13","nodeType":"YulFunctionCall","src":"11038:58:13"},"nativeSrc":"11038:58:13","nodeType":"YulExpressionStatement","src":"11038:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11117:6:13","nodeType":"YulIdentifier","src":"11117:6:13"},{"kind":"number","nativeSrc":"11125:2:13","nodeType":"YulLiteral","src":"11125:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11113:3:13","nodeType":"YulIdentifier","src":"11113:3:13"},"nativeSrc":"11113:15:13","nodeType":"YulFunctionCall","src":"11113:15:13"},{"hexValue":"2030","kind":"string","nativeSrc":"11130:4:13","nodeType":"YulLiteral","src":"11130:4:13","type":"","value":" 0"}],"functionName":{"name":"mstore","nativeSrc":"11106:6:13","nodeType":"YulIdentifier","src":"11106:6:13"},"nativeSrc":"11106:29:13","nodeType":"YulFunctionCall","src":"11106:29:13"},"nativeSrc":"11106:29:13","nodeType":"YulExpressionStatement","src":"11106:29:13"}]},"name":"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","nativeSrc":"10921:221:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11019:6:13","nodeType":"YulTypedName","src":"11019:6:13","type":""}],"src":"10921:221:13"},{"body":{"nativeSrc":"11294:220:13","nodeType":"YulBlock","src":"11294:220:13","statements":[{"nativeSrc":"11304:74:13","nodeType":"YulAssignment","src":"11304:74:13","value":{"arguments":[{"name":"pos","nativeSrc":"11370:3:13","nodeType":"YulIdentifier","src":"11370:3:13"},{"kind":"number","nativeSrc":"11375:2:13","nodeType":"YulLiteral","src":"11375:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11311:58:13","nodeType":"YulIdentifier","src":"11311:58:13"},"nativeSrc":"11311:67:13","nodeType":"YulFunctionCall","src":"11311:67:13"},"variableNames":[{"name":"pos","nativeSrc":"11304:3:13","nodeType":"YulIdentifier","src":"11304:3:13"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11476:3:13","nodeType":"YulIdentifier","src":"11476:3:13"}],"functionName":{"name":"store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb","nativeSrc":"11387:88:13","nodeType":"YulIdentifier","src":"11387:88:13"},"nativeSrc":"11387:93:13","nodeType":"YulFunctionCall","src":"11387:93:13"},"nativeSrc":"11387:93:13","nodeType":"YulExpressionStatement","src":"11387:93:13"},{"nativeSrc":"11489:19:13","nodeType":"YulAssignment","src":"11489:19:13","value":{"arguments":[{"name":"pos","nativeSrc":"11500:3:13","nodeType":"YulIdentifier","src":"11500:3:13"},{"kind":"number","nativeSrc":"11505:2:13","nodeType":"YulLiteral","src":"11505:2:13","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11496:3:13","nodeType":"YulIdentifier","src":"11496:3:13"},"nativeSrc":"11496:12:13","nodeType":"YulFunctionCall","src":"11496:12:13"},"variableNames":[{"name":"end","nativeSrc":"11489:3:13","nodeType":"YulIdentifier","src":"11489:3:13"}]}]},"name":"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack","nativeSrc":"11148:366:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11282:3:13","nodeType":"YulTypedName","src":"11282:3:13","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11290:3:13","nodeType":"YulTypedName","src":"11290:3:13","type":""}],"src":"11148:366:13"},{"body":{"nativeSrc":"11691:248:13","nodeType":"YulBlock","src":"11691:248:13","statements":[{"nativeSrc":"11701:26:13","nodeType":"YulAssignment","src":"11701:26:13","value":{"arguments":[{"name":"headStart","nativeSrc":"11713:9:13","nodeType":"YulIdentifier","src":"11713:9:13"},{"kind":"number","nativeSrc":"11724:2:13","nodeType":"YulLiteral","src":"11724:2:13","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11709:3:13","nodeType":"YulIdentifier","src":"11709:3:13"},"nativeSrc":"11709:18:13","nodeType":"YulFunctionCall","src":"11709:18:13"},"variableNames":[{"name":"tail","nativeSrc":"11701:4:13","nodeType":"YulIdentifier","src":"11701:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11748:9:13","nodeType":"YulIdentifier","src":"11748:9:13"},{"kind":"number","nativeSrc":"11759:1:13","nodeType":"YulLiteral","src":"11759:1:13","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11744:3:13","nodeType":"YulIdentifier","src":"11744:3:13"},"nativeSrc":"11744:17:13","nodeType":"YulFunctionCall","src":"11744:17:13"},{"arguments":[{"name":"tail","nativeSrc":"11767:4:13","nodeType":"YulIdentifier","src":"11767:4:13"},{"name":"headStart","nativeSrc":"11773:9:13","nodeType":"YulIdentifier","src":"11773:9:13"}],"functionName":{"name":"sub","nativeSrc":"11763:3:13","nodeType":"YulIdentifier","src":"11763:3:13"},"nativeSrc":"11763:20:13","nodeType":"YulFunctionCall","src":"11763:20:13"}],"functionName":{"name":"mstore","nativeSrc":"11737:6:13","nodeType":"YulIdentifier","src":"11737:6:13"},"nativeSrc":"11737:47:13","nodeType":"YulFunctionCall","src":"11737:47:13"},"nativeSrc":"11737:47:13","nodeType":"YulExpressionStatement","src":"11737:47:13"},{"nativeSrc":"11793:139:13","nodeType":"YulAssignment","src":"11793:139:13","value":{"arguments":[{"name":"tail","nativeSrc":"11927:4:13","nodeType":"YulIdentifier","src":"11927:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack","nativeSrc":"11801:124:13","nodeType":"YulIdentifier","src":"11801:124:13"},"nativeSrc":"11801:131:13","nodeType":"YulFunctionCall","src":"11801:131:13"},"variableNames":[{"name":"tail","nativeSrc":"11793:4:13","nodeType":"YulIdentifier","src":"11793:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11520:419:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11671:9:13","nodeType":"YulTypedName","src":"11671:9:13","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11686:4:13","nodeType":"YulTypedName","src":"11686:4:13","type":""}],"src":"11520:419:13"},{"body":{"nativeSrc":"11988:190:13","nodeType":"YulBlock","src":"11988:190:13","statements":[{"nativeSrc":"11998:33:13","nodeType":"YulAssignment","src":"11998:33:13","value":{"arguments":[{"name":"value","nativeSrc":"12025:5:13","nodeType":"YulIdentifier","src":"12025:5:13"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12007:17:13","nodeType":"YulIdentifier","src":"12007:17:13"},"nativeSrc":"12007:24:13","nodeType":"YulFunctionCall","src":"12007:24:13"},"variableNames":[{"name":"value","nativeSrc":"11998:5:13","nodeType":"YulIdentifier","src":"11998:5:13"}]},{"body":{"nativeSrc":"12121:22:13","nodeType":"YulBlock","src":"12121:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12123:16:13","nodeType":"YulIdentifier","src":"12123:16:13"},"nativeSrc":"12123:18:13","nodeType":"YulFunctionCall","src":"12123:18:13"},"nativeSrc":"12123:18:13","nodeType":"YulExpressionStatement","src":"12123:18:13"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"12046:5:13","nodeType":"YulIdentifier","src":"12046:5:13"},{"kind":"number","nativeSrc":"12053:66:13","nodeType":"YulLiteral","src":"12053:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"12043:2:13","nodeType":"YulIdentifier","src":"12043:2:13"},"nativeSrc":"12043:77:13","nodeType":"YulFunctionCall","src":"12043:77:13"},"nativeSrc":"12040:103:13","nodeType":"YulIf","src":"12040:103:13"},{"nativeSrc":"12152:20:13","nodeType":"YulAssignment","src":"12152:20:13","value":{"arguments":[{"name":"value","nativeSrc":"12163:5:13","nodeType":"YulIdentifier","src":"12163:5:13"},{"kind":"number","nativeSrc":"12170:1:13","nodeType":"YulLiteral","src":"12170:1:13","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"12159:3:13","nodeType":"YulIdentifier","src":"12159:3:13"},"nativeSrc":"12159:13:13","nodeType":"YulFunctionCall","src":"12159:13:13"},"variableNames":[{"name":"ret","nativeSrc":"12152:3:13","nodeType":"YulIdentifier","src":"12152:3:13"}]}]},"name":"increment_t_uint256","nativeSrc":"11945:233:13","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11974:5:13","nodeType":"YulTypedName","src":"11974:5:13","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"11984:3:13","nodeType":"YulTypedName","src":"11984:3:13","type":""}],"src":"11945:233:13"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than current \")\n\n        mstore(add(memPtr, 32), \"highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can perform this acti\")\n\n        mstore(add(memPtr, 32), \"on\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than 1 \")\n\n        mstore(add(memPtr, 32), \"minute\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ce8ab662af9605b979f91c950438b2f1143991bd319ba11048a562c427231fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start price must be greater than\")\n\n        mstore(add(memPtr, 32), \" 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a8a7223d722c275f75f70797315a0101e361257445048d25caca3b4650bd31fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c8063b1cb48ef1161004e578063b1cb48ef14610123578063c97c63531461014c578063f851a44014610177578063fc528482146101a25761007b565b806326232a2e14610080578063571a26a0146100ab5780638129fc1c146100f05780639979ef4514610107575b600080fd5b34801561008c57600080fd5b506100956101cd565b6040516100a29190610a0f565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610a5b565b6101d3565b6040516100e799989796959493929190610ae4565b60405180910390f35b3480156100fc57600080fd5b5061010561028e565b005b610121600480360381019061011c9190610a5b565b610454565b005b34801561012f57600080fd5b5061014a60048036038101906101459190610b9d565b610648565b005b34801561015857600080fd5b5061016161094e565b60405161016e9190610c94565b60405180910390f35b34801561018357600080fd5b5061018c61098b565b6040516101999190610cb6565b60405180910390f35b3480156101ae57600080fd5b506101b76109b1565b6040516101c49190610a0f565b60405180910390f35b60035481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070154905089565b60006102986109b7565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156102e65750825b9050600060018367ffffffffffffffff1614801561031b575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610329575080155b15610360576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156103b05760018560000160086101000a81548160ff0219169083151502179055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550831561044d5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104449190610d2a565b60405180910390a15b5050505050565b600080600083815260200190815260200160002090508060040160009054906101000a900460ff1615801561049b575042816001015482600201546104999190610d74565b115b6104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190610df4565b60405180910390fd5b8060050154341180156104f1575080600301543410155b610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790610e86565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f8578060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600501549081150290604051600060405180830381858888f193505050501580156105f6573d6000803e3d6000fd5b505b338160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503481600501819055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf90610f18565b60405180910390fd5b61ea60841161071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390610faa565b60405180910390fd5b6000831161075f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107569061103c565b60405180910390fd5b6040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185426107939190610d74565b8152602001428152602001848152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816005015560e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160070155905050600160008154809291906109439061105c565b919050555050505050565b60606040518060400160405280600d81526020017f48656c6c6f2c20576f726c642100000000000000000000000000000000000000815250905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806109c26109cb565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6000819050919050565b610a09816109f6565b82525050565b6000602082019050610a246000830184610a00565b92915050565b600080fd5b610a38816109f6565b8114610a4357600080fd5b50565b600081359050610a5581610a2f565b92915050565b600060208284031215610a7157610a70610a2a565b5b6000610a7f84828501610a46565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab382610a88565b9050919050565b610ac381610aa8565b82525050565b60008115159050919050565b610ade81610ac9565b82525050565b600061012082019050610afa600083018c610aba565b610b07602083018b610a00565b610b14604083018a610a00565b610b216060830189610a00565b610b2e6080830188610ad5565b610b3b60a0830187610aba565b610b4860c0830186610a00565b610b5560e0830185610aba565b610b63610100830184610a00565b9a9950505050505050505050565b610b7a81610aa8565b8114610b8557600080fd5b50565b600081359050610b9781610b71565b92915050565b60008060008060808587031215610bb757610bb6610a2a565b5b6000610bc587828801610a46565b9450506020610bd687828801610a46565b9350506040610be787828801610b88565b9250506060610bf887828801610a46565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c3e578082015181840152602081019050610c23565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c6682610c04565b610c708185610c0f565b9350610c80818560208601610c20565b610c8981610c4a565b840191505092915050565b60006020820190508181036000830152610cae8184610c5b565b905092915050565b6000602082019050610ccb6000830184610aba565b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000610d14610d0f610d0a84610cd1565b610cef565b610cdb565b9050919050565b610d2481610cf9565b82525050565b6000602082019050610d3f6000830184610d1b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7f826109f6565b9150610d8a836109f6565b9250828201905080821115610da257610da1610d45565b5b92915050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000610dde601183610c0f565b9150610de982610da8565b602082019050919050565b60006020820190508181036000830152610e0d81610dd1565b9050919050565b7f426964206d75737420626520686967686572207468616e2063757272656e742060008201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b6000610e70602b83610c0f565b9150610e7b82610e14565b604082019050919050565b60006020820190508181036000830152610e9f81610e63565b9050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f02602283610c0f565b9150610f0d82610ea6565b604082019050919050565b60006020820190508181036000830152610f3181610ef5565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e20312060008201527f6d696e7574650000000000000000000000000000000000000000000000000000602082015250565b6000610f94602683610c0f565b9150610f9f82610f38565b604082019050919050565b60006020820190508181036000830152610fc381610f87565b9050919050565b7f5374617274207072696365206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000611026602283610c0f565b915061103182610fca565b604082019050919050565b6000602082019050818103600083015261105581611019565b9050919050565b6000611067826109f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361109957611098610d45565b5b60018201905091905056fea26469706673582212205319dfe45f8487875f227633752d312cda6d718f6ef703bb1da10744c680416264736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CB48EF GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xB1CB48EF EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xC97C6353 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xFC528482 EQ PUSH2 0x1A2 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x9979EF45 EQ PUSH2 0x107 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298 PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x2E6 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x31B JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x329 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI POP TIMESTAMP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST GT JUMPDEST PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD CALLVALUE GT DUP1 ISZERO PUSH2 0x4F1 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO JUMPDEST PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F8 JUMPI DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x5 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CF SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA60 DUP5 GT PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x793 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x943 SWAP1 PUSH2 0x105C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F2C20576F726C642100000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9C2 PUSH2 0x9CB JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA09 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA38 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP2 EQ PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA55 DUP2 PUSH2 0xA2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xA2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA7F DUP5 DUP3 DUP6 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP3 PUSH2 0xA88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC3 DUP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0xAC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0xAFA PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB07 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB14 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB21 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB2E PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0xB3B PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB48 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0xA00 JUMP JUMPDEST PUSH2 0xB55 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0xABA JUMP JUMPDEST PUSH2 0xB63 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0xA00 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB7A DUP2 PUSH2 0xAA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB97 DUP2 PUSH2 0xB71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0xA2A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBC5 DUP8 DUP3 DUP9 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xBD6 DUP8 DUP3 DUP9 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xBE7 DUP8 DUP3 DUP9 ADD PUSH2 0xB88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xBF8 DUP8 DUP3 DUP9 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC3E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP3 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0xC70 DUP2 DUP6 PUSH2 0xC0F JUMP JUMPDEST SWAP4 POP PUSH2 0xC80 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC89 DUP2 PUSH2 0xC4A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCAE DUP2 DUP5 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH2 0xD0F PUSH2 0xD0A DUP5 PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD24 DUP2 PUSH2 0xCF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD7F DUP3 PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8A DUP4 PUSH2 0x9F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA2 JUMPI PUSH2 0xDA1 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDE PUSH1 0x11 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 DUP3 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0D DUP2 PUSH2 0xDD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE70 PUSH1 0x2B DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP3 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9F DUP2 PUSH2 0xE63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF02 PUSH1 0x22 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xF0D DUP3 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF31 DUP2 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203120 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D696E7574650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 PUSH1 0x26 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0xF9F DUP3 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC3 DUP2 PUSH2 0xF87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374617274207072696365206D7573742062652067726561746572207468616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1026 PUSH1 0x22 DUP4 PUSH2 0xC0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1031 DUP3 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1055 DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1067 DUP3 PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1099 JUMPI PUSH2 0x1098 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 NOT 0xDF 0xE4 PUSH0 DUP5 DUP8 DUP8 PUSH0 0x22 PUSH23 0x33752D312CDA6D718F6EF703BB1DA10744C68041626473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"213:2455:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;761:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;302:76;;;;;;;;;;;;;:::i;:::-;;1887:677;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1173:682;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2569:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;844:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;810:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:26;;;;:::o;761:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;302:76::-;4158:30:0;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;361:10:12::1;353:5;;:18;;;;;;;;;;;;;;;;;;5068:14:0::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;302:76:12:o;1887:677::-;1952:23;1978:8;:20;1987:10;1978:20;;;;;;;;;;;1952:46;;2067:7;:13;;;;;;;;;;;;2066:14;:72;;;;;2123:15;2104:7;:16;;;2084:7;:17;;;:36;;;;:::i;:::-;:54;2066:72;2058:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2190:7;:18;;;2178:9;:30;:65;;;;;2225:7;:18;;;2212:9;:31;;2178:65;2170:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2385:1;2352:35;;:7;:21;;;;;;;;;;;;:35;;;2348:125;;2411:7;:21;;;;;;;;;;;;2403:39;;:59;2443:7;:18;;;2403:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:125;2507:10;2483:7;:21;;;:34;;;;;;;;;;;;;;;;;;2548:9;2527:7;:18;;:30;;;;1942:622;1887:677;:::o;1173:682::-;1086:5;;;;;;;;;;;1072:19;;:10;:19;;;1064:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1322:9:::1;1310;:21;1302:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1406:1;1392:11;:15;1384:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1483:339;;;;;;;;1513:10;1483:339;;;;;;1565:9;1547:15;:27;;;;:::i;:::-;1483:339;;;;1599:15;1483:339;;;;1640:11;1483:339;;;;1672:5;1483:339;;;;;;1714:1;1483:339;;;;;;1742:1;1483:339;;;;1769:11;1483:339;;;;;;1803:8;1483:339;;::::0;1457:8:::1;:23:::0;1466:13:::1;;1457:23;;;;;;;;;;;:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:13;;:15;;;;;;;;;:::i;:::-;;;;;;1173:682:::0;;;;:::o;2569:96::-;2611:13;2636:22;;;;;;;;;;;;;;;;;;;2569:96;:::o;844:20::-;;;;;;;;;;;;;:::o;810:28::-;;;;:::o;9071:205:0:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:90::-;1769:7;1812:5;1805:13;1798:21;1787:32;;1735:90;;;:::o;1831:109::-;1912:21;1927:5;1912:21;:::i;:::-;1907:3;1900:34;1831:109;;:::o;1946:1096::-;2257:4;2295:3;2284:9;2280:19;2272:27;;2309:71;2377:1;2366:9;2362:17;2353:6;2309:71;:::i;:::-;2390:72;2458:2;2447:9;2443:18;2434:6;2390:72;:::i;:::-;2472;2540:2;2529:9;2525:18;2516:6;2472:72;:::i;:::-;2554;2622:2;2611:9;2607:18;2598:6;2554:72;:::i;:::-;2636:67;2698:3;2687:9;2683:19;2674:6;2636:67;:::i;:::-;2713:73;2781:3;2770:9;2766:19;2757:6;2713:73;:::i;:::-;2796;2864:3;2853:9;2849:19;2840:6;2796:73;:::i;:::-;2879;2947:3;2936:9;2932:19;2923:6;2879:73;:::i;:::-;2962;3030:3;3019:9;3015:19;3006:6;2962:73;:::i;:::-;1946:1096;;;;;;;;;;;;:::o;3048:122::-;3121:24;3139:5;3121:24;:::i;:::-;3114:5;3111:35;3101:63;;3160:1;3157;3150:12;3101:63;3048:122;:::o;3176:139::-;3222:5;3260:6;3247:20;3238:29;;3276:33;3303:5;3276:33;:::i;:::-;3176:139;;;;:::o;3321:765::-;3407:6;3415;3423;3431;3480:3;3468:9;3459:7;3455:23;3451:33;3448:120;;;3487:79;;:::i;:::-;3448:120;3607:1;3632:53;3677:7;3668:6;3657:9;3653:22;3632:53;:::i;:::-;3622:63;;3578:117;3734:2;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3705:118;3862:2;3888:53;3933:7;3924:6;3913:9;3909:22;3888:53;:::i;:::-;3878:63;;3833:118;3990:2;4016:53;4061:7;4052:6;4041:9;4037:22;4016:53;:::i;:::-;4006:63;;3961:118;3321:765;;;;;;;:::o;4092:99::-;4144:6;4178:5;4172:12;4162:22;;4092:99;;;:::o;4197:169::-;4281:11;4315:6;4310:3;4303:19;4355:4;4350:3;4346:14;4331:29;;4197:169;;;;:::o;4372:248::-;4454:1;4464:113;4478:6;4475:1;4472:13;4464:113;;;4563:1;4558:3;4554:11;4548:18;4544:1;4539:3;4535:11;4528:39;4500:2;4497:1;4493:10;4488:15;;4464:113;;;4611:1;4602:6;4597:3;4593:16;4586:27;4434:186;4372:248;;;:::o;4626:102::-;4667:6;4718:2;4714:7;4709:2;4702:5;4698:14;4694:28;4684:38;;4626:102;;;:::o;4734:377::-;4822:3;4850:39;4883:5;4850:39;:::i;:::-;4905:71;4969:6;4964:3;4905:71;:::i;:::-;4898:78;;4985:65;5043:6;5038:3;5031:4;5024:5;5020:16;4985:65;:::i;:::-;5075:29;5097:6;5075:29;:::i;:::-;5070:3;5066:39;5059:46;;4826:285;4734:377;;;;:::o;5117:313::-;5230:4;5268:2;5257:9;5253:18;5245:26;;5317:9;5311:4;5307:20;5303:1;5292:9;5288:17;5281:47;5345:78;5418:4;5409:6;5345:78;:::i;:::-;5337:86;;5117:313;;;;:::o;5436:222::-;5529:4;5567:2;5556:9;5552:18;5544:26;;5580:71;5648:1;5637:9;5633:17;5624:6;5580:71;:::i;:::-;5436:222;;;;:::o;5664:85::-;5709:7;5738:5;5727:16;;5664:85;;;:::o;5755:101::-;5791:7;5831:18;5824:5;5820:30;5809:41;;5755:101;;;:::o;5862:60::-;5890:3;5911:5;5904:12;;5862:60;;;:::o;5928:156::-;5985:9;6018:60;6035:42;6044:32;6070:5;6044:32;:::i;:::-;6035:42;:::i;:::-;6018:60;:::i;:::-;6005:73;;5928:156;;;:::o;6090:145::-;6184:44;6222:5;6184:44;:::i;:::-;6179:3;6172:57;6090:145;;:::o;6241:236::-;6341:4;6379:2;6368:9;6364:18;6356:26;;6392:78;6467:1;6456:9;6452:17;6443:6;6392:78;:::i;:::-;6241:236;;;;:::o;6483:180::-;6531:77;6528:1;6521:88;6628:4;6625:1;6618:15;6652:4;6649:1;6642:15;6669:191;6709:3;6728:20;6746:1;6728:20;:::i;:::-;6723:25;;6762:20;6780:1;6762:20;:::i;:::-;6757:25;;6805:1;6802;6798:9;6791:16;;6826:3;6823:1;6820:10;6817:36;;;6833:18;;:::i;:::-;6817:36;6669:191;;;;:::o;6866:167::-;7006:19;7002:1;6994:6;6990:14;6983:43;6866:167;:::o;7039:366::-;7181:3;7202:67;7266:2;7261:3;7202:67;:::i;:::-;7195:74;;7278:93;7367:3;7278:93;:::i;:::-;7396:2;7391:3;7387:12;7380:19;;7039:366;;;:::o;7411:419::-;7577:4;7615:2;7604:9;7600:18;7592:26;;7664:9;7658:4;7654:20;7650:1;7639:9;7635:17;7628:47;7692:131;7818:4;7692:131;:::i;:::-;7684:139;;7411:419;;;:::o;7836:230::-;7976:34;7972:1;7964:6;7960:14;7953:58;8045:13;8040:2;8032:6;8028:15;8021:38;7836:230;:::o;8072:366::-;8214:3;8235:67;8299:2;8294:3;8235:67;:::i;:::-;8228:74;;8311:93;8400:3;8311:93;:::i;:::-;8429:2;8424:3;8420:12;8413:19;;8072:366;;;:::o;8444:419::-;8610:4;8648:2;8637:9;8633:18;8625:26;;8697:9;8691:4;8687:20;8683:1;8672:9;8668:17;8661:47;8725:131;8851:4;8725:131;:::i;:::-;8717:139;;8444:419;;;:::o;8869:221::-;9009:34;9005:1;8997:6;8993:14;8986:58;9078:4;9073:2;9065:6;9061:15;9054:29;8869:221;:::o;9096:366::-;9238:3;9259:67;9323:2;9318:3;9259:67;:::i;:::-;9252:74;;9335:93;9424:3;9335:93;:::i;:::-;9453:2;9448:3;9444:12;9437:19;;9096:366;;;:::o;9468:419::-;9634:4;9672:2;9661:9;9657:18;9649:26;;9721:9;9715:4;9711:20;9707:1;9696:9;9692:17;9685:47;9749:131;9875:4;9749:131;:::i;:::-;9741:139;;9468:419;;;:::o;9893:225::-;10033:34;10029:1;10021:6;10017:14;10010:58;10102:8;10097:2;10089:6;10085:15;10078:33;9893:225;:::o;10124:366::-;10266:3;10287:67;10351:2;10346:3;10287:67;:::i;:::-;10280:74;;10363:93;10452:3;10363:93;:::i;:::-;10481:2;10476:3;10472:12;10465:19;;10124:366;;;:::o;10496:419::-;10662:4;10700:2;10689:9;10685:18;10677:26;;10749:9;10743:4;10739:20;10735:1;10724:9;10720:17;10713:47;10777:131;10903:4;10777:131;:::i;:::-;10769:139;;10496:419;;;:::o;10921:221::-;11061:34;11057:1;11049:6;11045:14;11038:58;11130:4;11125:2;11117:6;11113:15;11106:29;10921:221;:::o;11148:366::-;11290:3;11311:67;11375:2;11370:3;11311:67;:::i;:::-;11304:74;;11387:93;11476:3;11387:93;:::i;:::-;11505:2;11500:3;11496:12;11489:19;;11148:366;;;:::o;11520:419::-;11686:4;11724:2;11713:9;11709:18;11701:26;;11773:9;11767:4;11763:20;11759:1;11748:9;11744:17;11737:47;11801:131;11927:4;11801:131;:::i;:::-;11793:139;;11520:419;;;:::o;11945:233::-;11984:3;12007:24;12025:5;12007:24;:::i;:::-;11998:33;;12053:66;12046:5;12043:77;12040:103;;12123:18;;:::i;:::-;12040:103;12170:1;12163:5;12159:13;12152:20;;11945:233;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"862800","executionCost":"896","totalCost":"863696"},"external":{"admin()":"2558","auctions(uint256)":"infinite","createAuction(uint256,uint256,address,uint256)":"infinite","initialize()":"105967","nextAuctionId()":"2495","placeBid(uint256)":"infinite","platformFee()":"2430","testHello()":"infinite"}},"methodIdentifiers":{"admin()":"f851a440","auctions(uint256)":"571a26a0","createAuction(uint256,uint256,address,uint256)":"b1cb48ef","initialize()":"8129fc1c","nextAuctionId()":"fc528482","placeBid(uint256)":"9979ef45","platformFee()":"26232a2e","testHello()":"c97c6353"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAuctionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testHello\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTAuction_v2.sol\":\"NFTAuctionV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/NFTAuction_v2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n// upgrade contract\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract NFTAuctionV2 is Initializable {\\n    // \\u521d\\u59cb\\u5316\\u51fd\\u6570\\uff0c\\u66ff\\u4ee3\\u6784\\u9020\\u51fd\\u6570\\n    function initialize() public initializer {\\n        admin = msg.sender;\\n    }\\n\\n    // Auction contract code goes here\\n    struct Auction {\\n        address seller;\\n        uint256 duration;\\n        uint256 startTime;\\n        uint256 startPrice;\\n        bool ended;\\n        address highestBidder;\\n        uint256 highestBid;\\n\\n        // NFT \\u5408\\u7ea6\\u5730\\u5740\\n        address nftAddress;\\n        // NFT \\u4ee3\\u5e01ID\\n        uint256 tokenId;\\n    }\\n\\n    // \\u72b6\\u6001\\u53d8\\u91cf\\n    mapping(uint256 => Auction) public auctions;\\n    uint256 public nextAuctionId;\\n    address public admin;\\n    uint256 public platformFee; // \\u5e73\\u53f0\\u624b\\u7eed\\u8d39\\uff0c\\u5355\\u4f4d\\u4e3a\\u767e\\u5206\\u6bd4\\uff08\\u4f8b\\u5982\\uff1a2 \\u8868\\u793a 2%\\uff09\\n    // constructor () {\\n    //     admin = msg.sender;\\n    // }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Only admin can perform this action\\\");\\n        _;\\n    }\\n    // \\u521b\\u5efa\\u62cd\\u5356\\n    function createAuction(uint256 _duration, uint256 _startPrice, address _nftAddress, uint256 _tokenId) public onlyAdmin {\\n        require(_duration > 1000 * 60, \\\"Duration must be greater than 1 minute\\\");\\n        require(_startPrice > 0, \\\"Start price must be greater than 0\\\");\\n\\n        auctions[nextAuctionId] = Auction({\\n            seller: msg.sender,\\n            duration: block.timestamp + _duration,\\n            startTime: block.timestamp,\\n            startPrice: _startPrice,\\n            ended: false,\\n            highestBidder: address(0),\\n            highestBid: 0,\\n            nftAddress: _nftAddress,\\n            tokenId: _tokenId\\n        });\\n\\n        nextAuctionId++;\\n    }\\n\\n    // \\u4e70\\u5bb6\\u53c2\\u4e0e\\u62cd\\u5356\\n    function placeBid(uint256 _auctionId) external payable {\\n        Auction storage auction = auctions[_auctionId];\\n        // \\u62cd\\u5356\\u7ed3\\u675fflag && \\u62cd\\u5356\\u65f6\\u95f4\\u672a\\u5230\\n        require(!auction.ended && auction.startTime + auction.duration > block.timestamp, \\\"Auction has ended\\\");\\n        require(msg.value > auction.highestBid && msg.value >= auction.startPrice, \\\"Bid must be higher than current highest bid\\\");\\n\\n        // Refund the previous highest bidder\\n        if (auction.highestBidder != address(0)) {\\n            payable(auction.highestBidder).transfer(auction.highestBid);\\n        }\\n\\n        auction.highestBidder = msg.sender;\\n        auction.highestBid = msg.value;\\n    }\\n    function testHello() public pure returns (string memory) {\\n        return \\\"Hello, World!\\\";\\n    }\\n\\n}\",\"keccak256\":\"0x0789d01a762db64edb168619ee12872af4d284cc52ce9fdf48ecaaa3e5f51d4b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1574,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"auctions","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_struct(Auction)1569_storage)"},{"astId":1576,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"nextAuctionId","offset":0,"slot":"1","type":"t_uint256"},{"astId":1578,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"admin","offset":0,"slot":"2","type":"t_address"},{"astId":1580,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"platformFee","offset":0,"slot":"3","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_uint256,t_struct(Auction)1569_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NFTAuctionV2.Auction)","numberOfBytes":"32","value":"t_struct(Auction)1569_storage"},"t_struct(Auction)1569_storage":{"encoding":"inplace","label":"struct NFTAuctionV2.Auction","members":[{"astId":1552,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"seller","offset":0,"slot":"0","type":"t_address"},{"astId":1554,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"duration","offset":0,"slot":"1","type":"t_uint256"},{"astId":1556,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"startTime","offset":0,"slot":"2","type":"t_uint256"},{"astId":1558,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"startPrice","offset":0,"slot":"3","type":"t_uint256"},{"astId":1560,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"ended","offset":0,"slot":"4","type":"t_bool"},{"astId":1562,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"highestBidder","offset":1,"slot":"4","type":"t_address"},{"astId":1564,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"highestBid","offset":0,"slot":"5","type":"t_uint256"},{"astId":1566,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"nftAddress","offset":0,"slot":"6","type":"t_address"},{"astId":1568,"contract":"contracts/NFTAuction_v2.sol:NFTAuctionV2","label":"tokenId","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}